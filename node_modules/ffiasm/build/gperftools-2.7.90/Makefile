# Makefile.in generated by automake 1.16.1 from Makefile.am.
# Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994-2018 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.



# Note: for every library we create, we're explicit about what symbols
# we export.  In order to avoid complications with C++ mangling, we always
# use the regexp for of specifying symbols.






am__is_gnu_make = { \
  if test -z '$(MAKELEVEL)'; then \
    false; \
  elif test -n '$(MAKE_HOST)'; then \
    true; \
  elif test -n '$(MAKE_VERSION)' && test -n '$(CURDIR)'; then \
    true; \
  else \
    false; \
  fi; \
}
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/gperftools
pkgincludedir = $(includedir)/gperftools
pkglibdir = $(libdir)/gperftools
pkglibexecdir = $(libexecdir)/gperftools
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = x86_64-apple-darwin19.4.0
host_triplet = x86_64-apple-darwin19.4.0
#am__append_1 = -DNO_TCMALLOC_SAMPLES

# These are good warnings to turn on by default.  We also tell gcc
# that malloc, free, realloc, mmap, etc. are not builtins (these flags
# are supported since gcc 3.1.1).  gcc doesn't think most of them are
# builtins now in any case, but it's best to be explicit in case that
# changes one day.  gcc ignores functions it doesn't understand.
am__append_2 = -Wall -Wwrite-strings -Woverloaded-virtual \
               -Wno-sign-compare \
               -fno-builtin-malloc -fno-builtin-free -fno-builtin-realloc \
               -fno-builtin-calloc -fno-builtin-cfree \
               -fno-builtin-memalign -fno-builtin-posix_memalign \
               -fno-builtin-valloc -fno-builtin-pvalloc

am__append_3 = -fno-builtin

# On i386, -mmmx is needed for the mmx-based instructions in
# atomicops-internal-x86.h. Also as of gcc 4.6, -fomit-frame-pointer
# is the default. Since we must always have frame pointers for I386
# in order to generate backtraces we now specify -fno-omit-frame-pointer
# by default.
#am__append_4 = -mmmx -fno-omit-frame-pointer
am__append_5 = -Wno-unused-result
am__append_6 = -fsized-deallocation
am__append_7 = -faligned-new

# These are x86-specific, having to do with frame-pointers.  In
# particular, some x86_64 systems do not insert frame pointers by
# default (all i386 systems that I know of, do.  I don't know about
# non-x86 chips).  We need to tell perftools what to do about that.
##am__append_8 = -fno-omit-frame-pointer
#am__append_9 = -DNO_FRAME_POINTER
#am__append_10 = -Wl,-u__tcmalloc
TESTS = low_level_alloc_unittest$(EXEEXT) atomicops_unittest$(EXEEXT) \
	$(am__EXEEXT_11) tcmalloc_minimal_unittest$(EXEEXT) \
	tcm_min_asserts_unittest$(EXEEXT) \
	tcmalloc_minimal_large_unittest$(EXEEXT) \
	tcmalloc_minimal_large_heap_fragmentation_unittest$(EXEEXT) \
	$(am__append_24) addressmap_unittest$(EXEEXT) $(am__EXEEXT_12) \
	packed_cache_test$(EXEEXT) frag_unittest$(EXEEXT) \
	markidle_unittest$(EXEEXT) \
	current_allocated_bytes_test$(EXEEXT) \
	malloc_hook_test$(EXEEXT) malloc_extension_test$(EXEEXT) \
	$(am__EXEEXT_13) $(am__EXEEXT_14) page_heap_test$(EXEEXT) \
	pagemap_unittest$(EXEEXT) realloc_unittest$(EXEEXT) \
	stack_trace_table_test$(EXEEXT) \
	thread_dealloc_unittest$(EXEEXT) $(am__EXEEXT_15) \
	$(am__EXEEXT_16) $(am__EXEEXT_17) $(am__append_36) \
	$(am__append_51) $(am__EXEEXT_18) $(am__EXEEXT_19) \
	$(am__EXEEXT_20) $(am__append_61) $(am__EXEEXT_21) \
	$(am__append_70) $(am__append_72) $(am__EXEEXT_22) \
	$(am__EXEEXT_23)
noinst_PROGRAMS = $(am__EXEEXT_1) $(am__EXEEXT_2) $(am__EXEEXT_3) \
	$(am__EXEEXT_4) $(am__EXEEXT_5) $(am__EXEEXT_6) \
	$(am__EXEEXT_7) $(am__EXEEXT_8) $(am__EXEEXT_9) \
	$(am__EXEEXT_10) $(am__EXEEXT_24)
bin_PROGRAMS =
#am__append_11 = libwindows.la libspinlock.la

# We also need to tell mingw that sysinfo.cc needs shlwapi.lib.
# (We do this via a #pragma for msvc, but need to do it here for mingw).
#am__append_12 = -lshlwapi
# windows has its own system for threads and system memory allocation.
#am__append_13 = src/maybe_threads.cc
am__append_14 = libspinlock.la
am__append_15 = src/maybe_threads.cc
am__append_16 = $(SG_STACKTRACE_INCLUDES)

### Making the library
am__append_17 = libstacktrace.la \
	libfake_stacktrace_scope.la

### Unittests
am__append_18 = stacktrace_unittest

### Documentation
am__append_19 = 

# Let unittests find pprof if they need to run it
am__append_20 = PPROF_PATH=$(top_srcdir)/src/pprof
am__append_21 = src/pprof
am__append_22 = docs/pprof_remote_servers.html

### Documentation

# On MSVC, we need our own versions of addr2line and nm to work with pprof.
# This is a slight abuse of WINDOWS_PROJECTS, but not much
am__append_23 =  \
	vsprojects/nm-pdb/nm-pdb.vcxproj \
	vsprojects/addr2line-pdb/addr2line-pdb.vcxproj \
	src/windows/nm-pdb.c \
	src/windows/addr2line-pdb.c

# This tests it works to LD_PRELOAD libtcmalloc (tests maybe_threads.cc)
# In theory this should work under mingw, but mingw has trouble running
# shell scripts that end in .exe.  And it doesn't seem to build shared
# libraries anyway (so can't be LD_PRELOADed) -- in fact, anybody who
# chooses not to build shared libraries won't be able to run this test.
# TODO(csilvers): figure out how to nix ".exe" or otherwise work under mingw
#am__append_24 = maybe_threads_unittest.sh$(EXEEXT)
#am__append_25 = $(maybe_threads_unittest_sh_SOURCES)
#am__append_26 = src/windows/port.h src/windows/port.cc
am__append_27 = system_alloc_unittest

# This doesn't work with mingw, which links foo.a even though it
# doesn't set ENABLE_STATIC.  TODO(csilvers): set enable_static=true
# in configure.ac:36?
am__append_28 = malloc_extension_c_test
# -ansi here is just to help ensure the code is bog-standard C.
am__append_29 = -ansi
#am__append_30 = memalign_unittest

### ------- tcmalloc_minimal_debug (thread-caching malloc with debugallocation)
am__append_31 = libtcmalloc_minimal_debug.la
am__append_32 = libtcmalloc_minimal_debug.la

### Unittests
am__append_33 = tcmalloc_minimal_debug_unittest \
	malloc_extension_debug_test
#am__append_34 = memalign_debug_unittest
am__append_35 = realloc_debug_unittest

# debugallocation_test checks that we print a proper stacktrace when
# debug-allocs fail, so we can't run it if we don't have stacktrace info.
am__append_36 = debugallocation_test.sh$(EXEEXT)
am__append_37 = $(debugallocation_test_sh_SOURCES)

# This is the sub-program used by debugallocation_test.sh
am__append_38 = debugallocation_test
am__append_39 = librun_benchmark.la
am__append_40 = malloc_bench malloc_bench_shared \
	binary_trees binary_trees_shared

am__append_41 = -static
am__append_42 = malloc_bench_shared_full
am__append_43 = -static
am__append_44 = $(SG_TCMALLOC_INCLUDES)

### Making the library
am__append_45 = libtcmalloc_internal.la
am__append_46 = libtcmalloc.la
#am__append_47 = $(HEAP_CHECKER_SOURCES)
am__append_48 = -DNO_HEAP_CHECK
am__append_49 = -DNO_HEAP_CHECK
am__append_50 = libtcmalloc.la

### Unittests
am__append_51 = tcmalloc_unittest.sh$(EXEEXT)
am__append_52 = $(tcmalloc_unittest_sh_SOURCES) \
	$(sampling_test_sh_SOURCES)

# This is the sub-program used by sampling_test.sh
# The -g is so pprof can get symbol information.
am__append_53 = tcmalloc_unittest \
	sampling_test
#am__append_54 = tcmalloc_both_unittest
am__append_55 =  \
	tcmalloc_large_unittest \
	tcmalloc_large_heap_fragmentation_unittest \
	raw_printer_test \
	sampler_test \
	sampling_test.sh$(EXEEXT)

# sampler_test and sampling_test both require sampling to be turned
# on, which it's not by default.  Use the "standard" value of 2^19.

# These unittests often need to run binaries.  They're in the current dir
am__append_56 = TCMALLOC_SAMPLE_PARAMETER=524288 \
	BINDIR=. \
	TMPDIR=/tmp/perftools
am__append_57 = vsprojects/sampler_test/sampler_test.vcxproj

# Tests the compatibility include-headers in google/.  Requires a function
# defined in the heap-profiler, which is why the test lives here.
am__append_58 =  \
	heap-profiler_unittest.sh$(EXEEXT) \
	simple_compat_test
am__append_59 = $(heap_profiler_unittest_sh_SOURCES)

# These are sub-programs used by heap-profiler_unittest.sh
am__append_60 = heap-profiler_unittest
#am__append_61 =  \
#	heap-checker_unittest.sh$(EXEEXT) \
#	heap-checker-death_unittest.sh$(EXEEXT)
#am__append_62 =  \
#	$(heap_checker_unittest_sh_SOURCES) \
#	$(top_srcdir)/$(heap_checker_death_unittest_sh_SOURCES)

# These are sub-programs used by heap-checker_unittest.sh
#am__append_63 = heap-checker_unittest

### Documentation (above and beyond tcmalloc_minimal documentation)
am__append_64 = docs/heapprofile.html docs/heap-example1.png
#am__append_65 = docs/heap_checker.html

### ------- tcmalloc with debugallocation
am__append_66 = libtcmalloc_debug.la
am__append_67 = libtcmalloc_debug.la

### Unittests
am__append_68 = tcmalloc_debug_unittest \
	sampler_debug_test \
	sampling_debug_test.sh$(EXEEXT)

# This is the sub-program using by sampling_debug_test.sh
# The -g is so pprof can get symbol information.
am__append_69 = sampling_debug_test
am__append_70 = heap-profiler_debug_unittest.sh$(EXEEXT)

# These are sub-programs used by heap-profiler_debug_unittest.sh
am__append_71 = heap-profiler_debug_unittest
#am__append_72 = heap-checker_debug_unittest.sh$(EXEEXT)

# These are sub-programs used by heap-checker_debug_unittest.sh
#am__append_73 = heap-checker_debug_unittest
am__append_74 = $(SG_CPU_PROFILER_INCLUDES)

### Making the library
am__append_75 = libprofiler.la

### Unittests
am__append_76 = getpc_test \
	profiledata_unittest \
	profile_handler_unittest \
	profiler_unittest.sh$(EXEEXT)
am__append_77 = $(profiler_unittest_sh_SOURCES)

# These are sub-programs used by profiler_unittest.sh
am__append_78 = profiler1_unittest profiler2_unittest profiler3_unittest \
                   profiler4_unittest

#profiler2_unittest_DEPENDENCIES =

### Documentation
am__append_79 = docs/cpuprofile.html \
                 docs/cpuprofile-fileformat.html \
                 docs/pprof-test-big.gif \
                 docs/pprof-test.gif \
                 docs/pprof-vsnprintf-big.gif \
                 docs/pprof-vsnprintf.gif


### ------- CPU profiler and heap checker, in one!

# Ideally, folks who wanted to use both tcmalloc and libprofiler,
# could just link them both into their application.  But while this
# works fine for .so files, it does not for .a files.  The easiest way
# around this -- and I've tried a bunch of the hard ways -- is to just
# to create another set of libraries that has both functionality in it.
am__append_80 = libtcmalloc_and_profiler.la
am__append_81 = tcmalloc_and_profiler_unittest
am__append_82 = libtcmalloc_and_profiler.la
subdir = .
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/m4/ac_have_attribute.m4 \
	$(top_srcdir)/m4/acx_nanosleep.m4 \
	$(top_srcdir)/m4/acx_pthread.m4 \
	$(top_srcdir)/m4/ax_cxx_compile_stdcxx.m4 \
	$(top_srcdir)/m4/ax_generate_changelog.m4 \
	$(top_srcdir)/m4/compiler_characteristics.m4 \
	$(top_srcdir)/m4/install_prefix.m4 $(top_srcdir)/m4/libtool.m4 \
	$(top_srcdir)/m4/ltoptions.m4 $(top_srcdir)/m4/ltsugar.m4 \
	$(top_srcdir)/m4/ltversion.m4 $(top_srcdir)/m4/lt~obsolete.m4 \
	$(top_srcdir)/m4/namespaces.m4 \
	$(top_srcdir)/m4/pc_from_ucontext.m4 \
	$(top_srcdir)/m4/program_invocation_name.m4 \
	$(top_srcdir)/m4/stl_namespace.m4 $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
DIST_COMMON = $(srcdir)/Makefile.am $(top_srcdir)/configure \
	$(am__configure_deps) $(am__dist_doc_DATA_DIST) \
	$(googleinclude_HEADERS) $(noinst_HEADERS) \
	$(am__perftoolsinclude_HEADERS_DIST) $(am__DIST_COMMON)
am__CONFIG_DISTCLEAN_FILES = config.status config.cache config.log \
 configure.lineno config.status.lineno
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/src/config.h
CONFIG_CLEAN_FILES = src/gperftools/tcmalloc.h \
	src/windows/gperftools/tcmalloc.h
CONFIG_CLEAN_VPATH_FILES =
am__installdirs = "$(DESTDIR)$(bindir)" "$(DESTDIR)$(libdir)" \
	"$(DESTDIR)$(bindir)" "$(DESTDIR)$(man1dir)" \
	"$(DESTDIR)$(docdir)" "$(DESTDIR)$(pkgconfigdir)" \
	"$(DESTDIR)$(googleincludedir)" \
	"$(DESTDIR)$(perftoolsincludedir)" \
	"$(DESTDIR)$(perftoolsincludedir)"
am__EXEEXT_1 = debugallocation_test$(EXEEXT)
am__EXEEXT_2 = malloc_bench$(EXEEXT) \
	malloc_bench_shared$(EXEEXT) \
	binary_trees$(EXEEXT) \
	binary_trees_shared$(EXEEXT)
am__EXEEXT_3 = malloc_bench_shared_full$(EXEEXT)
am__EXEEXT_4 = tcmalloc_unittest$(EXEEXT) \
	sampling_test$(EXEEXT)
am__EXEEXT_5 =  \
	heap-profiler_unittest$(EXEEXT)
#am__EXEEXT_6 = heap-checker_unittest$(EXEEXT)
am__EXEEXT_7 = sampling_debug_test$(EXEEXT)
am__EXEEXT_8 = heap-profiler_debug_unittest$(EXEEXT)
#am__EXEEXT_9 = heap-checker_debug_unittest$(EXEEXT)
am__EXEEXT_10 = profiler1_unittest$(EXEEXT) \
	profiler2_unittest$(EXEEXT) \
	profiler3_unittest$(EXEEXT) \
	profiler4_unittest$(EXEEXT)
am__EXEEXT_11 = stacktrace_unittest$(EXEEXT)
am__EXEEXT_12 = system_alloc_unittest$(EXEEXT)
am__EXEEXT_13 = malloc_extension_c_test$(EXEEXT)
#am__EXEEXT_14 = memalign_unittest$(EXEEXT)
am__EXEEXT_15 = tcmalloc_minimal_debug_unittest$(EXEEXT) \
	malloc_extension_debug_test$(EXEEXT)
#am__EXEEXT_16 = memalign_debug_unittest$(EXEEXT)
am__EXEEXT_17 = realloc_debug_unittest$(EXEEXT)
#am__EXEEXT_18 = tcmalloc_both_unittest$(EXEEXT)
am__EXEEXT_19 = tcmalloc_large_unittest$(EXEEXT) \
	tcmalloc_large_heap_fragmentation_unittest$(EXEEXT) \
	raw_printer_test$(EXEEXT) \
	sampler_test$(EXEEXT) \
	sampling_test.sh$(EXEEXT)
am__EXEEXT_20 =  \
	heap-profiler_unittest.sh$(EXEEXT) \
	simple_compat_test$(EXEEXT)
am__EXEEXT_21 = tcmalloc_debug_unittest$(EXEEXT) \
	sampler_debug_test$(EXEEXT) \
	sampling_debug_test.sh$(EXEEXT)
am__EXEEXT_22 = getpc_test$(EXEEXT) \
	profiledata_unittest$(EXEEXT) \
	profile_handler_unittest$(EXEEXT) \
	profiler_unittest.sh$(EXEEXT)
am__EXEEXT_23 = tcmalloc_and_profiler_unittest$(EXEEXT)
am__EXEEXT_24 = low_level_alloc_unittest$(EXEEXT) \
	atomicops_unittest$(EXEEXT) $(am__EXEEXT_11) \
	tcmalloc_minimal_unittest$(EXEEXT) \
	tcm_min_asserts_unittest$(EXEEXT) \
	tcmalloc_minimal_large_unittest$(EXEEXT) \
	tcmalloc_minimal_large_heap_fragmentation_unittest$(EXEEXT) \
	$(am__append_24) addressmap_unittest$(EXEEXT) $(am__EXEEXT_12) \
	packed_cache_test$(EXEEXT) frag_unittest$(EXEEXT) \
	markidle_unittest$(EXEEXT) \
	current_allocated_bytes_test$(EXEEXT) \
	malloc_hook_test$(EXEEXT) malloc_extension_test$(EXEEXT) \
	$(am__EXEEXT_13) $(am__EXEEXT_14) page_heap_test$(EXEEXT) \
	pagemap_unittest$(EXEEXT) realloc_unittest$(EXEEXT) \
	stack_trace_table_test$(EXEEXT) \
	thread_dealloc_unittest$(EXEEXT) $(am__EXEEXT_15) \
	$(am__EXEEXT_16) $(am__EXEEXT_17) $(am__append_36) \
	$(am__append_51) $(am__EXEEXT_18) $(am__EXEEXT_19) \
	$(am__EXEEXT_20) $(am__append_61) $(am__EXEEXT_21) \
	$(am__append_70) $(am__append_72) $(am__EXEEXT_22) \
	$(am__EXEEXT_23)
PROGRAMS = $(bin_PROGRAMS) $(noinst_PROGRAMS)
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__uninstall_files_from_dir = { \
  test -z "$$files" \
    || { test ! -d "$$dir" && test ! -f "$$dir" && test ! -r "$$dir"; } \
    || { echo " ( cd '$$dir' && rm -f" $$files ")"; \
         $(am__cd) "$$dir" && rm -f $$files; }; \
  }
LTLIBRARIES = $(lib_LTLIBRARIES) $(noinst_LTLIBRARIES)
libfake_stacktrace_scope_la_LIBADD =
am__libfake_stacktrace_scope_la_SOURCES_DIST =  \
	src/fake_stacktrace_scope.cc
am__dirstamp = $(am__leading_dot)dirstamp
am_libfake_stacktrace_scope_la_OBJECTS =  \
	src/fake_stacktrace_scope.lo
libfake_stacktrace_scope_la_OBJECTS =  \
	$(am_libfake_stacktrace_scope_la_OBJECTS)
AM_V_lt = $(am__v_lt_$(V))
am__v_lt_ = $(am__v_lt_$(AM_DEFAULT_VERBOSITY))
am__v_lt_0 = --silent
am__v_lt_1 = 
am_libfake_stacktrace_scope_la_rpath =
liblogging_la_LIBADD =
am__objects_1 =
am_liblogging_la_OBJECTS = src/base/logging.lo \
	src/base/dynamic_annotations.lo $(am__objects_1)
liblogging_la_OBJECTS = $(am_liblogging_la_OBJECTS)
libmaybe_threads_la_LIBADD =
am__libmaybe_threads_la_SOURCES_DIST = src/maybe_threads.h \
	src/maybe_threads.cc
#am__objects_2 = src/maybe_threads.lo
am__objects_3 = src/maybe_threads.lo
am_libmaybe_threads_la_OBJECTS = $(am__objects_2) $(am__objects_3)
libmaybe_threads_la_OBJECTS = $(am_libmaybe_threads_la_OBJECTS)
libprofiler_la_DEPENDENCIES =  \
	libstacktrace.la libmaybe_threads.la \
	libfake_stacktrace_scope.la
am__libprofiler_la_SOURCES_DIST = src/profiler.cc \
	src/profile-handler.cc src/profiledata.cc src/profiledata.h \
	src/profile-handler.h src/getpc.h src/base/basictypes.h \
	src/base/commandlineflags.h src/base/googleinit.h \
	src/base/logging.h src/base/simple_mutex.h src/base/sysinfo.h \
	src/base/spinlock.h src/base/spinlock_internal.h \
	src/base/atomicops.h src/base/atomicops-internals-macosx.h \
	src/base/atomicops-internals-linuxppc.h \
	src/base/atomicops-internals-windows.h \
	src/base/atomicops-internals-x86.h \
	src/base/spinlock_win32-inl.h src/base/spinlock_linux-inl.h \
	src/base/spinlock_posix-inl.h \
	src/base/atomicops-internals-arm-generic.h \
	src/base/atomicops-internals-arm-v6plus.h \
	src/base/atomicops-internals-mips.h \
	src/base/atomicops-internals-gcc.h \
	src/base/dynamic_annotations.h src/third_party/valgrind.h \
	src/gperftools/profiler.h src/gperftools/stacktrace.h
am__objects_4 = $(am__objects_1) \
	$(am__objects_1)
am__objects_5 = $(am__objects_4) \
	$(am__objects_1) $(am__objects_1)
am_libprofiler_la_OBJECTS = src/profiler.lo \
	src/profile-handler.lo \
	src/profiledata.lo $(am__objects_5)
libprofiler_la_OBJECTS = $(am_libprofiler_la_OBJECTS)
libprofiler_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(AM_CXXFLAGS) $(CXXFLAGS) $(libprofiler_la_LDFLAGS) \
	$(LDFLAGS) -o $@
am_libprofiler_la_rpath = -rpath $(libdir)
librun_benchmark_la_LIBADD =
am__librun_benchmark_la_SOURCES_DIST = benchmark/run_benchmark.c \
	benchmark/run_benchmark.h
am_librun_benchmark_la_OBJECTS =  \
	benchmark/run_benchmark.lo
librun_benchmark_la_OBJECTS = $(am_librun_benchmark_la_OBJECTS)
am_librun_benchmark_la_rpath =
am__DEPENDENCIES_1 =
libspinlock_la_DEPENDENCIES = $(am__DEPENDENCIES_1)
am__libspinlock_la_SOURCES_DIST = src/base/spinlock.cc \
	src/base/spinlock_internal.cc \
	src/base/atomicops-internals-x86.cc src/base/spinlock.h \
	src/base/spinlock_internal.h src/base/atomicops.h \
	src/base/atomicops-internals-macosx.h \
	src/base/atomicops-internals-linuxppc.h \
	src/base/atomicops-internals-windows.h \
	src/base/atomicops-internals-x86.h \
	src/base/spinlock_win32-inl.h src/base/spinlock_linux-inl.h \
	src/base/spinlock_posix-inl.h \
	src/base/atomicops-internals-arm-generic.h \
	src/base/atomicops-internals-arm-v6plus.h \
	src/base/atomicops-internals-mips.h \
	src/base/atomicops-internals-gcc.h
am_libspinlock_la_OBJECTS = src/base/spinlock.lo \
	src/base/spinlock_internal.lo \
	src/base/atomicops-internals-x86.lo \
	$(am__objects_1)
#am_libspinlock_la_OBJECTS = src/base/spinlock.lo \
#	src/base/spinlock_internal.lo \
#	src/base/atomicops-internals-x86.lo \
#	$(am__objects_1)
libspinlock_la_OBJECTS = $(am_libspinlock_la_OBJECTS)
am_libspinlock_la_rpath =
#am_libspinlock_la_rpath =
libstacktrace_la_DEPENDENCIES =  \
	$(am__DEPENDENCIES_1) $(LIBSPINLOCK)
am__libstacktrace_la_SOURCES_DIST = src/stacktrace.cc \
	src/base/elf_mem_image.cc src/base/vdso_support.cc \
	src/stacktrace_impl_setup-inl.h src/stacktrace_generic-inl.h \
	src/stacktrace_libgcc-inl.h src/stacktrace_libunwind-inl.h \
	src/stacktrace_arm-inl.h src/stacktrace_powerpc-inl.h \
	src/stacktrace_powerpc-darwin-inl.h \
	src/stacktrace_powerpc-linux-inl.h src/stacktrace_x86-inl.h \
	src/stacktrace_win32-inl.h src/stacktrace_instrument-inl.h \
	src/base/elf_mem_image.h src/base/vdso_support.h \
	src/gperftools/stacktrace.h
am__objects_6 = $(am__objects_1) \
	$(am__objects_1)
am_libstacktrace_la_OBJECTS =  \
	src/stacktrace.lo \
	src/base/elf_mem_image.lo \
	src/base/vdso_support.lo \
	$(am__objects_6)
libstacktrace_la_OBJECTS = $(am_libstacktrace_la_OBJECTS)
libstacktrace_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(AM_CXXFLAGS) $(CXXFLAGS) $(libstacktrace_la_LDFLAGS) \
	$(LDFLAGS) -o $@
am_libstacktrace_la_rpath =
libsysinfo_la_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am_libsysinfo_la_OBJECTS = src/base/sysinfo.lo $(am__objects_1)
libsysinfo_la_OBJECTS = $(am_libsysinfo_la_OBJECTS)
libtcmalloc_la_DEPENDENCIES =  \
	libtcmalloc_internal.la \
	libmaybe_threads.la \
	$(am__DEPENDENCIES_1)
am__libtcmalloc_la_SOURCES_DIST = src/tcmalloc.cc src/common.h \
	src/internal_logging.h src/system-alloc.h \
	src/packed-cache-inl.h src/base/spinlock.h \
	src/base/spinlock_internal.h src/base/atomicops.h \
	src/base/atomicops-internals-macosx.h \
	src/base/atomicops-internals-linuxppc.h \
	src/base/atomicops-internals-windows.h \
	src/base/atomicops-internals-x86.h \
	src/base/spinlock_win32-inl.h src/base/spinlock_linux-inl.h \
	src/base/spinlock_posix-inl.h \
	src/base/atomicops-internals-arm-generic.h \
	src/base/atomicops-internals-arm-v6plus.h \
	src/base/atomicops-internals-mips.h \
	src/base/atomicops-internals-gcc.h src/tcmalloc_guard.h \
	src/base/commandlineflags.h src/base/basictypes.h \
	src/pagemap.h src/sampler.h src/central_freelist.h \
	src/linked_list.h src/libc_override.h \
	src/libc_override_gcc_and_weak.h src/libc_override_glibc.h \
	src/libc_override_osx.h src/libc_override_redefine.h \
	src/page_heap.h src/page_heap_allocator.h src/span.h \
	src/static_vars.h src/symbolize.h src/thread_cache.h \
	src/stack_trace_table.h src/base/thread_annotations.h \
	src/malloc_hook-inl.h src/malloc_hook_mmap_linux.h \
	src/malloc_hook_mmap_freebsd.h src/base/logging.h \
	src/base/dynamic_annotations.h src/third_party/valgrind.h \
	src/addressmap-inl.h src/raw_printer.h src/base/elfcore.h \
	src/base/googleinit.h src/base/linux_syscall_support.h \
	src/base/linuxthreads.h src/base/stl_allocator.h \
	src/base/sysinfo.h src/base/thread_lister.h \
	src/heap-profile-table.h src/heap-profile-stats.h \
	src/maybe_emergency_malloc.h src/emergency_malloc.h \
	src/gperftools/malloc_hook.h src/gperftools/malloc_hook_c.h \
	src/gperftools/malloc_extension.h \
	src/gperftools/malloc_extension_c.h src/gperftools/nallocx.h \
	src/gperftools/heap-profiler.h src/gperftools/heap-checker.h \
	src/gperftools/stacktrace.h src/base/thread_lister.c \
	src/base/linuxthreads.cc src/heap-checker.cc \
	src/heap-checker-bcad.cc
am__objects_7 = src/libtcmalloc_la-tcmalloc.lo
am__objects_8 = $(am__objects_1)
am__objects_9 = $(am__objects_8) \
	$(am__objects_1)
am__objects_10 = $(am__objects_9) \
	$(am__objects_1) \
	$(am__objects_1) \
	$(am__objects_1)
#am__objects_11 = src/base/thread_lister.lo \
#	src/base/libtcmalloc_la-linuxthreads.lo \
#	src/libtcmalloc_la-heap-checker.lo \
#	src/libtcmalloc_la-heap-checker-bcad.lo
#am__objects_12 = $(am__objects_11)
am_libtcmalloc_la_OBJECTS =  \
	$(am__objects_7) \
	$(am__objects_10) \
	$(am__objects_12)
libtcmalloc_la_OBJECTS = $(am_libtcmalloc_la_OBJECTS)
libtcmalloc_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(libtcmalloc_la_CXXFLAGS) $(CXXFLAGS) \
	$(libtcmalloc_la_LDFLAGS) $(LDFLAGS) -o $@
am_libtcmalloc_la_rpath = -rpath \
	$(libdir)
am__DEPENDENCIES_2 =  \
	libtcmalloc_internal.la \
	libmaybe_threads.la \
	$(am__DEPENDENCIES_1)
libtcmalloc_and_profiler_la_DEPENDENCIES = $(am__DEPENDENCIES_2)
am__libtcmalloc_and_profiler_la_SOURCES_DIST = src/tcmalloc.cc \
	src/common.h src/internal_logging.h src/system-alloc.h \
	src/packed-cache-inl.h src/base/spinlock.h \
	src/base/spinlock_internal.h src/base/atomicops.h \
	src/base/atomicops-internals-macosx.h \
	src/base/atomicops-internals-linuxppc.h \
	src/base/atomicops-internals-windows.h \
	src/base/atomicops-internals-x86.h \
	src/base/spinlock_win32-inl.h src/base/spinlock_linux-inl.h \
	src/base/spinlock_posix-inl.h \
	src/base/atomicops-internals-arm-generic.h \
	src/base/atomicops-internals-arm-v6plus.h \
	src/base/atomicops-internals-mips.h \
	src/base/atomicops-internals-gcc.h src/tcmalloc_guard.h \
	src/base/commandlineflags.h src/base/basictypes.h \
	src/pagemap.h src/sampler.h src/central_freelist.h \
	src/linked_list.h src/libc_override.h \
	src/libc_override_gcc_and_weak.h src/libc_override_glibc.h \
	src/libc_override_osx.h src/libc_override_redefine.h \
	src/page_heap.h src/page_heap_allocator.h src/span.h \
	src/static_vars.h src/symbolize.h src/thread_cache.h \
	src/stack_trace_table.h src/base/thread_annotations.h \
	src/malloc_hook-inl.h src/malloc_hook_mmap_linux.h \
	src/malloc_hook_mmap_freebsd.h src/base/logging.h \
	src/base/dynamic_annotations.h src/third_party/valgrind.h \
	src/addressmap-inl.h src/raw_printer.h src/base/elfcore.h \
	src/base/googleinit.h src/base/linux_syscall_support.h \
	src/base/linuxthreads.h src/base/stl_allocator.h \
	src/base/sysinfo.h src/base/thread_lister.h \
	src/heap-profile-table.h src/heap-profile-stats.h \
	src/maybe_emergency_malloc.h src/emergency_malloc.h \
	src/gperftools/malloc_hook.h src/gperftools/malloc_hook_c.h \
	src/gperftools/malloc_extension.h \
	src/gperftools/malloc_extension_c.h src/gperftools/nallocx.h \
	src/gperftools/heap-profiler.h src/gperftools/heap-checker.h \
	src/gperftools/stacktrace.h src/base/thread_lister.c \
	src/base/linuxthreads.cc src/heap-checker.cc \
	src/heap-checker-bcad.cc src/profiler.cc \
	src/profile-handler.cc src/profiledata.cc src/profiledata.h \
	src/profile-handler.h src/getpc.h src/base/simple_mutex.h \
	src/gperftools/profiler.h
am__objects_13 =  \
	src/libtcmalloc_and_profiler_la-tcmalloc.lo
#am__objects_14 = src/base/thread_lister.lo \
#	src/base/libtcmalloc_and_profiler_la-linuxthreads.lo \
#	src/libtcmalloc_and_profiler_la-heap-checker.lo \
#	src/libtcmalloc_and_profiler_la-heap-checker-bcad.lo
#am__objects_15 = $(am__objects_14)
am__objects_16 =  \
	$(am__objects_13) \
	$(am__objects_10) \
	$(am__objects_15)
am__objects_17 = src/libtcmalloc_and_profiler_la-profiler.lo \
	src/libtcmalloc_and_profiler_la-profile-handler.lo \
	src/libtcmalloc_and_profiler_la-profiledata.lo \
	$(am__objects_5)
am_libtcmalloc_and_profiler_la_OBJECTS = $(am__objects_16) \
	$(am__objects_17)
libtcmalloc_and_profiler_la_OBJECTS =  \
	$(am_libtcmalloc_and_profiler_la_OBJECTS)
libtcmalloc_and_profiler_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(libtcmalloc_and_profiler_la_CXXFLAGS) $(CXXFLAGS) \
	$(libtcmalloc_and_profiler_la_LDFLAGS) $(LDFLAGS) -o $@
am_libtcmalloc_and_profiler_la_rpath = -rpath \
	$(libdir)
libtcmalloc_debug_la_DEPENDENCIES = $(am__DEPENDENCIES_2)
am__libtcmalloc_debug_la_SOURCES_DIST = src/debugallocation.cc \
	src/base/thread_lister.c src/base/linuxthreads.cc \
	src/heap-checker.cc src/heap-checker-bcad.cc src/common.h \
	src/internal_logging.h src/system-alloc.h \
	src/packed-cache-inl.h src/base/spinlock.h \
	src/base/spinlock_internal.h src/base/atomicops.h \
	src/base/atomicops-internals-macosx.h \
	src/base/atomicops-internals-linuxppc.h \
	src/base/atomicops-internals-windows.h \
	src/base/atomicops-internals-x86.h \
	src/base/spinlock_win32-inl.h src/base/spinlock_linux-inl.h \
	src/base/spinlock_posix-inl.h \
	src/base/atomicops-internals-arm-generic.h \
	src/base/atomicops-internals-arm-v6plus.h \
	src/base/atomicops-internals-mips.h \
	src/base/atomicops-internals-gcc.h src/tcmalloc_guard.h \
	src/base/commandlineflags.h src/base/basictypes.h \
	src/pagemap.h src/sampler.h src/central_freelist.h \
	src/linked_list.h src/libc_override.h \
	src/libc_override_gcc_and_weak.h src/libc_override_glibc.h \
	src/libc_override_osx.h src/libc_override_redefine.h \
	src/page_heap.h src/page_heap_allocator.h src/span.h \
	src/static_vars.h src/symbolize.h src/thread_cache.h \
	src/stack_trace_table.h src/base/thread_annotations.h \
	src/malloc_hook-inl.h src/malloc_hook_mmap_linux.h \
	src/malloc_hook_mmap_freebsd.h src/base/logging.h \
	src/base/dynamic_annotations.h src/third_party/valgrind.h \
	src/addressmap-inl.h src/raw_printer.h src/base/elfcore.h \
	src/base/googleinit.h src/base/linux_syscall_support.h \
	src/base/linuxthreads.h src/base/stl_allocator.h \
	src/base/sysinfo.h src/base/thread_lister.h \
	src/heap-profile-table.h src/heap-profile-stats.h \
	src/maybe_emergency_malloc.h src/emergency_malloc.h \
	src/gperftools/malloc_hook.h src/gperftools/malloc_hook_c.h \
	src/gperftools/malloc_extension.h \
	src/gperftools/malloc_extension_c.h src/gperftools/nallocx.h \
	src/gperftools/heap-profiler.h src/gperftools/heap-checker.h \
	src/gperftools/stacktrace.h
#am__objects_18 = src/base/thread_lister.lo \
#	src/base/libtcmalloc_debug_la-linuxthreads.lo \
#	src/libtcmalloc_debug_la-heap-checker.lo \
#	src/libtcmalloc_debug_la-heap-checker-bcad.lo
am_libtcmalloc_debug_la_OBJECTS = src/libtcmalloc_debug_la-debugallocation.lo \
	$(am__objects_18) \
	$(am__objects_10)
libtcmalloc_debug_la_OBJECTS = $(am_libtcmalloc_debug_la_OBJECTS)
libtcmalloc_debug_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(libtcmalloc_debug_la_CXXFLAGS) $(CXXFLAGS) \
	$(libtcmalloc_debug_la_LDFLAGS) $(LDFLAGS) -o $@
am_libtcmalloc_debug_la_rpath = -rpath \
	$(libdir)
libtcmalloc_internal_la_DEPENDENCIES =  \
	libstacktrace.la \
	$(am__DEPENDENCIES_1)
am__libtcmalloc_internal_la_SOURCES_DIST = src/common.cc \
	src/internal_logging.cc src/system-alloc.cc \
	src/memfs_malloc.cc src/central_freelist.cc src/page_heap.cc \
	src/sampler.cc src/span.cc src/stack_trace_table.cc \
	src/static_vars.cc src/symbolize.cc src/thread_cache.cc \
	src/malloc_hook.cc src/malloc_extension.cc src/common.h \
	src/internal_logging.h src/system-alloc.h \
	src/packed-cache-inl.h src/base/spinlock.h \
	src/base/spinlock_internal.h src/base/atomicops.h \
	src/base/atomicops-internals-macosx.h \
	src/base/atomicops-internals-linuxppc.h \
	src/base/atomicops-internals-windows.h \
	src/base/atomicops-internals-x86.h \
	src/base/spinlock_win32-inl.h src/base/spinlock_linux-inl.h \
	src/base/spinlock_posix-inl.h \
	src/base/atomicops-internals-arm-generic.h \
	src/base/atomicops-internals-arm-v6plus.h \
	src/base/atomicops-internals-mips.h \
	src/base/atomicops-internals-gcc.h src/tcmalloc_guard.h \
	src/base/commandlineflags.h src/base/basictypes.h \
	src/pagemap.h src/sampler.h src/central_freelist.h \
	src/linked_list.h src/libc_override.h \
	src/libc_override_gcc_and_weak.h src/libc_override_glibc.h \
	src/libc_override_osx.h src/libc_override_redefine.h \
	src/page_heap.h src/page_heap_allocator.h src/span.h \
	src/static_vars.h src/symbolize.h src/thread_cache.h \
	src/stack_trace_table.h src/base/thread_annotations.h \
	src/malloc_hook-inl.h src/malloc_hook_mmap_linux.h \
	src/malloc_hook_mmap_freebsd.h src/gperftools/malloc_hook.h \
	src/gperftools/malloc_hook_c.h \
	src/gperftools/malloc_extension.h \
	src/gperftools/malloc_extension_c.h src/gperftools/nallocx.h \
	src/gperftools/stacktrace.h src/base/logging.h \
	src/base/dynamic_annotations.h src/third_party/valgrind.h \
	src/addressmap-inl.h src/raw_printer.h src/base/elfcore.h \
	src/base/googleinit.h src/base/linux_syscall_support.h \
	src/base/linuxthreads.h src/base/stl_allocator.h \
	src/base/sysinfo.h src/base/thread_lister.h \
	src/heap-profile-table.h src/heap-profile-stats.h \
	src/maybe_emergency_malloc.h src/emergency_malloc.h \
	src/gperftools/heap-profiler.h src/gperftools/heap-checker.h \
	src/base/low_level_alloc.cc src/heap-profile-table.cc \
	src/heap-profiler.cc src/raw_printer.cc \
	src/fake_stacktrace_scope.cc src/emergency_malloc.cc \
	src/emergency_malloc_for_stacktrace.cc \
	src/memory_region_map.cc
am__objects_19 =  \
	src/libtcmalloc_internal_la-system-alloc.lo
am__objects_20 = $(am__objects_8) $(am__objects_1) $(am__objects_1)
am__objects_21 = src/libtcmalloc_internal_la-common.lo \
	src/libtcmalloc_internal_la-internal_logging.lo \
	$(am__objects_19) src/libtcmalloc_internal_la-memfs_malloc.lo \
	src/libtcmalloc_internal_la-central_freelist.lo \
	src/libtcmalloc_internal_la-page_heap.lo \
	src/libtcmalloc_internal_la-sampler.lo \
	src/libtcmalloc_internal_la-span.lo \
	src/libtcmalloc_internal_la-stack_trace_table.lo \
	src/libtcmalloc_internal_la-static_vars.lo \
	src/libtcmalloc_internal_la-symbolize.lo \
	src/libtcmalloc_internal_la-thread_cache.lo \
	src/libtcmalloc_internal_la-malloc_hook.lo \
	src/libtcmalloc_internal_la-malloc_extension.lo \
	$(am__objects_20)
am__objects_22 = src/libtcmalloc_internal_la-fake_stacktrace_scope.lo
#am__objects_22 = src/libtcmalloc_internal_la-emergency_malloc.lo \
#	src/libtcmalloc_internal_la-emergency_malloc_for_stacktrace.lo
am_libtcmalloc_internal_la_OBJECTS =  \
	$(am__objects_21) \
	$(am__objects_10) \
	src/base/libtcmalloc_internal_la-low_level_alloc.lo \
	src/libtcmalloc_internal_la-heap-profile-table.lo \
	src/libtcmalloc_internal_la-heap-profiler.lo \
	src/libtcmalloc_internal_la-raw_printer.lo \
	$(am__objects_22) \
	src/libtcmalloc_internal_la-memory_region_map.lo
libtcmalloc_internal_la_OBJECTS =  \
	$(am_libtcmalloc_internal_la_OBJECTS)
libtcmalloc_internal_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(libtcmalloc_internal_la_CXXFLAGS) $(CXXFLAGS) \
	$(libtcmalloc_internal_la_LDFLAGS) $(LDFLAGS) -o $@
am_libtcmalloc_internal_la_rpath =
libtcmalloc_minimal_la_DEPENDENCIES = libtcmalloc_minimal_internal.la
am__libtcmalloc_minimal_la_SOURCES_DIST = src/tcmalloc.cc src/common.h \
	src/internal_logging.h src/system-alloc.h \
	src/packed-cache-inl.h src/base/spinlock.h \
	src/base/spinlock_internal.h src/base/atomicops.h \
	src/base/atomicops-internals-macosx.h \
	src/base/atomicops-internals-linuxppc.h \
	src/base/atomicops-internals-windows.h \
	src/base/atomicops-internals-x86.h \
	src/base/spinlock_win32-inl.h src/base/spinlock_linux-inl.h \
	src/base/spinlock_posix-inl.h \
	src/base/atomicops-internals-arm-generic.h \
	src/base/atomicops-internals-arm-v6plus.h \
	src/base/atomicops-internals-mips.h \
	src/base/atomicops-internals-gcc.h src/tcmalloc_guard.h \
	src/base/commandlineflags.h src/base/basictypes.h \
	src/pagemap.h src/sampler.h src/central_freelist.h \
	src/linked_list.h src/libc_override.h \
	src/libc_override_gcc_and_weak.h src/libc_override_glibc.h \
	src/libc_override_osx.h src/libc_override_redefine.h \
	src/page_heap.h src/page_heap_allocator.h src/span.h \
	src/static_vars.h src/symbolize.h src/thread_cache.h \
	src/stack_trace_table.h src/base/thread_annotations.h \
	src/malloc_hook-inl.h src/malloc_hook_mmap_linux.h \
	src/malloc_hook_mmap_freebsd.h src/gperftools/malloc_hook.h \
	src/gperftools/malloc_hook_c.h \
	src/gperftools/malloc_extension.h \
	src/gperftools/malloc_extension_c.h src/gperftools/nallocx.h \
	src/gperftools/stacktrace.h
am__objects_23 = src/libtcmalloc_minimal_la-tcmalloc.lo
am_libtcmalloc_minimal_la_OBJECTS = $(am__objects_23) \
	$(am__objects_20)
libtcmalloc_minimal_la_OBJECTS = $(am_libtcmalloc_minimal_la_OBJECTS)
libtcmalloc_minimal_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(libtcmalloc_minimal_la_CXXFLAGS) $(CXXFLAGS) \
	$(libtcmalloc_minimal_la_LDFLAGS) $(LDFLAGS) -o $@
libtcmalloc_minimal_debug_la_DEPENDENCIES =  \
	$(libtcmalloc_minimal_la_LIBADD)
am__libtcmalloc_minimal_debug_la_SOURCES_DIST =  \
	src/debugallocation.cc src/common.h src/internal_logging.h \
	src/system-alloc.h src/packed-cache-inl.h src/base/spinlock.h \
	src/base/spinlock_internal.h src/base/atomicops.h \
	src/base/atomicops-internals-macosx.h \
	src/base/atomicops-internals-linuxppc.h \
	src/base/atomicops-internals-windows.h \
	src/base/atomicops-internals-x86.h \
	src/base/spinlock_win32-inl.h src/base/spinlock_linux-inl.h \
	src/base/spinlock_posix-inl.h \
	src/base/atomicops-internals-arm-generic.h \
	src/base/atomicops-internals-arm-v6plus.h \
	src/base/atomicops-internals-mips.h \
	src/base/atomicops-internals-gcc.h src/tcmalloc_guard.h \
	src/base/commandlineflags.h src/base/basictypes.h \
	src/pagemap.h src/sampler.h src/central_freelist.h \
	src/linked_list.h src/libc_override.h \
	src/libc_override_gcc_and_weak.h src/libc_override_glibc.h \
	src/libc_override_osx.h src/libc_override_redefine.h \
	src/page_heap.h src/page_heap_allocator.h src/span.h \
	src/static_vars.h src/symbolize.h src/thread_cache.h \
	src/stack_trace_table.h src/base/thread_annotations.h \
	src/malloc_hook-inl.h src/malloc_hook_mmap_linux.h \
	src/malloc_hook_mmap_freebsd.h src/gperftools/malloc_hook.h \
	src/gperftools/malloc_hook_c.h \
	src/gperftools/malloc_extension.h \
	src/gperftools/malloc_extension_c.h src/gperftools/nallocx.h \
	src/gperftools/stacktrace.h
am_libtcmalloc_minimal_debug_la_OBJECTS = src/libtcmalloc_minimal_debug_la-debugallocation.lo \
	$(am__objects_20)
libtcmalloc_minimal_debug_la_OBJECTS =  \
	$(am_libtcmalloc_minimal_debug_la_OBJECTS)
libtcmalloc_minimal_debug_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(libtcmalloc_minimal_debug_la_CXXFLAGS) $(CXXFLAGS) \
	$(libtcmalloc_minimal_debug_la_LDFLAGS) $(LDFLAGS) -o $@
am_libtcmalloc_minimal_debug_la_rpath = -rpath \
	$(libdir)
libtcmalloc_minimal_internal_la_DEPENDENCIES = $(LIBSPINLOCK) \
	libmaybe_threads.la
am__libtcmalloc_minimal_internal_la_SOURCES_DIST = src/common.cc \
	src/internal_logging.cc src/system-alloc.cc \
	src/memfs_malloc.cc src/central_freelist.cc src/page_heap.cc \
	src/sampler.cc src/span.cc src/stack_trace_table.cc \
	src/static_vars.cc src/symbolize.cc src/thread_cache.cc \
	src/malloc_hook.cc src/malloc_extension.cc src/common.h \
	src/internal_logging.h src/system-alloc.h \
	src/packed-cache-inl.h src/base/spinlock.h \
	src/base/spinlock_internal.h src/base/atomicops.h \
	src/base/atomicops-internals-macosx.h \
	src/base/atomicops-internals-linuxppc.h \
	src/base/atomicops-internals-windows.h \
	src/base/atomicops-internals-x86.h \
	src/base/spinlock_win32-inl.h src/base/spinlock_linux-inl.h \
	src/base/spinlock_posix-inl.h \
	src/base/atomicops-internals-arm-generic.h \
	src/base/atomicops-internals-arm-v6plus.h \
	src/base/atomicops-internals-mips.h \
	src/base/atomicops-internals-gcc.h src/tcmalloc_guard.h \
	src/base/commandlineflags.h src/base/basictypes.h \
	src/pagemap.h src/sampler.h src/central_freelist.h \
	src/linked_list.h src/libc_override.h \
	src/libc_override_gcc_and_weak.h src/libc_override_glibc.h \
	src/libc_override_osx.h src/libc_override_redefine.h \
	src/page_heap.h src/page_heap_allocator.h src/span.h \
	src/static_vars.h src/symbolize.h src/thread_cache.h \
	src/stack_trace_table.h src/base/thread_annotations.h \
	src/malloc_hook-inl.h src/malloc_hook_mmap_linux.h \
	src/malloc_hook_mmap_freebsd.h src/gperftools/malloc_hook.h \
	src/gperftools/malloc_hook_c.h \
	src/gperftools/malloc_extension.h \
	src/gperftools/malloc_extension_c.h src/gperftools/nallocx.h \
	src/gperftools/stacktrace.h
am__objects_24 = src/libtcmalloc_minimal_internal_la-system-alloc.lo
am_libtcmalloc_minimal_internal_la_OBJECTS =  \
	src/libtcmalloc_minimal_internal_la-common.lo \
	src/libtcmalloc_minimal_internal_la-internal_logging.lo \
	$(am__objects_24) \
	src/libtcmalloc_minimal_internal_la-memfs_malloc.lo \
	src/libtcmalloc_minimal_internal_la-central_freelist.lo \
	src/libtcmalloc_minimal_internal_la-page_heap.lo \
	src/libtcmalloc_minimal_internal_la-sampler.lo \
	src/libtcmalloc_minimal_internal_la-span.lo \
	src/libtcmalloc_minimal_internal_la-stack_trace_table.lo \
	src/libtcmalloc_minimal_internal_la-static_vars.lo \
	src/libtcmalloc_minimal_internal_la-symbolize.lo \
	src/libtcmalloc_minimal_internal_la-thread_cache.lo \
	src/libtcmalloc_minimal_internal_la-malloc_hook.lo \
	src/libtcmalloc_minimal_internal_la-malloc_extension.lo \
	$(am__objects_20)
libtcmalloc_minimal_internal_la_OBJECTS =  \
	$(am_libtcmalloc_minimal_internal_la_OBJECTS)
libtcmalloc_minimal_internal_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(libtcmalloc_minimal_internal_la_CXXFLAGS) $(CXXFLAGS) \
	$(libtcmalloc_minimal_internal_la_LDFLAGS) $(LDFLAGS) -o $@
libwindows_la_DEPENDENCIES =
am__libwindows_la_SOURCES_DIST = src/windows/port.h \
	src/windows/mingw.h src/windows/mini_disassembler.h \
	src/windows/mini_disassembler_types.h \
	src/windows/preamble_patcher.h src/windows/port.cc \
	src/windows/system-alloc.cc src/windows/ia32_modrm_map.cc \
	src/windows/ia32_opcode_map.cc \
	src/windows/mini_disassembler.cc \
	src/windows/patch_functions.cc src/windows/preamble_patcher.cc \
	src/windows/preamble_patcher_with_stub.cc
#am_libwindows_la_OBJECTS = $(am__objects_1) \
#	src/windows/port.lo src/windows/system-alloc.lo \
#	src/windows/ia32_modrm_map.lo \
#	src/windows/ia32_opcode_map.lo \
#	src/windows/mini_disassembler.lo \
#	src/windows/patch_functions.lo \
#	src/windows/preamble_patcher.lo \
#	src/windows/preamble_patcher_with_stub.lo
libwindows_la_OBJECTS = $(am_libwindows_la_OBJECTS)
#am_libwindows_la_rpath =
am__addressmap_unittest_SOURCES_DIST =  \
	src/tests/addressmap_unittest.cc src/addressmap-inl.h \
	src/base/commandlineflags.h src/base/logging.h \
	src/base/basictypes.h src/base/dynamic_annotations.h \
	src/third_party/valgrind.h src/windows/port.h \
	src/windows/port.cc
#am__objects_25 =  \
#	src/windows/addressmap_unittest-port.$(OBJEXT)
am_addressmap_unittest_OBJECTS =  \
	src/tests/addressmap_unittest-addressmap_unittest.$(OBJEXT) \
	$(am__objects_8) $(am__objects_25)
addressmap_unittest_OBJECTS = $(am_addressmap_unittest_OBJECTS)
addressmap_unittest_DEPENDENCIES = liblogging.la
addressmap_unittest_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(addressmap_unittest_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
am_atomicops_unittest_OBJECTS =  \
	src/tests/atomicops_unittest.$(OBJEXT) $(am__objects_8)
atomicops_unittest_OBJECTS = $(am_atomicops_unittest_OBJECTS)
atomicops_unittest_DEPENDENCIES = $(LIBSPINLOCK)
am__binary_trees_SOURCES_DIST = benchmark/binary_trees.cc
am_binary_trees_OBJECTS =  \
	benchmark/binary_trees-binary_trees.$(OBJEXT)
binary_trees_OBJECTS = $(am_binary_trees_OBJECTS)
binary_trees_DEPENDENCIES = libtcmalloc_minimal.la \
	$(am__DEPENDENCIES_1)
binary_trees_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(binary_trees_CXXFLAGS) \
	$(CXXFLAGS) $(binary_trees_LDFLAGS) $(LDFLAGS) -o $@
am__binary_trees_shared_SOURCES_DIST = benchmark/binary_trees.cc
am_binary_trees_shared_OBJECTS = benchmark/binary_trees_shared-binary_trees.$(OBJEXT)
binary_trees_shared_OBJECTS = $(am_binary_trees_shared_OBJECTS)
binary_trees_shared_DEPENDENCIES =  \
	libtcmalloc_minimal.la $(am__DEPENDENCIES_1)
binary_trees_shared_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(binary_trees_shared_CXXFLAGS) $(CXXFLAGS) \
	$(binary_trees_shared_LDFLAGS) $(LDFLAGS) -o $@
am_current_allocated_bytes_test_OBJECTS = src/tests/current_allocated_bytes_test-current_allocated_bytes_test.$(OBJEXT)
current_allocated_bytes_test_OBJECTS =  \
	$(am_current_allocated_bytes_test_OBJECTS)
current_allocated_bytes_test_DEPENDENCIES = $(LIBTCMALLOC_MINIMAL) \
	$(am__DEPENDENCIES_1)
current_allocated_bytes_test_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(current_allocated_bytes_test_CXXFLAGS) $(CXXFLAGS) \
	$(current_allocated_bytes_test_LDFLAGS) $(LDFLAGS) -o $@
am__debugallocation_test_SOURCES_DIST =  \
	src/tests/debugallocation_test.cc
am_debugallocation_test_OBJECTS = src/tests/debugallocation_test-debugallocation_test.$(OBJEXT)
debugallocation_test_OBJECTS = $(am_debugallocation_test_OBJECTS)
debugallocation_test_DEPENDENCIES = libtcmalloc_debug.la \
	$(am__DEPENDENCIES_1)
debugallocation_test_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(debugallocation_test_CXXFLAGS) $(CXXFLAGS) \
	$(debugallocation_test_LDFLAGS) $(LDFLAGS) -o $@
am__debugallocation_test_sh_SOURCES_DIST =  \
	src/tests/debugallocation_test.sh
am_debugallocation_test_sh_OBJECTS =
debugallocation_test_sh_OBJECTS =  \
	$(am_debugallocation_test_sh_OBJECTS)
debugallocation_test_sh_LDADD = $(LDADD)
am_frag_unittest_OBJECTS =  \
	src/tests/frag_unittest-frag_unittest.$(OBJEXT)
frag_unittest_OBJECTS = $(am_frag_unittest_OBJECTS)
frag_unittest_DEPENDENCIES = $(LIBTCMALLOC_MINIMAL) \
	$(am__DEPENDENCIES_1)
frag_unittest_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(frag_unittest_CXXFLAGS) $(CXXFLAGS) $(frag_unittest_LDFLAGS) \
	$(LDFLAGS) -o $@
am__getpc_test_SOURCES_DIST = src/tests/getpc_test.cc src/getpc.h
am_getpc_test_OBJECTS =  \
	src/tests/getpc_test.$(OBJEXT)
getpc_test_OBJECTS = $(am_getpc_test_OBJECTS)
getpc_test_LDADD = $(LDADD)
am__heap_checker_death_unittest_sh_SOURCES_DIST =  \
	src/tests/heap-checker-death_unittest.sh
am_heap_checker_death_unittest_sh_OBJECTS =
heap_checker_death_unittest_sh_OBJECTS =  \
	$(am_heap_checker_death_unittest_sh_OBJECTS)
heap_checker_death_unittest_sh_LDADD = $(LDADD)
am__heap_checker_debug_unittest_SOURCES_DIST =  \
	src/tests/heap-checker_unittest.cc src/config_for_unittests.h \
	src/memory_region_map.h src/base/commandlineflags.h \
	src/base/googleinit.h src/gperftools/heap-checker.h \
	src/base/logging.h src/base/basictypes.h \
	src/base/dynamic_annotations.h src/third_party/valgrind.h
#am__objects_26 = $(am__objects_1)
#am__objects_27 = src/tests/heap_checker_debug_unittest-heap-checker_unittest.$(OBJEXT) \
#	$(am__objects_26)
#am_heap_checker_debug_unittest_OBJECTS = $(am__objects_27)
heap_checker_debug_unittest_OBJECTS =  \
	$(am_heap_checker_debug_unittest_OBJECTS)
#heap_checker_debug_unittest_DEPENDENCIES = libtcmalloc_debug.la \
#	liblogging.la \
#	$(am__DEPENDENCIES_1)
heap_checker_debug_unittest_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(heap_checker_debug_unittest_CXXFLAGS) $(CXXFLAGS) \
	$(heap_checker_debug_unittest_LDFLAGS) $(LDFLAGS) -o $@
am__heap_checker_debug_unittest_sh_SOURCES_DIST =  \
	src/tests/heap-checker_unittest.sh
am_heap_checker_debug_unittest_sh_OBJECTS =
heap_checker_debug_unittest_sh_OBJECTS =  \
	$(am_heap_checker_debug_unittest_sh_OBJECTS)
heap_checker_debug_unittest_sh_LDADD = $(LDADD)
am__heap_checker_unittest_SOURCES_DIST =  \
	src/tests/heap-checker_unittest.cc src/config_for_unittests.h \
	src/memory_region_map.h src/base/commandlineflags.h \
	src/base/googleinit.h src/gperftools/heap-checker.h \
	src/base/logging.h src/base/basictypes.h \
	src/base/dynamic_annotations.h src/third_party/valgrind.h
#am_heap_checker_unittest_OBJECTS = src/tests/heap_checker_unittest-heap-checker_unittest.$(OBJEXT) \
#	$(am__objects_26)
heap_checker_unittest_OBJECTS = $(am_heap_checker_unittest_OBJECTS)
#heap_checker_unittest_DEPENDENCIES =  \
#	$(LIBTCMALLOC) liblogging.la \
#	$(am__DEPENDENCIES_1)
heap_checker_unittest_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(heap_checker_unittest_CXXFLAGS) $(CXXFLAGS) \
	$(heap_checker_unittest_LDFLAGS) $(LDFLAGS) -o $@
am__heap_checker_unittest_sh_SOURCES_DIST =  \
	src/tests/heap-checker_unittest.sh
am_heap_checker_unittest_sh_OBJECTS =
heap_checker_unittest_sh_OBJECTS =  \
	$(am_heap_checker_unittest_sh_OBJECTS)
heap_checker_unittest_sh_LDADD = $(LDADD)
am__heap_profiler_debug_unittest_SOURCES_DIST =  \
	src/tests/heap-profiler_unittest.cc src/config_for_unittests.h \
	src/gperftools/heap-profiler.h
am__objects_28 = src/tests/heap_profiler_debug_unittest-heap-profiler_unittest.$(OBJEXT) \
	$(am__objects_1)
am_heap_profiler_debug_unittest_OBJECTS = $(am__objects_28)
heap_profiler_debug_unittest_OBJECTS =  \
	$(am_heap_profiler_debug_unittest_OBJECTS)
heap_profiler_debug_unittest_DEPENDENCIES = libtcmalloc_debug.la \
	$(am__DEPENDENCIES_1)
heap_profiler_debug_unittest_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(heap_profiler_debug_unittest_CXXFLAGS) $(CXXFLAGS) \
	$(heap_profiler_debug_unittest_LDFLAGS) $(LDFLAGS) -o $@
am__heap_profiler_debug_unittest_sh_SOURCES_DIST =  \
	src/tests/heap-profiler_unittest.sh
am_heap_profiler_debug_unittest_sh_OBJECTS =
heap_profiler_debug_unittest_sh_OBJECTS =  \
	$(am_heap_profiler_debug_unittest_sh_OBJECTS)
heap_profiler_debug_unittest_sh_LDADD = $(LDADD)
am__heap_profiler_unittest_SOURCES_DIST =  \
	src/tests/heap-profiler_unittest.cc src/config_for_unittests.h \
	src/gperftools/heap-profiler.h
am_heap_profiler_unittest_OBJECTS = src/tests/heap_profiler_unittest-heap-profiler_unittest.$(OBJEXT) \
	$(am__objects_1)
heap_profiler_unittest_OBJECTS = $(am_heap_profiler_unittest_OBJECTS)
heap_profiler_unittest_DEPENDENCIES =  \
	$(LIBTCMALLOC) $(am__DEPENDENCIES_1)
heap_profiler_unittest_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(heap_profiler_unittest_CXXFLAGS) $(CXXFLAGS) \
	$(heap_profiler_unittest_LDFLAGS) $(LDFLAGS) -o $@
am__heap_profiler_unittest_sh_SOURCES_DIST =  \
	src/tests/heap-profiler_unittest.sh
am_heap_profiler_unittest_sh_OBJECTS =
heap_profiler_unittest_sh_OBJECTS =  \
	$(am_heap_profiler_unittest_sh_OBJECTS)
heap_profiler_unittest_sh_LDADD = $(LDADD)
am__low_level_alloc_unittest_SOURCES_DIST =  \
	src/base/low_level_alloc.cc src/malloc_hook.cc \
	src/tests/low_level_alloc_unittest.cc \
	src/base/low_level_alloc.h src/base/basictypes.h \
	src/gperftools/malloc_hook.h src/gperftools/malloc_hook_c.h \
	src/malloc_hook-inl.h src/malloc_hook_mmap_linux.h \
	src/malloc_hook_mmap_freebsd.h src/base/spinlock.h \
	src/base/spinlock_internal.h src/base/atomicops.h \
	src/base/atomicops-internals-macosx.h \
	src/base/atomicops-internals-linuxppc.h \
	src/base/atomicops-internals-windows.h \
	src/base/atomicops-internals-x86.h \
	src/base/spinlock_win32-inl.h src/base/spinlock_linux-inl.h \
	src/base/spinlock_posix-inl.h \
	src/base/atomicops-internals-arm-generic.h \
	src/base/atomicops-internals-arm-v6plus.h \
	src/base/atomicops-internals-mips.h \
	src/base/atomicops-internals-gcc.h src/base/logging.h \
	src/base/commandlineflags.h src/base/dynamic_annotations.h \
	src/third_party/valgrind.h
am__objects_29 = $(am__objects_1) $(am__objects_1)
am_low_level_alloc_unittest_OBJECTS =  \
	src/base/low_level_alloc_unittest-low_level_alloc.$(OBJEXT) \
	src/low_level_alloc_unittest-malloc_hook.$(OBJEXT) \
	src/tests/low_level_alloc_unittest-low_level_alloc_unittest.$(OBJEXT) \
	$(am__objects_29)
low_level_alloc_unittest_OBJECTS =  \
	$(am_low_level_alloc_unittest_OBJECTS)
low_level_alloc_unittest_DEPENDENCIES = $(LIBSPINLOCK) \
	libmaybe_threads.la
low_level_alloc_unittest_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(low_level_alloc_unittest_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
am__malloc_bench_SOURCES_DIST = benchmark/malloc_bench.cc
am_malloc_bench_OBJECTS =  \
	benchmark/malloc_bench-malloc_bench.$(OBJEXT)
malloc_bench_OBJECTS = $(am_malloc_bench_OBJECTS)
malloc_bench_DEPENDENCIES = librun_benchmark.la \
	libtcmalloc_minimal.la $(am__DEPENDENCIES_1)
malloc_bench_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(malloc_bench_CXXFLAGS) \
	$(CXXFLAGS) $(malloc_bench_LDFLAGS) $(LDFLAGS) -o $@
am__malloc_bench_shared_SOURCES_DIST = benchmark/malloc_bench.cc
am_malloc_bench_shared_OBJECTS = benchmark/malloc_bench_shared-malloc_bench.$(OBJEXT)
malloc_bench_shared_OBJECTS = $(am_malloc_bench_shared_OBJECTS)
malloc_bench_shared_DEPENDENCIES = librun_benchmark.la \
	libtcmalloc_minimal.la $(am__DEPENDENCIES_1)
malloc_bench_shared_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(malloc_bench_shared_CXXFLAGS) $(CXXFLAGS) \
	$(malloc_bench_shared_LDFLAGS) $(LDFLAGS) -o $@
am__malloc_bench_shared_full_SOURCES_DIST = benchmark/malloc_bench.cc
am_malloc_bench_shared_full_OBJECTS = benchmark/malloc_bench_shared_full-malloc_bench.$(OBJEXT)
malloc_bench_shared_full_OBJECTS =  \
	$(am_malloc_bench_shared_full_OBJECTS)
malloc_bench_shared_full_DEPENDENCIES = librun_benchmark.la \
	libtcmalloc.la \
	$(am__DEPENDENCIES_1)
malloc_bench_shared_full_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(malloc_bench_shared_full_CXXFLAGS) $(CXXFLAGS) \
	$(malloc_bench_shared_full_LDFLAGS) $(LDFLAGS) -o $@
am__malloc_extension_c_test_SOURCES_DIST =  \
	src/tests/malloc_extension_c_test.c \
	src/gperftools/malloc_extension.h \
	src/gperftools/malloc_extension_c.h
am_malloc_extension_c_test_OBJECTS = src/tests/malloc_extension_c_test-malloc_extension_c_test.$(OBJEXT)
malloc_extension_c_test_OBJECTS =  \
	$(am_malloc_extension_c_test_OBJECTS)
malloc_extension_c_test_DEPENDENCIES =  \
	$(LIBTCMALLOC_MINIMAL) $(am__DEPENDENCIES_1)
malloc_extension_c_test_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(malloc_extension_c_test_CFLAGS) $(CFLAGS) \
	$(malloc_extension_c_test_LDFLAGS) $(LDFLAGS) -o $@
am__malloc_extension_debug_test_SOURCES_DIST =  \
	src/tests/malloc_extension_test.cc src/config_for_unittests.h \
	src/base/logging.h src/gperftools/malloc_extension.h \
	src/gperftools/malloc_extension_c.h
am__objects_30 = src/tests/malloc_extension_debug_test-malloc_extension_test.$(OBJEXT)
am_malloc_extension_debug_test_OBJECTS =  \
	$(am__objects_30)
malloc_extension_debug_test_OBJECTS =  \
	$(am_malloc_extension_debug_test_OBJECTS)
malloc_extension_debug_test_DEPENDENCIES =  \
	libtcmalloc_minimal_debug.la \
	$(am__DEPENDENCIES_1)
malloc_extension_debug_test_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(malloc_extension_debug_test_CXXFLAGS) $(CXXFLAGS) \
	$(malloc_extension_debug_test_LDFLAGS) $(LDFLAGS) -o $@
am_malloc_extension_test_OBJECTS = src/tests/malloc_extension_test-malloc_extension_test.$(OBJEXT)
malloc_extension_test_OBJECTS = $(am_malloc_extension_test_OBJECTS)
malloc_extension_test_DEPENDENCIES = $(LIBTCMALLOC_MINIMAL) \
	$(am__DEPENDENCIES_1)
malloc_extension_test_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(malloc_extension_test_CXXFLAGS) $(CXXFLAGS) \
	$(malloc_extension_test_LDFLAGS) $(LDFLAGS) -o $@
am_malloc_hook_test_OBJECTS =  \
	src/tests/malloc_hook_test-malloc_hook_test.$(OBJEXT) \
	src/tests/malloc_hook_test-testutil.$(OBJEXT)
malloc_hook_test_OBJECTS = $(am_malloc_hook_test_OBJECTS)
malloc_hook_test_DEPENDENCIES = $(LIBTCMALLOC_MINIMAL) \
	$(am__DEPENDENCIES_1)
malloc_hook_test_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(malloc_hook_test_CXXFLAGS) $(CXXFLAGS) \
	$(malloc_hook_test_LDFLAGS) $(LDFLAGS) -o $@
am_markidle_unittest_OBJECTS =  \
	src/tests/markidle_unittest-markidle_unittest.$(OBJEXT) \
	src/tests/markidle_unittest-testutil.$(OBJEXT)
markidle_unittest_OBJECTS = $(am_markidle_unittest_OBJECTS)
markidle_unittest_DEPENDENCIES = $(LIBTCMALLOC_MINIMAL) \
	$(am__DEPENDENCIES_1)
markidle_unittest_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(markidle_unittest_CXXFLAGS) $(CXXFLAGS) \
	$(markidle_unittest_LDFLAGS) $(LDFLAGS) -o $@
am__maybe_threads_unittest_sh_SOURCES_DIST =  \
	src/tests/maybe_threads_unittest.sh
am_maybe_threads_unittest_sh_OBJECTS =
maybe_threads_unittest_sh_OBJECTS =  \
	$(am_maybe_threads_unittest_sh_OBJECTS)
maybe_threads_unittest_sh_LDADD = $(LDADD)
am__memalign_debug_unittest_SOURCES_DIST =  \
	src/tests/memalign_unittest.cc src/tcmalloc.h \
	src/config_for_unittests.h src/tests/testutil.h \
	src/tests/testutil.cc
#am__objects_31 = src/tests/memalign_debug_unittest-memalign_unittest.$(OBJEXT) \
#	src/tests/memalign_debug_unittest-testutil.$(OBJEXT)
#am_memalign_debug_unittest_OBJECTS = $(am__objects_31)
memalign_debug_unittest_OBJECTS =  \
	$(am_memalign_debug_unittest_OBJECTS)
#memalign_debug_unittest_DEPENDENCIES = libtcmalloc_minimal_debug.la \
#	$(am__DEPENDENCIES_1)
memalign_debug_unittest_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(memalign_debug_unittest_CXXFLAGS) $(CXXFLAGS) \
	$(memalign_debug_unittest_LDFLAGS) $(LDFLAGS) -o $@
am__memalign_unittest_SOURCES_DIST = src/tests/memalign_unittest.cc \
	src/tcmalloc.h src/config_for_unittests.h src/tests/testutil.h \
	src/tests/testutil.cc
#am_memalign_unittest_OBJECTS = src/tests/memalign_unittest-memalign_unittest.$(OBJEXT) \
#	src/tests/memalign_unittest-testutil.$(OBJEXT)
memalign_unittest_OBJECTS = $(am_memalign_unittest_OBJECTS)
#memalign_unittest_DEPENDENCIES =  \
#	$(LIBTCMALLOC_MINIMAL) \
#	$(am__DEPENDENCIES_1)
memalign_unittest_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(memalign_unittest_CXXFLAGS) $(CXXFLAGS) \
	$(memalign_unittest_LDFLAGS) $(LDFLAGS) -o $@
am_packed_cache_test_OBJECTS =  \
	src/tests/packed_cache_test-packed-cache_test.$(OBJEXT)
packed_cache_test_OBJECTS = $(am_packed_cache_test_OBJECTS)
packed_cache_test_DEPENDENCIES = $(LIBTCMALLOC_MINIMAL) \
	$(am__DEPENDENCIES_1)
packed_cache_test_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(packed_cache_test_CXXFLAGS) $(CXXFLAGS) \
	$(packed_cache_test_LDFLAGS) $(LDFLAGS) -o $@
am_page_heap_test_OBJECTS =  \
	src/tests/page_heap_test-page_heap_test.$(OBJEXT)
page_heap_test_OBJECTS = $(am_page_heap_test_OBJECTS)
page_heap_test_DEPENDENCIES = $(LIBTCMALLOC_MINIMAL) \
	$(am__DEPENDENCIES_1)
page_heap_test_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(page_heap_test_CXXFLAGS) $(CXXFLAGS) \
	$(page_heap_test_LDFLAGS) $(LDFLAGS) -o $@
am_pagemap_unittest_OBJECTS =  \
	src/tests/pagemap_unittest-pagemap_unittest.$(OBJEXT)
pagemap_unittest_OBJECTS = $(am_pagemap_unittest_OBJECTS)
pagemap_unittest_DEPENDENCIES = $(LIBTCMALLOC_MINIMAL) \
	$(am__DEPENDENCIES_1)
pagemap_unittest_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(pagemap_unittest_CXXFLAGS) $(CXXFLAGS) \
	$(pagemap_unittest_LDFLAGS) $(LDFLAGS) -o $@
am__profile_handler_unittest_SOURCES_DIST =  \
	src/tests/profile-handler_unittest.cc src/profile-handler.h
am_profile_handler_unittest_OBJECTS = src/tests/profile_handler_unittest-profile-handler_unittest.$(OBJEXT)
profile_handler_unittest_OBJECTS =  \
	$(am_profile_handler_unittest_OBJECTS)
profile_handler_unittest_DEPENDENCIES =  \
	$(LIBPROFILER) $(am__DEPENDENCIES_1)
profile_handler_unittest_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(profile_handler_unittest_CXXFLAGS) $(CXXFLAGS) \
	$(profile_handler_unittest_LDFLAGS) $(LDFLAGS) -o $@
am__profiledata_unittest_SOURCES_DIST =  \
	src/tests/profiledata_unittest.cc src/profiledata.h \
	src/base/commandlineflags.h src/base/logging.h \
	src/base/basictypes.h
am_profiledata_unittest_OBJECTS = src/tests/profiledata_unittest.$(OBJEXT)
profiledata_unittest_OBJECTS = $(am_profiledata_unittest_OBJECTS)
profiledata_unittest_DEPENDENCIES =  \
	$(LIBPROFILER)
am__profiler1_unittest_SOURCES_DIST = src/tests/profiler_unittest.cc \
	src/tests/testutil.h src/tests/testutil.cc \
	src/config_for_unittests.h src/gperftools/profiler.h
am__objects_32 = src/tests/profiler1_unittest-profiler_unittest.$(OBJEXT) \
	src/tests/profiler1_unittest-testutil.$(OBJEXT) \
	$(am__objects_1)
am_profiler1_unittest_OBJECTS =  \
	$(am__objects_32)
profiler1_unittest_OBJECTS = $(am_profiler1_unittest_OBJECTS)
profiler1_unittest_DEPENDENCIES =  \
	$(LIBPROFILER)
profiler1_unittest_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(profiler1_unittest_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
am__profiler2_unittest_SOURCES_DIST = src/tests/profiler_unittest.cc \
	src/tests/testutil.h src/tests/testutil.cc \
	src/config_for_unittests.h src/gperftools/profiler.h
am__objects_33 = src/tests/profiler2_unittest-profiler_unittest.$(OBJEXT) \
	src/tests/profiler2_unittest-testutil.$(OBJEXT) \
	$(am__objects_1)
am_profiler2_unittest_OBJECTS =  \
	$(am__objects_33)
profiler2_unittest_OBJECTS = $(am_profiler2_unittest_OBJECTS)
profiler2_unittest_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(profiler2_unittest_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
am__profiler3_unittest_SOURCES_DIST = src/tests/profiler_unittest.cc \
	src/tests/testutil.h src/tests/testutil.cc \
	src/config_for_unittests.h src/gperftools/profiler.h
am__objects_34 = src/tests/profiler3_unittest-profiler_unittest.$(OBJEXT) \
	src/tests/profiler3_unittest-testutil.$(OBJEXT) \
	$(am__objects_1)
am_profiler3_unittest_OBJECTS =  \
	$(am__objects_34)
profiler3_unittest_OBJECTS = $(am_profiler3_unittest_OBJECTS)
profiler3_unittest_DEPENDENCIES =  \
	$(LIBPROFILER) $(am__DEPENDENCIES_1)
profiler3_unittest_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(profiler3_unittest_CXXFLAGS) $(CXXFLAGS) \
	$(profiler3_unittest_LDFLAGS) $(LDFLAGS) -o $@
am__profiler4_unittest_SOURCES_DIST = src/tests/profiler_unittest.cc \
	src/tests/testutil.h src/tests/testutil.cc \
	src/config_for_unittests.h src/gperftools/profiler.h
am__objects_35 = src/tests/profiler4_unittest-profiler_unittest.$(OBJEXT) \
	src/tests/profiler4_unittest-testutil.$(OBJEXT) \
	$(am__objects_1)
am_profiler4_unittest_OBJECTS =  \
	$(am__objects_35)
profiler4_unittest_OBJECTS = $(am_profiler4_unittest_OBJECTS)
profiler4_unittest_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(profiler4_unittest_CXXFLAGS) $(CXXFLAGS) \
	$(profiler4_unittest_LDFLAGS) $(LDFLAGS) -o $@
am__profiler_unittest_sh_SOURCES_DIST =  \
	src/tests/profiler_unittest.sh
am_profiler_unittest_sh_OBJECTS =
profiler_unittest_sh_OBJECTS = $(am_profiler_unittest_sh_OBJECTS)
profiler_unittest_sh_LDADD = $(LDADD)
am__raw_printer_test_SOURCES_DIST = src/tests/raw_printer_test.cc
am_raw_printer_test_OBJECTS = src/tests/raw_printer_test-raw_printer_test.$(OBJEXT)
raw_printer_test_OBJECTS = $(am_raw_printer_test_OBJECTS)
raw_printer_test_DEPENDENCIES =  \
	$(LIBTCMALLOC) \
	$(am__DEPENDENCIES_1)
raw_printer_test_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(raw_printer_test_CXXFLAGS) $(CXXFLAGS) \
	$(raw_printer_test_LDFLAGS) $(LDFLAGS) -o $@
am__realloc_debug_unittest_SOURCES_DIST =  \
	src/tests/realloc_unittest.cc src/config_for_unittests.h \
	src/base/logging.h
am__objects_36 =  \
	src/tests/realloc_debug_unittest-realloc_unittest.$(OBJEXT)
am_realloc_debug_unittest_OBJECTS =  \
	$(am__objects_36)
realloc_debug_unittest_OBJECTS = $(am_realloc_debug_unittest_OBJECTS)
realloc_debug_unittest_DEPENDENCIES =  \
	libtcmalloc_minimal_debug.la \
	$(am__DEPENDENCIES_1)
realloc_debug_unittest_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(realloc_debug_unittest_CXXFLAGS) $(CXXFLAGS) \
	$(realloc_debug_unittest_LDFLAGS) $(LDFLAGS) -o $@
am_realloc_unittest_OBJECTS =  \
	src/tests/realloc_unittest-realloc_unittest.$(OBJEXT)
realloc_unittest_OBJECTS = $(am_realloc_unittest_OBJECTS)
realloc_unittest_DEPENDENCIES = $(LIBTCMALLOC_MINIMAL) \
	$(am__DEPENDENCIES_1)
realloc_unittest_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(realloc_unittest_CXXFLAGS) $(CXXFLAGS) \
	$(realloc_unittest_LDFLAGS) $(LDFLAGS) -o $@
am__sampler_debug_test_SOURCES_DIST = src/tests/sampler_test.cc \
	src/config_for_unittests.h
am__objects_37 = src/tests/sampler_debug_test-sampler_test.$(OBJEXT)
am_sampler_debug_test_OBJECTS = $(am__objects_37)
sampler_debug_test_OBJECTS = $(am_sampler_debug_test_OBJECTS)
sampler_debug_test_DEPENDENCIES = libtcmalloc_debug.la \
	$(am__DEPENDENCIES_1)
sampler_debug_test_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(sampler_debug_test_CXXFLAGS) $(CXXFLAGS) \
	$(sampler_debug_test_LDFLAGS) $(LDFLAGS) -o $@
am__sampler_test_SOURCES_DIST = src/tests/sampler_test.cc \
	src/config_for_unittests.h
am_sampler_test_OBJECTS = src/tests/sampler_test-sampler_test.$(OBJEXT)
sampler_test_OBJECTS = $(am_sampler_test_OBJECTS)
sampler_test_DEPENDENCIES =  \
	$(LIBTCMALLOC) \
	$(am__DEPENDENCIES_1)
sampler_test_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(sampler_test_CXXFLAGS) \
	$(CXXFLAGS) $(sampler_test_LDFLAGS) $(LDFLAGS) -o $@
am__sampling_debug_test_SOURCES_DIST = src/tests/sampling_test.cc \
	src/config_for_unittests.h src/base/logging.h \
	src/gperftools/malloc_extension.h
am__objects_38 = src/tests/sampling_debug_test-sampling_test.$(OBJEXT) \
	$(am__objects_1)
am_sampling_debug_test_OBJECTS = $(am__objects_38)
sampling_debug_test_OBJECTS = $(am_sampling_debug_test_OBJECTS)
sampling_debug_test_DEPENDENCIES = libtcmalloc_debug.la \
	$(am__DEPENDENCIES_1)
sampling_debug_test_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(sampling_debug_test_CXXFLAGS) $(CXXFLAGS) \
	$(sampling_debug_test_LDFLAGS) $(LDFLAGS) -o $@
am__sampling_debug_test_sh_SOURCES_DIST = src/tests/sampling_test.sh
am_sampling_debug_test_sh_OBJECTS =
sampling_debug_test_sh_OBJECTS = $(am_sampling_debug_test_sh_OBJECTS)
sampling_debug_test_sh_LDADD = $(LDADD)
am__sampling_test_SOURCES_DIST = src/tests/sampling_test.cc \
	src/config_for_unittests.h src/base/logging.h \
	src/gperftools/malloc_extension.h
am_sampling_test_OBJECTS = src/tests/sampling_test-sampling_test.$(OBJEXT) \
	$(am__objects_1)
sampling_test_OBJECTS = $(am_sampling_test_OBJECTS)
sampling_test_DEPENDENCIES =  \
	$(LIBTCMALLOC) \
	$(am__DEPENDENCIES_1)
sampling_test_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(sampling_test_CXXFLAGS) $(CXXFLAGS) $(sampling_test_LDFLAGS) \
	$(LDFLAGS) -o $@
am__sampling_test_sh_SOURCES_DIST = src/tests/sampling_test.sh
am_sampling_test_sh_OBJECTS =
sampling_test_sh_OBJECTS = $(am_sampling_test_sh_OBJECTS)
sampling_test_sh_LDADD = $(LDADD)
am__simple_compat_test_SOURCES_DIST = src/tests/simple_compat_test.cc \
	src/google/heap-checker.h src/google/heap-profiler.h \
	src/google/malloc_extension.h src/google/malloc_extension_c.h \
	src/google/malloc_hook.h src/google/malloc_hook_c.h \
	src/google/profiler.h src/google/stacktrace.h \
	src/google/tcmalloc.h
am_simple_compat_test_OBJECTS = src/tests/simple_compat_test.$(OBJEXT) \
	$(am__objects_1)
simple_compat_test_OBJECTS = $(am_simple_compat_test_OBJECTS)
simple_compat_test_DEPENDENCIES =  \
	$(LIBTCMALLOC)
simple_compat_test_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(AM_CXXFLAGS) $(CXXFLAGS) $(simple_compat_test_LDFLAGS) \
	$(LDFLAGS) -o $@
am_stack_trace_table_test_OBJECTS = src/tests/stack_trace_table_test-stack_trace_table_test.$(OBJEXT)
stack_trace_table_test_OBJECTS = $(am_stack_trace_table_test_OBJECTS)
stack_trace_table_test_DEPENDENCIES = $(LIBTCMALLOC_MINIMAL) \
	$(am__DEPENDENCIES_1)
stack_trace_table_test_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(stack_trace_table_test_CXXFLAGS) $(CXXFLAGS) \
	$(stack_trace_table_test_LDFLAGS) $(LDFLAGS) -o $@
am__stacktrace_unittest_SOURCES_DIST =  \
	src/tests/stacktrace_unittest.cc src/config_for_unittests.h \
	src/base/commandlineflags.h src/stacktrace_impl_setup-inl.h \
	src/stacktrace_generic-inl.h src/stacktrace_libgcc-inl.h \
	src/stacktrace_libunwind-inl.h src/stacktrace_arm-inl.h \
	src/stacktrace_powerpc-inl.h \
	src/stacktrace_powerpc-darwin-inl.h \
	src/stacktrace_powerpc-linux-inl.h src/stacktrace_x86-inl.h \
	src/stacktrace_win32-inl.h src/stacktrace_instrument-inl.h \
	src/base/elf_mem_image.h src/base/vdso_support.h \
	src/gperftools/stacktrace.h src/base/logging.h \
	src/base/basictypes.h src/base/dynamic_annotations.h \
	src/third_party/valgrind.h
am__objects_39 = $(am__objects_6) \
	$(am__objects_1)
am_stacktrace_unittest_OBJECTS = src/tests/stacktrace_unittest.$(OBJEXT) \
	$(am__objects_39)
stacktrace_unittest_OBJECTS = $(am_stacktrace_unittest_OBJECTS)
stacktrace_unittest_DEPENDENCIES =  \
	libstacktrace.la liblogging.la \
	libfake_stacktrace_scope.la
am__system_alloc_unittest_SOURCES_DIST = src/config_for_unittests.h \
	src/tests/system-alloc_unittest.cc
am_system_alloc_unittest_OBJECTS = src/tests/system_alloc_unittest-system-alloc_unittest.$(OBJEXT)
system_alloc_unittest_OBJECTS = $(am_system_alloc_unittest_OBJECTS)
system_alloc_unittest_DEPENDENCIES =  \
	$(LIBTCMALLOC_MINIMAL) $(am__DEPENDENCIES_1)
system_alloc_unittest_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(system_alloc_unittest_CXXFLAGS) $(CXXFLAGS) \
	$(system_alloc_unittest_LDFLAGS) $(LDFLAGS) -o $@
am__tcm_min_asserts_unittest_SOURCES_DIST =  \
	src/tests/tcmalloc_unittest.cc src/tests/testutil.h \
	src/tests/testutil.cc src/common.cc src/internal_logging.cc \
	src/system-alloc.cc src/memfs_malloc.cc \
	src/central_freelist.cc src/page_heap.cc src/sampler.cc \
	src/span.cc src/stack_trace_table.cc src/static_vars.cc \
	src/symbolize.cc src/thread_cache.cc src/malloc_hook.cc \
	src/malloc_extension.cc src/common.h src/internal_logging.h \
	src/system-alloc.h src/packed-cache-inl.h src/base/spinlock.h \
	src/base/spinlock_internal.h src/base/atomicops.h \
	src/base/atomicops-internals-macosx.h \
	src/base/atomicops-internals-linuxppc.h \
	src/base/atomicops-internals-windows.h \
	src/base/atomicops-internals-x86.h \
	src/base/spinlock_win32-inl.h src/base/spinlock_linux-inl.h \
	src/base/spinlock_posix-inl.h \
	src/base/atomicops-internals-arm-generic.h \
	src/base/atomicops-internals-arm-v6plus.h \
	src/base/atomicops-internals-mips.h \
	src/base/atomicops-internals-gcc.h src/tcmalloc_guard.h \
	src/base/commandlineflags.h src/base/basictypes.h \
	src/pagemap.h src/sampler.h src/central_freelist.h \
	src/linked_list.h src/libc_override.h \
	src/libc_override_gcc_and_weak.h src/libc_override_glibc.h \
	src/libc_override_osx.h src/libc_override_redefine.h \
	src/page_heap.h src/page_heap_allocator.h src/span.h \
	src/static_vars.h src/symbolize.h src/thread_cache.h \
	src/stack_trace_table.h src/base/thread_annotations.h \
	src/malloc_hook-inl.h src/malloc_hook_mmap_linux.h \
	src/malloc_hook_mmap_freebsd.h src/gperftools/malloc_hook.h \
	src/gperftools/malloc_hook_c.h \
	src/gperftools/malloc_extension.h \
	src/gperftools/malloc_extension_c.h src/gperftools/nallocx.h \
	src/gperftools/stacktrace.h src/tcmalloc.cc
am__objects_40 = src/tcm_min_asserts_unittest-system-alloc.$(OBJEXT)
am__objects_41 = src/tcm_min_asserts_unittest-common.$(OBJEXT) \
	src/tcm_min_asserts_unittest-internal_logging.$(OBJEXT) \
	$(am__objects_40) \
	src/tcm_min_asserts_unittest-memfs_malloc.$(OBJEXT) \
	src/tcm_min_asserts_unittest-central_freelist.$(OBJEXT) \
	src/tcm_min_asserts_unittest-page_heap.$(OBJEXT) \
	src/tcm_min_asserts_unittest-sampler.$(OBJEXT) \
	src/tcm_min_asserts_unittest-span.$(OBJEXT) \
	src/tcm_min_asserts_unittest-stack_trace_table.$(OBJEXT) \
	src/tcm_min_asserts_unittest-static_vars.$(OBJEXT) \
	src/tcm_min_asserts_unittest-symbolize.$(OBJEXT) \
	src/tcm_min_asserts_unittest-thread_cache.$(OBJEXT) \
	src/tcm_min_asserts_unittest-malloc_hook.$(OBJEXT) \
	src/tcm_min_asserts_unittest-malloc_extension.$(OBJEXT) \
	$(am__objects_20)
am__objects_42 =  \
	src/tcm_min_asserts_unittest-tcmalloc.$(OBJEXT)
am__objects_43 = $(am__objects_42) $(am__objects_20)
am_tcm_min_asserts_unittest_OBJECTS = src/tests/tcm_min_asserts_unittest-tcmalloc_unittest.$(OBJEXT) \
	src/tests/tcm_min_asserts_unittest-testutil.$(OBJEXT) \
	$(am__objects_41) $(am__objects_43)
tcm_min_asserts_unittest_OBJECTS =  \
	$(am_tcm_min_asserts_unittest_OBJECTS)
tcm_min_asserts_unittest_DEPENDENCIES = $(LIBSPINLOCK) \
	libmaybe_threads.la liblogging.la $(am__DEPENDENCIES_1)
tcm_min_asserts_unittest_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(tcm_min_asserts_unittest_CXXFLAGS) $(CXXFLAGS) \
	$(tcm_min_asserts_unittest_LDFLAGS) $(LDFLAGS) -o $@
am__tcmalloc_and_profiler_unittest_SOURCES_DIST =  \
	src/tests/tcmalloc_unittest.cc src/tests/testutil.h \
	src/tests/testutil.cc
am__objects_44 = src/tests/tcmalloc_and_profiler_unittest-tcmalloc_unittest.$(OBJEXT) \
	src/tests/tcmalloc_and_profiler_unittest-testutil.$(OBJEXT)
am_tcmalloc_and_profiler_unittest_OBJECTS = $(am__objects_44)
tcmalloc_and_profiler_unittest_OBJECTS =  \
	$(am_tcmalloc_and_profiler_unittest_OBJECTS)
tcmalloc_and_profiler_unittest_DEPENDENCIES = libtcmalloc_and_profiler.la
tcmalloc_and_profiler_unittest_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(tcmalloc_and_profiler_unittest_CXXFLAGS) $(CXXFLAGS) \
	$(tcmalloc_and_profiler_unittest_LDFLAGS) $(LDFLAGS) -o $@
am__tcmalloc_both_unittest_SOURCES_DIST =  \
	src/tests/tcmalloc_unittest.cc src/tests/testutil.h \
	src/tests/testutil.cc
am__objects_45 = src/tests/tcmalloc_both_unittest-tcmalloc_unittest.$(OBJEXT) \
	src/tests/tcmalloc_both_unittest-testutil.$(OBJEXT)
#am_tcmalloc_both_unittest_OBJECTS = $(am__objects_45)
tcmalloc_both_unittest_OBJECTS = $(am_tcmalloc_both_unittest_OBJECTS)
#am__DEPENDENCIES_3 = $(LIBTCMALLOC) \
#	$(LIBTCMALLOC_MINIMAL) \
#	liblogging.la \
#	$(am__DEPENDENCIES_1)
am__DEPENDENCIES_3 = $(LIBTCMALLOC) \
	$(LIBTCMALLOC_MINIMAL) \
	libprofiler.la \
	liblogging.la \
	$(am__DEPENDENCIES_1)
#tcmalloc_both_unittest_DEPENDENCIES = $(am__DEPENDENCIES_3)
tcmalloc_both_unittest_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(tcmalloc_both_unittest_CXXFLAGS) $(CXXFLAGS) \
	$(tcmalloc_both_unittest_LDFLAGS) $(LDFLAGS) -o $@
am__tcmalloc_debug_unittest_SOURCES_DIST =  \
	src/tests/tcmalloc_unittest.cc src/tcmalloc.h \
	src/tests/testutil.h src/tests/testutil.cc
am__objects_46 = src/tests/tcmalloc_debug_unittest-tcmalloc_unittest.$(OBJEXT) \
	src/tests/tcmalloc_debug_unittest-testutil.$(OBJEXT)
am_tcmalloc_debug_unittest_OBJECTS = $(am__objects_46)
tcmalloc_debug_unittest_OBJECTS =  \
	$(am_tcmalloc_debug_unittest_OBJECTS)
tcmalloc_debug_unittest_DEPENDENCIES = libtcmalloc_debug.la \
	$(am__DEPENDENCIES_1)
tcmalloc_debug_unittest_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(tcmalloc_debug_unittest_CXXFLAGS) $(CXXFLAGS) \
	$(tcmalloc_debug_unittest_LDFLAGS) $(LDFLAGS) -o $@
am__tcmalloc_large_heap_fragmentation_unittest_SOURCES_DIST =  \
	src/tests/large_heap_fragmentation_unittest.cc
am_tcmalloc_large_heap_fragmentation_unittest_OBJECTS = src/tests/tcmalloc_large_heap_fragmentation_unittest-large_heap_fragmentation_unittest.$(OBJEXT)
tcmalloc_large_heap_fragmentation_unittest_OBJECTS =  \
	$(am_tcmalloc_large_heap_fragmentation_unittest_OBJECTS)
tcmalloc_large_heap_fragmentation_unittest_DEPENDENCIES =  \
	$(LIBTCMALLOC) \
	$(am__DEPENDENCIES_1)
tcmalloc_large_heap_fragmentation_unittest_LINK = $(LIBTOOL) \
	$(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CXXLD) \
	$(tcmalloc_large_heap_fragmentation_unittest_CXXFLAGS) \
	$(CXXFLAGS) \
	$(tcmalloc_large_heap_fragmentation_unittest_LDFLAGS) \
	$(LDFLAGS) -o $@
am__tcmalloc_large_unittest_SOURCES_DIST =  \
	src/tests/tcmalloc_large_unittest.cc
am_tcmalloc_large_unittest_OBJECTS = src/tests/tcmalloc_large_unittest-tcmalloc_large_unittest.$(OBJEXT)
tcmalloc_large_unittest_OBJECTS =  \
	$(am_tcmalloc_large_unittest_OBJECTS)
tcmalloc_large_unittest_DEPENDENCIES =  \
	$(LIBTCMALLOC) \
	$(am__DEPENDENCIES_1)
tcmalloc_large_unittest_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(tcmalloc_large_unittest_CXXFLAGS) $(CXXFLAGS) \
	$(tcmalloc_large_unittest_LDFLAGS) $(LDFLAGS) -o $@
am__tcmalloc_minimal_debug_unittest_SOURCES_DIST =  \
	src/tests/tcmalloc_unittest.cc src/tests/testutil.h \
	src/tests/testutil.cc
am__objects_47 = src/tests/tcmalloc_minimal_debug_unittest-tcmalloc_unittest.$(OBJEXT) \
	src/tests/tcmalloc_minimal_debug_unittest-testutil.$(OBJEXT)
am_tcmalloc_minimal_debug_unittest_OBJECTS =  \
	$(am__objects_47)
tcmalloc_minimal_debug_unittest_OBJECTS =  \
	$(am_tcmalloc_minimal_debug_unittest_OBJECTS)
tcmalloc_minimal_debug_unittest_DEPENDENCIES =  \
	libtcmalloc_minimal_debug.la \
	$(am__DEPENDENCIES_1)
tcmalloc_minimal_debug_unittest_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(tcmalloc_minimal_debug_unittest_CXXFLAGS) $(CXXFLAGS) \
	$(tcmalloc_minimal_debug_unittest_LDFLAGS) $(LDFLAGS) -o $@
am_tcmalloc_minimal_large_heap_fragmentation_unittest_OBJECTS = src/tests/tcmalloc_minimal_large_heap_fragmentation_unittest-large_heap_fragmentation_unittest.$(OBJEXT)
tcmalloc_minimal_large_heap_fragmentation_unittest_OBJECTS = $(am_tcmalloc_minimal_large_heap_fragmentation_unittest_OBJECTS)
tcmalloc_minimal_large_heap_fragmentation_unittest_DEPENDENCIES =  \
	$(LIBTCMALLOC_MINIMAL) $(am__DEPENDENCIES_1)
tcmalloc_minimal_large_heap_fragmentation_unittest_LINK = $(LIBTOOL) \
	$(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CXXLD) \
	$(tcmalloc_minimal_large_heap_fragmentation_unittest_CXXFLAGS) \
	$(CXXFLAGS) \
	$(tcmalloc_minimal_large_heap_fragmentation_unittest_LDFLAGS) \
	$(LDFLAGS) -o $@
am_tcmalloc_minimal_large_unittest_OBJECTS = src/tests/tcmalloc_minimal_large_unittest-tcmalloc_large_unittest.$(OBJEXT)
tcmalloc_minimal_large_unittest_OBJECTS =  \
	$(am_tcmalloc_minimal_large_unittest_OBJECTS)
tcmalloc_minimal_large_unittest_DEPENDENCIES = $(LIBTCMALLOC_MINIMAL) \
	$(am__DEPENDENCIES_1)
tcmalloc_minimal_large_unittest_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(tcmalloc_minimal_large_unittest_CXXFLAGS) $(CXXFLAGS) \
	$(tcmalloc_minimal_large_unittest_LDFLAGS) $(LDFLAGS) -o $@
am_tcmalloc_minimal_unittest_OBJECTS = src/tests/tcmalloc_minimal_unittest-tcmalloc_unittest.$(OBJEXT) \
	src/tests/tcmalloc_minimal_unittest-testutil.$(OBJEXT)
tcmalloc_minimal_unittest_OBJECTS =  \
	$(am_tcmalloc_minimal_unittest_OBJECTS)
tcmalloc_minimal_unittest_DEPENDENCIES = $(LIBTCMALLOC_MINIMAL) \
	liblogging.la $(am__DEPENDENCIES_1)
tcmalloc_minimal_unittest_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(tcmalloc_minimal_unittest_CXXFLAGS) $(CXXFLAGS) \
	$(tcmalloc_minimal_unittest_LDFLAGS) $(LDFLAGS) -o $@
am__tcmalloc_unittest_SOURCES_DIST = src/tests/tcmalloc_unittest.cc \
	src/tcmalloc.h src/tests/testutil.h src/tests/testutil.cc
am_tcmalloc_unittest_OBJECTS = src/tests/tcmalloc_unittest-tcmalloc_unittest.$(OBJEXT) \
	src/tests/tcmalloc_unittest-testutil.$(OBJEXT)
tcmalloc_unittest_OBJECTS = $(am_tcmalloc_unittest_OBJECTS)
tcmalloc_unittest_DEPENDENCIES =  \
	$(LIBTCMALLOC) \
	liblogging.la \
	$(am__DEPENDENCIES_1)
tcmalloc_unittest_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(tcmalloc_unittest_CXXFLAGS) $(CXXFLAGS) \
	$(tcmalloc_unittest_LDFLAGS) $(LDFLAGS) -o $@
am__tcmalloc_unittest_sh_SOURCES_DIST =  \
	src/tests/tcmalloc_unittest.sh
am_tcmalloc_unittest_sh_OBJECTS =
tcmalloc_unittest_sh_OBJECTS = $(am_tcmalloc_unittest_sh_OBJECTS)
tcmalloc_unittest_sh_LDADD = $(LDADD)
am_thread_dealloc_unittest_OBJECTS = src/tests/thread_dealloc_unittest-thread_dealloc_unittest.$(OBJEXT) \
	src/tests/thread_dealloc_unittest-testutil.$(OBJEXT)
thread_dealloc_unittest_OBJECTS =  \
	$(am_thread_dealloc_unittest_OBJECTS)
thread_dealloc_unittest_DEPENDENCIES = $(LIBTCMALLOC_MINIMAL) \
	$(am__DEPENDENCIES_1)
thread_dealloc_unittest_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(thread_dealloc_unittest_CXXFLAGS) $(CXXFLAGS) \
	$(thread_dealloc_unittest_LDFLAGS) $(LDFLAGS) -o $@
SCRIPTS = $(bin_SCRIPTS) $(noinst_SCRIPTS)
AM_V_P = $(am__v_P_$(V))
am__v_P_ = $(am__v_P_$(AM_DEFAULT_VERBOSITY))
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_$(V))
am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_$(V))
am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))
am__v_at_0 = @
am__v_at_1 = 
DEFAULT_INCLUDES = -I. -I$(top_builddir)/src
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__maybe_remake_depfiles = depfiles
am__depfiles_remade =  \
	benchmark/$(DEPDIR)/binary_trees-binary_trees.Po \
	benchmark/$(DEPDIR)/binary_trees_shared-binary_trees.Po \
	benchmark/$(DEPDIR)/malloc_bench-malloc_bench.Po \
	benchmark/$(DEPDIR)/malloc_bench_shared-malloc_bench.Po \
	benchmark/$(DEPDIR)/malloc_bench_shared_full-malloc_bench.Po \
	benchmark/$(DEPDIR)/run_benchmark.Plo \
	src/$(DEPDIR)/fake_stacktrace_scope.Plo \
	src/$(DEPDIR)/libtcmalloc_and_profiler_la-heap-checker-bcad.Plo \
	src/$(DEPDIR)/libtcmalloc_and_profiler_la-heap-checker.Plo \
	src/$(DEPDIR)/libtcmalloc_and_profiler_la-profile-handler.Plo \
	src/$(DEPDIR)/libtcmalloc_and_profiler_la-profiledata.Plo \
	src/$(DEPDIR)/libtcmalloc_and_profiler_la-profiler.Plo \
	src/$(DEPDIR)/libtcmalloc_and_profiler_la-tcmalloc.Plo \
	src/$(DEPDIR)/libtcmalloc_debug_la-debugallocation.Plo \
	src/$(DEPDIR)/libtcmalloc_debug_la-heap-checker-bcad.Plo \
	src/$(DEPDIR)/libtcmalloc_debug_la-heap-checker.Plo \
	src/$(DEPDIR)/libtcmalloc_internal_la-central_freelist.Plo \
	src/$(DEPDIR)/libtcmalloc_internal_la-common.Plo \
	src/$(DEPDIR)/libtcmalloc_internal_la-emergency_malloc.Plo \
	src/$(DEPDIR)/libtcmalloc_internal_la-emergency_malloc_for_stacktrace.Plo \
	src/$(DEPDIR)/libtcmalloc_internal_la-fake_stacktrace_scope.Plo \
	src/$(DEPDIR)/libtcmalloc_internal_la-heap-profile-table.Plo \
	src/$(DEPDIR)/libtcmalloc_internal_la-heap-profiler.Plo \
	src/$(DEPDIR)/libtcmalloc_internal_la-internal_logging.Plo \
	src/$(DEPDIR)/libtcmalloc_internal_la-malloc_extension.Plo \
	src/$(DEPDIR)/libtcmalloc_internal_la-malloc_hook.Plo \
	src/$(DEPDIR)/libtcmalloc_internal_la-memfs_malloc.Plo \
	src/$(DEPDIR)/libtcmalloc_internal_la-memory_region_map.Plo \
	src/$(DEPDIR)/libtcmalloc_internal_la-page_heap.Plo \
	src/$(DEPDIR)/libtcmalloc_internal_la-raw_printer.Plo \
	src/$(DEPDIR)/libtcmalloc_internal_la-sampler.Plo \
	src/$(DEPDIR)/libtcmalloc_internal_la-span.Plo \
	src/$(DEPDIR)/libtcmalloc_internal_la-stack_trace_table.Plo \
	src/$(DEPDIR)/libtcmalloc_internal_la-static_vars.Plo \
	src/$(DEPDIR)/libtcmalloc_internal_la-symbolize.Plo \
	src/$(DEPDIR)/libtcmalloc_internal_la-system-alloc.Plo \
	src/$(DEPDIR)/libtcmalloc_internal_la-thread_cache.Plo \
	src/$(DEPDIR)/libtcmalloc_la-heap-checker-bcad.Plo \
	src/$(DEPDIR)/libtcmalloc_la-heap-checker.Plo \
	src/$(DEPDIR)/libtcmalloc_la-tcmalloc.Plo \
	src/$(DEPDIR)/libtcmalloc_minimal_debug_la-debugallocation.Plo \
	src/$(DEPDIR)/libtcmalloc_minimal_internal_la-central_freelist.Plo \
	src/$(DEPDIR)/libtcmalloc_minimal_internal_la-common.Plo \
	src/$(DEPDIR)/libtcmalloc_minimal_internal_la-internal_logging.Plo \
	src/$(DEPDIR)/libtcmalloc_minimal_internal_la-malloc_extension.Plo \
	src/$(DEPDIR)/libtcmalloc_minimal_internal_la-malloc_hook.Plo \
	src/$(DEPDIR)/libtcmalloc_minimal_internal_la-memfs_malloc.Plo \
	src/$(DEPDIR)/libtcmalloc_minimal_internal_la-page_heap.Plo \
	src/$(DEPDIR)/libtcmalloc_minimal_internal_la-sampler.Plo \
	src/$(DEPDIR)/libtcmalloc_minimal_internal_la-span.Plo \
	src/$(DEPDIR)/libtcmalloc_minimal_internal_la-stack_trace_table.Plo \
	src/$(DEPDIR)/libtcmalloc_minimal_internal_la-static_vars.Plo \
	src/$(DEPDIR)/libtcmalloc_minimal_internal_la-symbolize.Plo \
	src/$(DEPDIR)/libtcmalloc_minimal_internal_la-system-alloc.Plo \
	src/$(DEPDIR)/libtcmalloc_minimal_internal_la-thread_cache.Plo \
	src/$(DEPDIR)/libtcmalloc_minimal_la-tcmalloc.Plo \
	src/$(DEPDIR)/low_level_alloc_unittest-malloc_hook.Po \
	src/$(DEPDIR)/maybe_threads.Plo \
	src/$(DEPDIR)/profile-handler.Plo \
	src/$(DEPDIR)/profiledata.Plo src/$(DEPDIR)/profiler.Plo \
	src/$(DEPDIR)/stacktrace.Plo \
	src/$(DEPDIR)/tcm_min_asserts_unittest-central_freelist.Po \
	src/$(DEPDIR)/tcm_min_asserts_unittest-common.Po \
	src/$(DEPDIR)/tcm_min_asserts_unittest-internal_logging.Po \
	src/$(DEPDIR)/tcm_min_asserts_unittest-malloc_extension.Po \
	src/$(DEPDIR)/tcm_min_asserts_unittest-malloc_hook.Po \
	src/$(DEPDIR)/tcm_min_asserts_unittest-memfs_malloc.Po \
	src/$(DEPDIR)/tcm_min_asserts_unittest-page_heap.Po \
	src/$(DEPDIR)/tcm_min_asserts_unittest-sampler.Po \
	src/$(DEPDIR)/tcm_min_asserts_unittest-span.Po \
	src/$(DEPDIR)/tcm_min_asserts_unittest-stack_trace_table.Po \
	src/$(DEPDIR)/tcm_min_asserts_unittest-static_vars.Po \
	src/$(DEPDIR)/tcm_min_asserts_unittest-symbolize.Po \
	src/$(DEPDIR)/tcm_min_asserts_unittest-system-alloc.Po \
	src/$(DEPDIR)/tcm_min_asserts_unittest-tcmalloc.Po \
	src/$(DEPDIR)/tcm_min_asserts_unittest-thread_cache.Po \
	src/base/$(DEPDIR)/atomicops-internals-x86.Plo \
	src/base/$(DEPDIR)/dynamic_annotations.Plo \
	src/base/$(DEPDIR)/elf_mem_image.Plo \
	src/base/$(DEPDIR)/libtcmalloc_and_profiler_la-linuxthreads.Plo \
	src/base/$(DEPDIR)/libtcmalloc_debug_la-linuxthreads.Plo \
	src/base/$(DEPDIR)/libtcmalloc_internal_la-low_level_alloc.Plo \
	src/base/$(DEPDIR)/libtcmalloc_la-linuxthreads.Plo \
	src/base/$(DEPDIR)/logging.Plo \
	src/base/$(DEPDIR)/low_level_alloc_unittest-low_level_alloc.Po \
	src/base/$(DEPDIR)/spinlock.Plo \
	src/base/$(DEPDIR)/spinlock_internal.Plo \
	src/base/$(DEPDIR)/sysinfo.Plo \
	src/base/$(DEPDIR)/thread_lister.Plo \
	src/base/$(DEPDIR)/vdso_support.Plo \
	src/tests/$(DEPDIR)/addressmap_unittest-addressmap_unittest.Po \
	src/tests/$(DEPDIR)/atomicops_unittest.Po \
	src/tests/$(DEPDIR)/current_allocated_bytes_test-current_allocated_bytes_test.Po \
	src/tests/$(DEPDIR)/debugallocation_test-debugallocation_test.Po \
	src/tests/$(DEPDIR)/frag_unittest-frag_unittest.Po \
	src/tests/$(DEPDIR)/getpc_test.Po \
	src/tests/$(DEPDIR)/heap_checker_debug_unittest-heap-checker_unittest.Po \
	src/tests/$(DEPDIR)/heap_checker_unittest-heap-checker_unittest.Po \
	src/tests/$(DEPDIR)/heap_profiler_debug_unittest-heap-profiler_unittest.Po \
	src/tests/$(DEPDIR)/heap_profiler_unittest-heap-profiler_unittest.Po \
	src/tests/$(DEPDIR)/low_level_alloc_unittest-low_level_alloc_unittest.Po \
	src/tests/$(DEPDIR)/malloc_extension_c_test-malloc_extension_c_test.Po \
	src/tests/$(DEPDIR)/malloc_extension_debug_test-malloc_extension_test.Po \
	src/tests/$(DEPDIR)/malloc_extension_test-malloc_extension_test.Po \
	src/tests/$(DEPDIR)/malloc_hook_test-malloc_hook_test.Po \
	src/tests/$(DEPDIR)/malloc_hook_test-testutil.Po \
	src/tests/$(DEPDIR)/markidle_unittest-markidle_unittest.Po \
	src/tests/$(DEPDIR)/markidle_unittest-testutil.Po \
	src/tests/$(DEPDIR)/memalign_debug_unittest-memalign_unittest.Po \
	src/tests/$(DEPDIR)/memalign_debug_unittest-testutil.Po \
	src/tests/$(DEPDIR)/memalign_unittest-memalign_unittest.Po \
	src/tests/$(DEPDIR)/memalign_unittest-testutil.Po \
	src/tests/$(DEPDIR)/packed_cache_test-packed-cache_test.Po \
	src/tests/$(DEPDIR)/page_heap_test-page_heap_test.Po \
	src/tests/$(DEPDIR)/pagemap_unittest-pagemap_unittest.Po \
	src/tests/$(DEPDIR)/profile_handler_unittest-profile-handler_unittest.Po \
	src/tests/$(DEPDIR)/profiledata_unittest.Po \
	src/tests/$(DEPDIR)/profiler1_unittest-profiler_unittest.Po \
	src/tests/$(DEPDIR)/profiler1_unittest-testutil.Po \
	src/tests/$(DEPDIR)/profiler2_unittest-profiler_unittest.Po \
	src/tests/$(DEPDIR)/profiler2_unittest-testutil.Po \
	src/tests/$(DEPDIR)/profiler3_unittest-profiler_unittest.Po \
	src/tests/$(DEPDIR)/profiler3_unittest-testutil.Po \
	src/tests/$(DEPDIR)/profiler4_unittest-profiler_unittest.Po \
	src/tests/$(DEPDIR)/profiler4_unittest-testutil.Po \
	src/tests/$(DEPDIR)/raw_printer_test-raw_printer_test.Po \
	src/tests/$(DEPDIR)/realloc_debug_unittest-realloc_unittest.Po \
	src/tests/$(DEPDIR)/realloc_unittest-realloc_unittest.Po \
	src/tests/$(DEPDIR)/sampler_debug_test-sampler_test.Po \
	src/tests/$(DEPDIR)/sampler_test-sampler_test.Po \
	src/tests/$(DEPDIR)/sampling_debug_test-sampling_test.Po \
	src/tests/$(DEPDIR)/sampling_test-sampling_test.Po \
	src/tests/$(DEPDIR)/simple_compat_test.Po \
	src/tests/$(DEPDIR)/stack_trace_table_test-stack_trace_table_test.Po \
	src/tests/$(DEPDIR)/stacktrace_unittest.Po \
	src/tests/$(DEPDIR)/system_alloc_unittest-system-alloc_unittest.Po \
	src/tests/$(DEPDIR)/tcm_min_asserts_unittest-tcmalloc_unittest.Po \
	src/tests/$(DEPDIR)/tcm_min_asserts_unittest-testutil.Po \
	src/tests/$(DEPDIR)/tcmalloc_and_profiler_unittest-tcmalloc_unittest.Po \
	src/tests/$(DEPDIR)/tcmalloc_and_profiler_unittest-testutil.Po \
	src/tests/$(DEPDIR)/tcmalloc_both_unittest-tcmalloc_unittest.Po \
	src/tests/$(DEPDIR)/tcmalloc_both_unittest-testutil.Po \
	src/tests/$(DEPDIR)/tcmalloc_debug_unittest-tcmalloc_unittest.Po \
	src/tests/$(DEPDIR)/tcmalloc_debug_unittest-testutil.Po \
	src/tests/$(DEPDIR)/tcmalloc_large_heap_fragmentation_unittest-large_heap_fragmentation_unittest.Po \
	src/tests/$(DEPDIR)/tcmalloc_large_unittest-tcmalloc_large_unittest.Po \
	src/tests/$(DEPDIR)/tcmalloc_minimal_debug_unittest-tcmalloc_unittest.Po \
	src/tests/$(DEPDIR)/tcmalloc_minimal_debug_unittest-testutil.Po \
	src/tests/$(DEPDIR)/tcmalloc_minimal_large_heap_fragmentation_unittest-large_heap_fragmentation_unittest.Po \
	src/tests/$(DEPDIR)/tcmalloc_minimal_large_unittest-tcmalloc_large_unittest.Po \
	src/tests/$(DEPDIR)/tcmalloc_minimal_unittest-tcmalloc_unittest.Po \
	src/tests/$(DEPDIR)/tcmalloc_minimal_unittest-testutil.Po \
	src/tests/$(DEPDIR)/tcmalloc_unittest-tcmalloc_unittest.Po \
	src/tests/$(DEPDIR)/tcmalloc_unittest-testutil.Po \
	src/tests/$(DEPDIR)/thread_dealloc_unittest-testutil.Po \
	src/tests/$(DEPDIR)/thread_dealloc_unittest-thread_dealloc_unittest.Po \
	src/windows/$(DEPDIR)/addressmap_unittest-port.Po \
	src/windows/$(DEPDIR)/ia32_modrm_map.Plo \
	src/windows/$(DEPDIR)/ia32_opcode_map.Plo \
	src/windows/$(DEPDIR)/mini_disassembler.Plo \
	src/windows/$(DEPDIR)/patch_functions.Plo \
	src/windows/$(DEPDIR)/port.Plo \
	src/windows/$(DEPDIR)/preamble_patcher.Plo \
	src/windows/$(DEPDIR)/preamble_patcher_with_stub.Plo \
	src/windows/$(DEPDIR)/system-alloc.Plo
am__mv = mv -f
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CFLAGS) $(CFLAGS)
AM_V_CC = $(am__v_CC_$(V))
am__v_CC_ = $(am__v_CC_$(AM_DEFAULT_VERBOSITY))
am__v_CC_0 = @echo "  CC      " $@;
am__v_CC_1 = 
CCLD = $(CC)
LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CCLD = $(am__v_CCLD_$(V))
am__v_CCLD_ = $(am__v_CCLD_$(AM_DEFAULT_VERBOSITY))
am__v_CCLD_0 = @echo "  CCLD    " $@;
am__v_CCLD_1 = 
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CXXFLAGS) $(CXXFLAGS)
AM_V_CXX = $(am__v_CXX_$(V))
am__v_CXX_ = $(am__v_CXX_$(AM_DEFAULT_VERBOSITY))
am__v_CXX_0 = @echo "  CXX     " $@;
am__v_CXX_1 = 
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CXXLD = $(am__v_CXXLD_$(V))
am__v_CXXLD_ = $(am__v_CXXLD_$(AM_DEFAULT_VERBOSITY))
am__v_CXXLD_0 = @echo "  CXXLD   " $@;
am__v_CXXLD_1 = 
SOURCES = $(libfake_stacktrace_scope_la_SOURCES) \
	$(liblogging_la_SOURCES) $(libmaybe_threads_la_SOURCES) \
	$(libprofiler_la_SOURCES) $(librun_benchmark_la_SOURCES) \
	$(libspinlock_la_SOURCES) $(libstacktrace_la_SOURCES) \
	$(libsysinfo_la_SOURCES) $(libtcmalloc_la_SOURCES) \
	$(libtcmalloc_and_profiler_la_SOURCES) \
	$(libtcmalloc_debug_la_SOURCES) \
	$(libtcmalloc_internal_la_SOURCES) \
	$(libtcmalloc_minimal_la_SOURCES) \
	$(libtcmalloc_minimal_debug_la_SOURCES) \
	$(libtcmalloc_minimal_internal_la_SOURCES) \
	$(libwindows_la_SOURCES) $(addressmap_unittest_SOURCES) \
	$(atomicops_unittest_SOURCES) $(binary_trees_SOURCES) \
	$(binary_trees_shared_SOURCES) \
	$(current_allocated_bytes_test_SOURCES) \
	$(debugallocation_test_SOURCES) \
	$(debugallocation_test_sh_SOURCES) $(frag_unittest_SOURCES) \
	$(getpc_test_SOURCES) \
	$(heap_checker_death_unittest_sh_SOURCES) \
	$(heap_checker_debug_unittest_SOURCES) \
	$(heap_checker_debug_unittest_sh_SOURCES) \
	$(heap_checker_unittest_SOURCES) \
	$(heap_checker_unittest_sh_SOURCES) \
	$(heap_profiler_debug_unittest_SOURCES) \
	$(heap_profiler_debug_unittest_sh_SOURCES) \
	$(heap_profiler_unittest_SOURCES) \
	$(heap_profiler_unittest_sh_SOURCES) \
	$(low_level_alloc_unittest_SOURCES) $(malloc_bench_SOURCES) \
	$(malloc_bench_shared_SOURCES) \
	$(malloc_bench_shared_full_SOURCES) \
	$(malloc_extension_c_test_SOURCES) \
	$(malloc_extension_debug_test_SOURCES) \
	$(malloc_extension_test_SOURCES) $(malloc_hook_test_SOURCES) \
	$(markidle_unittest_SOURCES) \
	$(maybe_threads_unittest_sh_SOURCES) \
	$(memalign_debug_unittest_SOURCES) \
	$(memalign_unittest_SOURCES) $(packed_cache_test_SOURCES) \
	$(page_heap_test_SOURCES) $(pagemap_unittest_SOURCES) \
	$(profile_handler_unittest_SOURCES) \
	$(profiledata_unittest_SOURCES) $(profiler1_unittest_SOURCES) \
	$(profiler2_unittest_SOURCES) $(profiler3_unittest_SOURCES) \
	$(profiler4_unittest_SOURCES) $(profiler_unittest_sh_SOURCES) \
	$(raw_printer_test_SOURCES) $(realloc_debug_unittest_SOURCES) \
	$(realloc_unittest_SOURCES) $(sampler_debug_test_SOURCES) \
	$(sampler_test_SOURCES) $(sampling_debug_test_SOURCES) \
	$(sampling_debug_test_sh_SOURCES) $(sampling_test_SOURCES) \
	$(sampling_test_sh_SOURCES) $(simple_compat_test_SOURCES) \
	$(stack_trace_table_test_SOURCES) \
	$(stacktrace_unittest_SOURCES) \
	$(system_alloc_unittest_SOURCES) \
	$(tcm_min_asserts_unittest_SOURCES) \
	$(tcmalloc_and_profiler_unittest_SOURCES) \
	$(tcmalloc_both_unittest_SOURCES) \
	$(tcmalloc_debug_unittest_SOURCES) \
	$(tcmalloc_large_heap_fragmentation_unittest_SOURCES) \
	$(tcmalloc_large_unittest_SOURCES) \
	$(tcmalloc_minimal_debug_unittest_SOURCES) \
	$(tcmalloc_minimal_large_heap_fragmentation_unittest_SOURCES) \
	$(tcmalloc_minimal_large_unittest_SOURCES) \
	$(tcmalloc_minimal_unittest_SOURCES) \
	$(tcmalloc_unittest_SOURCES) $(tcmalloc_unittest_sh_SOURCES) \
	$(thread_dealloc_unittest_SOURCES)
DIST_SOURCES = $(am__libfake_stacktrace_scope_la_SOURCES_DIST) \
	$(liblogging_la_SOURCES) \
	$(am__libmaybe_threads_la_SOURCES_DIST) \
	$(am__libprofiler_la_SOURCES_DIST) \
	$(am__librun_benchmark_la_SOURCES_DIST) \
	$(am__libspinlock_la_SOURCES_DIST) \
	$(am__libstacktrace_la_SOURCES_DIST) $(libsysinfo_la_SOURCES) \
	$(am__libtcmalloc_la_SOURCES_DIST) \
	$(am__libtcmalloc_and_profiler_la_SOURCES_DIST) \
	$(am__libtcmalloc_debug_la_SOURCES_DIST) \
	$(am__libtcmalloc_internal_la_SOURCES_DIST) \
	$(am__libtcmalloc_minimal_la_SOURCES_DIST) \
	$(am__libtcmalloc_minimal_debug_la_SOURCES_DIST) \
	$(am__libtcmalloc_minimal_internal_la_SOURCES_DIST) \
	$(am__libwindows_la_SOURCES_DIST) \
	$(am__addressmap_unittest_SOURCES_DIST) \
	$(atomicops_unittest_SOURCES) $(am__binary_trees_SOURCES_DIST) \
	$(am__binary_trees_shared_SOURCES_DIST) \
	$(current_allocated_bytes_test_SOURCES) \
	$(am__debugallocation_test_SOURCES_DIST) \
	$(am__debugallocation_test_sh_SOURCES_DIST) \
	$(frag_unittest_SOURCES) $(am__getpc_test_SOURCES_DIST) \
	$(am__heap_checker_death_unittest_sh_SOURCES_DIST) \
	$(am__heap_checker_debug_unittest_SOURCES_DIST) \
	$(am__heap_checker_debug_unittest_sh_SOURCES_DIST) \
	$(am__heap_checker_unittest_SOURCES_DIST) \
	$(am__heap_checker_unittest_sh_SOURCES_DIST) \
	$(am__heap_profiler_debug_unittest_SOURCES_DIST) \
	$(am__heap_profiler_debug_unittest_sh_SOURCES_DIST) \
	$(am__heap_profiler_unittest_SOURCES_DIST) \
	$(am__heap_profiler_unittest_sh_SOURCES_DIST) \
	$(am__low_level_alloc_unittest_SOURCES_DIST) \
	$(am__malloc_bench_SOURCES_DIST) \
	$(am__malloc_bench_shared_SOURCES_DIST) \
	$(am__malloc_bench_shared_full_SOURCES_DIST) \
	$(am__malloc_extension_c_test_SOURCES_DIST) \
	$(am__malloc_extension_debug_test_SOURCES_DIST) \
	$(malloc_extension_test_SOURCES) $(malloc_hook_test_SOURCES) \
	$(markidle_unittest_SOURCES) \
	$(am__maybe_threads_unittest_sh_SOURCES_DIST) \
	$(am__memalign_debug_unittest_SOURCES_DIST) \
	$(am__memalign_unittest_SOURCES_DIST) \
	$(packed_cache_test_SOURCES) $(page_heap_test_SOURCES) \
	$(pagemap_unittest_SOURCES) \
	$(am__profile_handler_unittest_SOURCES_DIST) \
	$(am__profiledata_unittest_SOURCES_DIST) \
	$(am__profiler1_unittest_SOURCES_DIST) \
	$(am__profiler2_unittest_SOURCES_DIST) \
	$(am__profiler3_unittest_SOURCES_DIST) \
	$(am__profiler4_unittest_SOURCES_DIST) \
	$(am__profiler_unittest_sh_SOURCES_DIST) \
	$(am__raw_printer_test_SOURCES_DIST) \
	$(am__realloc_debug_unittest_SOURCES_DIST) \
	$(realloc_unittest_SOURCES) \
	$(am__sampler_debug_test_SOURCES_DIST) \
	$(am__sampler_test_SOURCES_DIST) \
	$(am__sampling_debug_test_SOURCES_DIST) \
	$(am__sampling_debug_test_sh_SOURCES_DIST) \
	$(am__sampling_test_SOURCES_DIST) \
	$(am__sampling_test_sh_SOURCES_DIST) \
	$(am__simple_compat_test_SOURCES_DIST) \
	$(stack_trace_table_test_SOURCES) \
	$(am__stacktrace_unittest_SOURCES_DIST) \
	$(am__system_alloc_unittest_SOURCES_DIST) \
	$(am__tcm_min_asserts_unittest_SOURCES_DIST) \
	$(am__tcmalloc_and_profiler_unittest_SOURCES_DIST) \
	$(am__tcmalloc_both_unittest_SOURCES_DIST) \
	$(am__tcmalloc_debug_unittest_SOURCES_DIST) \
	$(am__tcmalloc_large_heap_fragmentation_unittest_SOURCES_DIST) \
	$(am__tcmalloc_large_unittest_SOURCES_DIST) \
	$(am__tcmalloc_minimal_debug_unittest_SOURCES_DIST) \
	$(tcmalloc_minimal_large_heap_fragmentation_unittest_SOURCES) \
	$(tcmalloc_minimal_large_unittest_SOURCES) \
	$(tcmalloc_minimal_unittest_SOURCES) \
	$(am__tcmalloc_unittest_SOURCES_DIST) \
	$(am__tcmalloc_unittest_sh_SOURCES_DIST) \
	$(thread_dealloc_unittest_SOURCES)
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
man1dir = $(mandir)/man1
NROFF = nroff
MANS = $(dist_man_MANS)
am__dist_doc_DATA_DIST = AUTHORS COPYING ChangeLog INSTALL NEWS README \
	README_windows.txt TODO ChangeLog.old docs/index.html \
	docs/designstyle.css docs/pprof_remote_servers.html \
	docs/tcmalloc.html docs/overview.gif docs/pageheap.gif \
	docs/spanmap.gif docs/threadheap.gif docs/t-test1.times.txt \
	docs/tcmalloc-opspercpusec.vs.threads.1024.bytes.png \
	docs/tcmalloc-opspercpusec.vs.threads.128.bytes.png \
	docs/tcmalloc-opspercpusec.vs.threads.131072.bytes.png \
	docs/tcmalloc-opspercpusec.vs.threads.16384.bytes.png \
	docs/tcmalloc-opspercpusec.vs.threads.2048.bytes.png \
	docs/tcmalloc-opspercpusec.vs.threads.256.bytes.png \
	docs/tcmalloc-opspercpusec.vs.threads.32768.bytes.png \
	docs/tcmalloc-opspercpusec.vs.threads.4096.bytes.png \
	docs/tcmalloc-opspercpusec.vs.threads.512.bytes.png \
	docs/tcmalloc-opspercpusec.vs.threads.64.bytes.png \
	docs/tcmalloc-opspercpusec.vs.threads.65536.bytes.png \
	docs/tcmalloc-opspercpusec.vs.threads.8192.bytes.png \
	docs/tcmalloc-opspersec.vs.size.1.threads.png \
	docs/tcmalloc-opspersec.vs.size.12.threads.png \
	docs/tcmalloc-opspersec.vs.size.16.threads.png \
	docs/tcmalloc-opspersec.vs.size.2.threads.png \
	docs/tcmalloc-opspersec.vs.size.20.threads.png \
	docs/tcmalloc-opspersec.vs.size.3.threads.png \
	docs/tcmalloc-opspersec.vs.size.4.threads.png \
	docs/tcmalloc-opspersec.vs.size.5.threads.png \
	docs/tcmalloc-opspersec.vs.size.8.threads.png \
	docs/overview.dot docs/pageheap.dot docs/spanmap.dot \
	docs/threadheap.dot docs/heapprofile.html \
	docs/heap-example1.png docs/heap_checker.html \
	docs/cpuprofile.html docs/cpuprofile-fileformat.html \
	docs/pprof-test-big.gif docs/pprof-test.gif \
	docs/pprof-vsnprintf-big.gif docs/pprof-vsnprintf.gif
DATA = $(dist_doc_DATA) $(pkgconfig_DATA)
am__perftoolsinclude_HEADERS_DIST = src/gperftools/stacktrace.h \
	src/gperftools/malloc_hook.h src/gperftools/malloc_hook_c.h \
	src/gperftools/malloc_extension.h \
	src/gperftools/malloc_extension_c.h src/gperftools/nallocx.h \
	src/gperftools/heap-profiler.h src/gperftools/heap-checker.h \
	src/gperftools/profiler.h
HEADERS = $(googleinclude_HEADERS) $(nodist_perftoolsinclude_HEADERS) \
	$(noinst_HEADERS) $(perftoolsinclude_HEADERS)
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
ETAGS = etags
CTAGS = ctags
CSCOPE = cscope
AM_RECURSIVE_TARGETS = cscope check recheck
am__tty_colors_dummy = \
  mgn= red= grn= lgn= blu= brg= std=; \
  am__color_tests=no
am__tty_colors = { \
  $(am__tty_colors_dummy); \
  if test "X$(AM_COLOR_TESTS)" = Xno; then \
    am__color_tests=no; \
  elif test "X$(AM_COLOR_TESTS)" = Xalways; then \
    am__color_tests=yes; \
  elif test "X$$TERM" != Xdumb && { test -t 1; } 2>/dev/null; then \
    am__color_tests=yes; \
  fi; \
  if test $$am__color_tests = yes; then \
    red='[0;31m'; \
    grn='[0;32m'; \
    lgn='[1;32m'; \
    blu='[1;34m'; \
    mgn='[0;35m'; \
    brg='[1m'; \
    std='[m'; \
  fi; \
}
am__recheck_rx = ^[ 	]*:recheck:[ 	]*
am__global_test_result_rx = ^[ 	]*:global-test-result:[ 	]*
am__copy_in_global_log_rx = ^[ 	]*:copy-in-global-log:[ 	]*
# A command that, given a newline-separated list of test names on the
# standard input, print the name of the tests that are to be re-run
# upon "make recheck".
am__list_recheck_tests = $(AWK) '{ \
  recheck = 1; \
  while ((rc = (getline line < ($$0 ".trs"))) != 0) \
    { \
      if (rc < 0) \
        { \
          if ((getline line2 < ($$0 ".log")) < 0) \
	    recheck = 0; \
          break; \
        } \
      else if (line ~ /$(am__recheck_rx)[nN][Oo]/) \
        { \
          recheck = 0; \
          break; \
        } \
      else if (line ~ /$(am__recheck_rx)[yY][eE][sS]/) \
        { \
          break; \
        } \
    }; \
  if (recheck) \
    print $$0; \
  close ($$0 ".trs"); \
  close ($$0 ".log"); \
}'
# A command that, given a newline-separated list of test names on the
# standard input, create the global log from their .trs and .log files.
am__create_global_log = $(AWK) ' \
function fatal(msg) \
{ \
  print "fatal: making $@: " msg | "cat >&2"; \
  exit 1; \
} \
function rst_section(header) \
{ \
  print header; \
  len = length(header); \
  for (i = 1; i <= len; i = i + 1) \
    printf "="; \
  printf "\n\n"; \
} \
{ \
  copy_in_global_log = 1; \
  global_test_result = "RUN"; \
  while ((rc = (getline line < ($$0 ".trs"))) != 0) \
    { \
      if (rc < 0) \
         fatal("failed to read from " $$0 ".trs"); \
      if (line ~ /$(am__global_test_result_rx)/) \
        { \
          sub("$(am__global_test_result_rx)", "", line); \
          sub("[ 	]*$$", "", line); \
          global_test_result = line; \
        } \
      else if (line ~ /$(am__copy_in_global_log_rx)[nN][oO]/) \
        copy_in_global_log = 0; \
    }; \
  if (copy_in_global_log) \
    { \
      rst_section(global_test_result ": " $$0); \
      while ((rc = (getline line < ($$0 ".log"))) != 0) \
      { \
        if (rc < 0) \
          fatal("failed to read from " $$0 ".log"); \
        print line; \
      }; \
      printf "\n"; \
    }; \
  close ($$0 ".trs"); \
  close ($$0 ".log"); \
}'
# Restructured Text title.
am__rst_title = { sed 's/.*/   &   /;h;s/./=/g;p;x;s/ *$$//;p;g' && echo; }
# Solaris 10 'make', and several other traditional 'make' implementations,
# pass "-e" to $(SHELL), and POSIX 2008 even requires this.  Work around it
# by disabling -e (using the XSI extension "set +e") if it's set.
am__sh_e_setup = case $$- in *e*) set +e;; esac
# Default flags passed to test drivers.
am__common_driver_flags = \
  --color-tests "$$am__color_tests" \
  --enable-hard-errors "$$am__enable_hard_errors" \
  --expect-failure "$$am__expect_failure"
# To be inserted before the command running the test.  Creates the
# directory for the log if needed.  Stores in $dir the directory
# containing $f, in $tst the test, in $log the log.  Executes the
# developer- defined test setup AM_TESTS_ENVIRONMENT (if any), and
# passes TESTS_ENVIRONMENT.  Set up options for the wrapper that
# will run the test scripts (or their associated LOG_COMPILER, if
# thy have one).
am__check_pre = \
$(am__sh_e_setup);					\
$(am__vpath_adj_setup) $(am__vpath_adj)			\
$(am__tty_colors);					\
srcdir=$(srcdir); export srcdir;			\
case "$@" in						\
  */*) am__odir=`echo "./$@" | sed 's|/[^/]*$$||'`;;	\
    *) am__odir=.;; 					\
esac;							\
test "x$$am__odir" = x"." || test -d "$$am__odir" 	\
  || $(MKDIR_P) "$$am__odir" || exit $$?;		\
if test -f "./$$f"; then dir=./;			\
elif test -f "$$f"; then dir=;				\
else dir="$(srcdir)/"; fi;				\
tst=$$dir$$f; log='$@'; 				\
if test -n '$(DISABLE_HARD_ERRORS)'; then		\
  am__enable_hard_errors=no; 				\
else							\
  am__enable_hard_errors=yes; 				\
fi; 							\
case " $(XFAIL_TESTS) " in				\
  *[\ \	]$$f[\ \	]* | *[\ \	]$$dir$$f[\ \	]*) \
    am__expect_failure=yes;;				\
  *)							\
    am__expect_failure=no;;				\
esac; 							\
$(AM_TESTS_ENVIRONMENT) $(TESTS_ENVIRONMENT)
# A shell command to get the names of the tests scripts with any registered
# extension removed (i.e., equivalently, the names of the test logs, with
# the '.log' extension removed).  The result is saved in the shell variable
# '$bases'.  This honors runtime overriding of TESTS and TEST_LOGS.  Sadly,
# we cannot use something simpler, involving e.g., "$(TEST_LOGS:.log=)",
# since that might cause problem with VPATH rewrites for suffix-less tests.
# See also 'test-harness-vpath-rewrite.sh' and 'test-trs-basic.sh'.
am__set_TESTS_bases = \
  bases='$(TEST_LOGS)'; \
  bases=`for i in $$bases; do echo $$i; done | sed 's/\.log$$//'`; \
  bases=`echo $$bases`
RECHECK_LOGS = $(TEST_LOGS)
TEST_SUITE_LOG = test-suite.log
TEST_EXTENSIONS =  .test
LOG_DRIVER = $(SHELL) $(top_srcdir)/test-driver
LOG_COMPILE = $(LOG_COMPILER) $(AM_LOG_FLAGS) $(LOG_FLAGS)
am__set_b = \
  case '$@' in \
    */*) \
      case '$*' in \
        */*) b='$*';; \
          *) b=`echo '$@' | sed 's/\.log$$//'`; \
       esac;; \
    *) \
      b='$*';; \
  esac
am__test_logs1 = $(TESTS:=.log)
am__test_logs2 = $(am__test_logs1:.log=.log)
TEST_LOGS = $(am__test_logs2:.test.log=.log)
TEST_LOG_DRIVER = $(SHELL) $(top_srcdir)/test-driver
TEST_LOG_COMPILE = $(TEST_LOG_COMPILER) $(AM_TEST_LOG_FLAGS) \
	$(TEST_LOG_FLAGS)
am__DIST_COMMON = $(dist_man_MANS) $(srcdir)/Makefile.in \
	$(top_srcdir)/src/config.h.in \
	$(top_srcdir)/src/gperftools/tcmalloc.h.in \
	$(top_srcdir)/src/windows/gperftools/tcmalloc.h.in AUTHORS \
	COPYING ChangeLog INSTALL NEWS README TODO compile \
	config.guess config.sub depcomp install-sh ltmain.sh missing \
	test-driver
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
distdir = $(PACKAGE)-$(VERSION)
top_distdir = $(distdir)
am__remove_distdir = \
  if test -d "$(distdir)"; then \
    find "$(distdir)" -type d ! -perm -200 -exec chmod u+w {} ';' \
      && rm -rf "$(distdir)" \
      || { sleep 5 && rm -rf "$(distdir)"; }; \
  else :; fi
am__post_remove_distdir = $(am__remove_distdir)
DIST_ARCHIVES = $(distdir).tar.gz $(distdir).zip
GZIP_ENV = --best
DIST_TARGETS = dist-gzip dist-zip
distuninstallcheck_listfiles = find . -type f -print
am__distuninstallcheck_listfiles = $(distuninstallcheck_listfiles) \
  | sed 's|^\./|$(prefix)/|' | grep -v '$(infodir)/dir$$'
distcleancheck_listfiles = find . -type f -print
ACLOCAL = ${SHELL} /Users/jbaylina/git/iden3/ffiasm/build/gperftools-2.7.90/missing aclocal-1.16
AMTAR = $${TAR-tar}
AM_DEFAULT_VERBOSITY = 1
AR = ar
AUTOCONF = ${SHELL} /Users/jbaylina/git/iden3/ffiasm/build/gperftools-2.7.90/missing autoconf
AUTOHEADER = ${SHELL} /Users/jbaylina/git/iden3/ffiasm/build/gperftools-2.7.90/missing autoheader
AUTOMAKE = ${SHELL} /Users/jbaylina/git/iden3/ffiasm/build/gperftools-2.7.90/missing automake-1.16
AWK = awk
CC = gcc
CCDEPMODE = depmode=gcc3
CFLAGS = -g -O2
CPP = gcc -E
CPPFLAGS = 
CXX = g++ -std=gnu++11
CXXCPP = g++ -std=gnu++11 -E
CXXDEPMODE = depmode=gcc3
CXXFLAGS = -g -O2
CYGPATH_W = echo
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DLLTOOL = false
DSYMUTIL = dsymutil
DUMPBIN = 
ECHO_C = \c
ECHO_N = 
ECHO_T = 
EGREP = /usr/bin/grep -E
EXEEXT = 
FGREP = /usr/bin/grep -F
GIT = /usr/bin/git
GREP = /usr/bin/grep
HAVE_CXX11 = 1
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
LD = /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/ld
LDFLAGS = 
LIBOBJS = 
LIBS = 
LIBSTDCXX_LA_LINKER_FLAG = 
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LIPO = lipo
LN_S = ln -s
LTLIBOBJS = 
LT_SYS_LIBRARY_PATH = 
MAINT = #
MAKEINFO = ${SHELL} /Users/jbaylina/git/iden3/ffiasm/build/gperftools-2.7.90/missing makeinfo
MANIFEST_TOOL = :
MKDIR_P = ./install-sh -c -d
NANOSLEEP_LIBS = 
NM = /usr/bin/nm -B
NMEDIT = nmedit
OBJCOPY = 
OBJDUMP = objdump
OBJEXT = o
OTOOL = otool
OTOOL64 = :
PACKAGE = gperftools
PACKAGE_BUGREPORT = gperftools@googlegroups.com
PACKAGE_NAME = gperftools
PACKAGE_STRING = gperftools 2.7.90
PACKAGE_TARNAME = gperftools
PACKAGE_URL = 
PACKAGE_VERSION = 2.7.90
PATH_SEPARATOR = :
PROFILER_SO_VERSION = 4:19:4
PTHREAD_CC = gcc
PTHREAD_CFLAGS = -D_THREAD_SAFE 
PTHREAD_LIBS = 
RANLIB = ranlib
SED = /usr/bin/sed
SET_MAKE = 
SHELL = /bin/sh
STRIP = strip
TCMALLOC_SO_VERSION = 9:4:5
TC_VERSION_MAJOR = 2
TC_VERSION_MINOR = 7
TC_VERSION_PATCH = .90
UNWIND_LIBS = 
VERSION = 2.7.90
abs_builddir = /Users/jbaylina/git/iden3/ffiasm/build/gperftools-2.7.90
abs_srcdir = /Users/jbaylina/git/iden3/ffiasm/build/gperftools-2.7.90
abs_top_builddir = /Users/jbaylina/git/iden3/ffiasm/build/gperftools-2.7.90
abs_top_srcdir = /Users/jbaylina/git/iden3/ffiasm/build/gperftools-2.7.90
ac_ct_AR = ar
ac_ct_CC = gcc
ac_ct_CXX = g++
ac_ct_DUMPBIN = 
ac_cv_have_std_align_val_t = 1
ac_cv_have_struct_mallinfo = 0
acx_pthread_config = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = $${TAR-tar} chof - "$$tardir"
am__untar = $${TAR-tar} xf -
bindir = ${exec_prefix}/bin
build = x86_64-apple-darwin19.4.0
build_alias = 
build_cpu = x86_64
build_os = darwin19.4.0
build_vendor = apple
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
host = x86_64-apple-darwin19.4.0
host_alias = 
host_cpu = x86_64
host_os = darwin19.4.0
host_vendor = apple
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = ${SHELL} /Users/jbaylina/git/iden3/ffiasm/build/gperftools-2.7.90/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = $(MKDIR_P)
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /usr/local
program_transform_name = s,x,x,
psdir = ${docdir}
runstatedir = ${localstatedir}/run
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
sysconfdir = ${prefix}/etc
target_alias = 
top_build_prefix = 
top_builddir = .
top_srcdir = .

# Make sure that when we re-make ./configure, we get the macros we need
ACLOCAL_AMFLAGS = -I m4
AUTOMAKE_OPTIONS = subdir-objects

# This is so we can #include <gperftools/foo>
AM_CPPFLAGS = -I$(top_srcdir)/src $(am__append_1)

# This is mostly based on configure options
AM_CXXFLAGS = $(am__append_2) $(am__append_4) $(am__append_5) \
	$(am__append_6) $(am__append_7) $(am__append_8) \
	$(am__append_9)
NO_BUILTIN_CXXFLAGS = $(am__append_3)

# The -no-undefined flag allows libtool to generate shared libraries for
# Cygwin and MinGW.  LIBSTDCXX_LA_LINKER_FLAG is used to fix a Solaris bug.
AM_LDFLAGS = -no-undefined $(LIBSTDCXX_LA_LINKER_FLAG)

# For windows systems (at least, mingw), we need to tell all our
# tests to link in libtcmalloc using -u.  This is because libtcmalloc
# accomplishes its tasks via patching, leaving no work for the linker
# to identify, so the linker will ignore libtcmalloc by default unless
# we explicitly create a dependency via -u.
TCMALLOC_FLAGS = $(am__append_10)
WEAKEN = :

# If we have objcopy, make malloc/free/etc weak symbols.  That way folks
# can override our malloc if they want to (they can still use tc_malloc).
# Note: the weird-looking symbols are the c++ memory functions:
# (in order) new, new(nothrow), new[], new[](nothrow), delete, delete[]
# In theory this will break if mangling changes, but that seems pretty
# unlikely at this point.  Just in case, I throw in versions with an
# extra underscore as well, which may help on OS X.
#WEAKEN = $(OBJCOPY) -W malloc -W free -W realloc -W calloc -W cfree \
#         -W memalign -W posix_memalign -W valloc -W pvalloc \
#         -W aligned_alloc \
#         -W malloc_stats -W mallopt -W mallinfo -W nallocx \
#         -W _Znwm -W _ZnwmRKSt9nothrow_t -W _Znam -W _ZnamRKSt9nothrow_t \
#         -W _ZdlPv -W _ZdaPv \
#         -W __Znwm -W __ZnwmRKSt9nothrow_t -W __Znam -W __ZnamRKSt9nothrow_t \
#         -W __ZdlPv -W __ZdaPv

LIBS_TO_WEAKEN = libtcmalloc_minimal.la $(am__append_32) \
	$(am__append_50) $(am__append_67) $(am__append_82)
perftoolsincludedir = $(includedir)/gperftools
# The .h files you want to install (that is, .h files that people
# who install this package can include in their own applications.)
# We'll add to this later, on a library-by-library basis
perftoolsinclude_HEADERS = $(am__append_16) \
	$(SG_TCMALLOC_MINIMAL_INCLUDES) $(am__append_44) \
	$(am__append_74)
# tcmalloc.h is a special case, because it's a .h.in file
nodist_perftoolsinclude_HEADERS = src/gperftools/tcmalloc.h
noinst_HEADERS = src/gperftools/tcmalloc.h.in

# This is provided for backwards compatibility.  It is populated by
# files that just forward to the canonical location in
# perftoolsincludedir.
googleincludedir = $(includedir)/google
googleinclude_HEADERS = \
   src/google/heap-checker.h			\
   src/google/heap-profiler.h			\
   src/google/malloc_extension.h		\
   src/google/malloc_extension_c.h		\
   src/google/malloc_hook.h			\
   src/google/malloc_hook_c.h			\
   src/google/profiler.h			\
   src/google/stacktrace.h			\
   src/google/tcmalloc.h


# This is for HTML and other documentation you want to install.
# Add your documentation files (in doc/) in addition to these
# top-level boilerplate files.  Also add a TODO file if you have one.
# We'll add to this later, on a library-by-library basis

### Documentation

# I don't know how to say "distribute the .dot files but don't install them";
# noinst doesn't seem to work with data.  I separate them out anyway, in case
# one day we figure it out.  Regardless, installing the dot files isn't the
# end of the world.
dist_doc_DATA = AUTHORS COPYING ChangeLog INSTALL NEWS README \
	README_windows.txt TODO ChangeLog.old docs/index.html \
	docs/designstyle.css $(am__append_19) $(am__append_22) \
	docs/tcmalloc.html docs/overview.gif docs/pageheap.gif \
	docs/spanmap.gif docs/threadheap.gif docs/t-test1.times.txt \
	docs/tcmalloc-opspercpusec.vs.threads.1024.bytes.png \
	docs/tcmalloc-opspercpusec.vs.threads.128.bytes.png \
	docs/tcmalloc-opspercpusec.vs.threads.131072.bytes.png \
	docs/tcmalloc-opspercpusec.vs.threads.16384.bytes.png \
	docs/tcmalloc-opspercpusec.vs.threads.2048.bytes.png \
	docs/tcmalloc-opspercpusec.vs.threads.256.bytes.png \
	docs/tcmalloc-opspercpusec.vs.threads.32768.bytes.png \
	docs/tcmalloc-opspercpusec.vs.threads.4096.bytes.png \
	docs/tcmalloc-opspercpusec.vs.threads.512.bytes.png \
	docs/tcmalloc-opspercpusec.vs.threads.64.bytes.png \
	docs/tcmalloc-opspercpusec.vs.threads.65536.bytes.png \
	docs/tcmalloc-opspercpusec.vs.threads.8192.bytes.png \
	docs/tcmalloc-opspersec.vs.size.1.threads.png \
	docs/tcmalloc-opspersec.vs.size.12.threads.png \
	docs/tcmalloc-opspersec.vs.size.16.threads.png \
	docs/tcmalloc-opspersec.vs.size.2.threads.png \
	docs/tcmalloc-opspersec.vs.size.20.threads.png \
	docs/tcmalloc-opspersec.vs.size.3.threads.png \
	docs/tcmalloc-opspersec.vs.size.4.threads.png \
	docs/tcmalloc-opspersec.vs.size.5.threads.png \
	docs/tcmalloc-opspersec.vs.size.8.threads.png \
	docs/overview.dot docs/pageheap.dot docs/spanmap.dot \
	docs/threadheap.dot $(am__append_64) $(am__append_65) \
	$(am__append_79)

# The libraries (.so's) you want to install
# We'll add to this later, on a library-by-library basis
lib_LTLIBRARIES = libtcmalloc_minimal.la $(am__append_31) \
	$(am__append_46) $(am__append_66) $(am__append_75) \
	$(am__append_80)
# This is for 'convenience libraries' -- basically just a container for sources

### Making the library
noinst_LTLIBRARIES = liblogging.la libsysinfo.la libmaybe_threads.la \
	$(am__append_11) $(am__append_14) $(am__append_17) \
	libtcmalloc_minimal_internal.la $(am__append_39) \
	$(am__append_45)

# Add this whether or not we're under MinGW, to keep the tarball complete.
# Because we've commented out the test, above, we have to explicitly add
# the test files to the tarball or automake will leave them out.
WINDOWS_PROJECTS = gperftools.sln \
	vsprojects/preamble_patcher_test/preamble_patcher_test.vcxproj \
	src/windows/preamble_patcher_test.cc src/windows/shortproc.asm \
	src/windows/auto_testing_hook.h \
	vsprojects/low_level_alloc_unittest/low_level_alloc_unittest.vcxproj \
	$(am__append_23) \
	vsprojects/libtcmalloc_minimal/libtcmalloc_minimal.vcxproj \
	vsprojects/tcmalloc_minimal_unittest/tcmalloc_minimal_unittest.vcxproj \
	vsprojects/tcmalloc_minimal_large/tcmalloc_minimal_large_unittest.vcxproj \
	vsprojects/addressmap_unittest/addressmap_unittest.vcxproj \
	vsprojects/system-alloc_unittest/system-alloc_unittest.vcxproj \
	vsprojects/packed-cache_test/packed-cache_test.vcxproj \
	vsprojects/frag_unittest/frag_unittest.vcxproj \
	vsprojects/markidle_unittest/markidle_unittest.vcxproj \
	vsprojects/current_allocated_bytes_test/current_allocated_bytes_test.vcxproj \
	vsprojects/malloc_hook_test/malloc_hook_test.vcxproj \
	vsprojects/malloc_extension_test/malloc_extension_test.vcxproj \
	vsprojects/page_heap_test/page_heap_test.vcxproj \
	vsprojects/pagemap_unittest/pagemap_unittest.vcxproj \
	vsprojects/realloc_unittest/realloc_unittest.vcxproj \
	vsprojects/stack_trace_table_test/stack_trace_table_test.vcxproj \
	vsprojects/thread_dealloc_unittest/thread_dealloc_unittest.vcxproj \
	$(am__append_57)
# TESTS_ENVIRONMENT sets environment variables for when you run unittest.
# We always get "srcdir" set for free.
# We'll add to this later, on a library-by-library basis.
TESTS_ENVIRONMENT = $(am__append_20) $(am__append_56)
# All script tests should be added here
noinst_SCRIPTS = $(am__append_25) $(am__append_37) $(am__append_52) \
	$(am__append_59) $(am__append_62) $(am__append_77)

# This is my own var, used for extra libraries I make that I need installed
EXTRA_INSTALL = 

### ------- library routines, in src/base

# This is a 'convenience library' -- it's not actually installed or anything
LOGGING_INCLUDES = src/base/logging.h \
                   src/base/commandlineflags.h \
                   src/base/basictypes.h \
                   src/base/dynamic_annotations.h \
                   src/third_party/valgrind.h

liblogging_la_SOURCES = src/base/logging.cc \
                        src/base/dynamic_annotations.c \
                        $(LOGGING_INCLUDES)

SYSINFO_INCLUDES = src/base/sysinfo.h \
                   src/getenv_safe.h \
                   src/base/logging.h \
                   src/base/commandlineflags.h \
                   src/base/arm_instruction_set_select.h \
                   src/base/basictypes.h

libsysinfo_la_SOURCES = src/base/sysinfo.cc \
                        $(SYSINFO_INCLUDES)

libsysinfo_la_LIBADD = $(NANOSLEEP_LIBS) $(am__append_12)
# .cc is conditionally added below
libmaybe_threads_la_SOURCES = src/maybe_threads.h $(am__append_13) \
	$(am__append_15)

# For MinGW, we use also have to use libwindows Luckily, we need the
# windows.a library in exactly the same place we need spinlock.a
# (pretty much everywhere), so we can use the same variable name for
# each.  We can also optimize the MinGW rule a bit by leaving out
# files we know aren't used on windows, such as
# atomicops-internals-x86.cc.  libwindows also obsoletes the need for
# other files like system_alloc.cc.
#WINDOWS_INCLUDES = src/windows/port.h \
#                   src/windows/mingw.h \
#                   src/windows/mini_disassembler.h \
#                   src/windows/mini_disassembler_types.h \
#                   src/windows/preamble_patcher.h

#libwindows_la_SOURCES = $(WINDOWS_INCLUDES) \
#                        src/windows/port.cc \
#                        src/windows/system-alloc.cc \
#                        src/windows/ia32_modrm_map.cc \
#                        src/windows/ia32_opcode_map.cc \
#                        src/windows/mini_disassembler.cc \
#                        src/windows/patch_functions.cc \
#                        src/windows/preamble_patcher.cc \
#                        src/windows/preamble_patcher_with_stub.cc

# patch_functions.cc uses Psapi.lib.  MSVC has a #pragma for that, but not us.
#libwindows_la_LIBADD = -lpsapi
# spinlock is the only code that uses atomicops.
SPINLOCK_INCLUDES = src/base/spinlock.h \
                    src/base/spinlock_internal.h \
                    src/base/atomicops.h \
                    src/base/atomicops-internals-macosx.h \
                    src/base/atomicops-internals-linuxppc.h \
                    src/base/atomicops-internals-windows.h \
                    src/base/atomicops-internals-x86.h

#SPINLOCK_INCLUDES = src/base/spinlock.h \
#                    src/base/spinlock_internal.h \
#                    src/base/spinlock_win32-inl.h \
#                    src/base/spinlock_linux-inl.h \
#                    src/base/spinlock_posix-inl.h \
#                    src/base/atomicops-internals-macosx.h \
#                    src/base/atomicops-internals-linuxppc.h \
#                    src/base/atomicops-internals-arm-generic.h \
#                    src/base/atomicops-internals-arm-v6plus.h \
#                    src/base/atomicops-internals-mips.h \
#                    src/base/atomicops-internals-windows.h \
#                    src/base/atomicops-internals-gcc.h \
#                    src/base/atomicops-internals-x86.h

libspinlock_la_SOURCES = src/base/spinlock.cc \
                         src/base/spinlock_internal.cc \
                         src/base/atomicops-internals-x86.cc \
                         $(SPINLOCK_INCLUDES)

#libspinlock_la_SOURCES = src/base/spinlock.cc \
#                         src/base/spinlock_internal.cc \
#                         src/base/atomicops-internals-x86.cc \
#                         $(SPINLOCK_INCLUDES)

# spinlock also needs NumCPUs, from libsysinfo, which in turn needs liblogging
LIBSPINLOCK = libspinlock.la libsysinfo.la liblogging.la
#LIBSPINLOCK = libwindows.la libspinlock.la libsysinfo.la liblogging.la
TCMALLOC_CC = src/tcmalloc.cc

# There's a windows-specific unittest we can run.  Right now it's
# win64-specific, and relies on masm, so we comment it out.

# patch_functions.cc #includes tcmalloc.cc, so no need to link it in.
#TCMALLOC_CC = 
SYSTEM_ALLOC_CC = src/system-alloc.cc
#SYSTEM_ALLOC_CC = 
libspinlock_la_LIBADD = $(NANOSLEEP_LIBS)
LOW_LEVEL_ALLOC_UNITTEST_INCLUDES = src/base/low_level_alloc.h \
                                    src/base/basictypes.h \
                                    src/gperftools/malloc_hook.h \
                                    src/gperftools/malloc_hook_c.h \
                                    src/malloc_hook-inl.h \
                                    src/malloc_hook_mmap_linux.h \
                                    src/malloc_hook_mmap_freebsd.h \
                                    $(SPINLOCK_INCLUDES) \
                                    $(LOGGING_INCLUDES)

low_level_alloc_unittest_SOURCES = src/base/low_level_alloc.cc \
                                   src/malloc_hook.cc \
                                   src/tests/low_level_alloc_unittest.cc \
                                   $(LOW_LEVEL_ALLOC_UNITTEST_INCLUDES)

# By default, MallocHook takes stack traces for use by the heap-checker.
# We don't need that functionality here, so we turn it off to reduce deps.
low_level_alloc_unittest_CXXFLAGS = -DNO_TCMALLOC_SAMPLES
low_level_alloc_unittest_LDADD = $(LIBSPINLOCK) libmaybe_threads.la
ATOMICOPS_UNITTEST_INCLUDES = src/base/atomicops.h \
                              src/base/atomicops-internals-macosx.h \
                              src/base/atomicops-internals-windows.h \
                              src/base/atomicops-internals-x86.h \
                              $(LOGGING_INCLUDES)

atomicops_unittest_SOURCES = src/tests/atomicops_unittest.cc \
                             $(ATOMICOPS_UNITTEST_INCLUDES)

atomicops_unittest_LDADD = $(LIBSPINLOCK)

### ------- stack trace

### The header files we use.  We divide into categories based on directory
S_STACKTRACE_INCLUDES = src/stacktrace_impl_setup-inl.h \
                        src/stacktrace_generic-inl.h \
                        src/stacktrace_libgcc-inl.h \
			src/stacktrace_libunwind-inl.h \
			src/stacktrace_arm-inl.h \
			src/stacktrace_powerpc-inl.h \
			src/stacktrace_powerpc-darwin-inl.h \
			src/stacktrace_powerpc-linux-inl.h \
			src/stacktrace_x86-inl.h \
			src/stacktrace_win32-inl.h \
			src/stacktrace_instrument-inl.h \
                        src/base/elf_mem_image.h \
                        src/base/vdso_support.h

SG_STACKTRACE_INCLUDES = src/gperftools/stacktrace.h
STACKTRACE_INCLUDES = $(S_STACKTRACE_INCLUDES) $(SG_STACKTRACE_INCLUDES)
libstacktrace_la_SOURCES = src/stacktrace.cc \
                           src/base/elf_mem_image.cc \
                           src/base/vdso_support.cc \
                           $(STACKTRACE_INCLUDES)

libstacktrace_la_LIBADD = $(UNWIND_LIBS) $(LIBSPINLOCK)
STACKTRACE_SYMBOLS = '(GetStackTrace|GetStackFrames|GetStackTraceWithContext|GetStackFramesWithContext)'
libstacktrace_la_LDFLAGS = -export-symbols-regex $(STACKTRACE_SYMBOLS) $(AM_LDFLAGS)
libfake_stacktrace_scope_la_SOURCES = src/fake_stacktrace_scope.cc
STACKTRACE_UNITTEST_INCLUDES = src/config_for_unittests.h \
                               src/base/commandlineflags.h \
                               $(STACKTRACE_INCLUDES) \
                               $(LOGGING_INCLUDES)

stacktrace_unittest_SOURCES = src/tests/stacktrace_unittest.cc \
                              $(STACKTRACE_UNITTEST_INCLUDES)

stacktrace_unittest_LDADD = libstacktrace.la liblogging.la libfake_stacktrace_scope.la

### ------- pprof

# If we are not compiling with stacktrace support, pprof is worthless
bin_SCRIPTS = pprof-symbolize $(am__append_21)

### Unittests
check_SCRIPTS = pprof_unittest
dist_man_MANS = docs/pprof.1

### ------- tcmalloc_minimal (thread-caching malloc)

### The header files we use.  We divide into categories based on directory
S_TCMALLOC_MINIMAL_INCLUDES = src/common.h \
                              src/internal_logging.h \
                              src/system-alloc.h \
                              src/packed-cache-inl.h \
                              $(SPINLOCK_INCLUDES) \
                              src/tcmalloc_guard.h \
                              src/base/commandlineflags.h \
                              src/base/basictypes.h \
                              src/pagemap.h \
                              src/sampler.h \
                              src/central_freelist.h \
                              src/linked_list.h \
                              src/libc_override.h \
                              src/libc_override_gcc_and_weak.h \
                              src/libc_override_glibc.h \
                              src/libc_override_osx.h \
                              src/libc_override_redefine.h \
                              src/page_heap.h \
                              src/page_heap_allocator.h \
                              src/span.h \
                              src/static_vars.h \
                              src/symbolize.h \
                              src/thread_cache.h \
                              src/stack_trace_table.h \
                              src/base/thread_annotations.h \
                              src/malloc_hook-inl.h \
                              src/malloc_hook_mmap_linux.h \
                              src/malloc_hook_mmap_freebsd.h

SG_TCMALLOC_MINIMAL_INCLUDES = src/gperftools/malloc_hook.h \
                               src/gperftools/malloc_hook_c.h \
                               src/gperftools/malloc_extension.h \
                               src/gperftools/malloc_extension_c.h \
                               src/gperftools/nallocx.h

TCMALLOC_MINIMAL_INCLUDES = $(S_TCMALLOC_MINIMAL_INCLUDES) $(SG_TCMALLOC_MINIMAL_INCLUDES) $(SG_STACKTRACE_INCLUDES)
libtcmalloc_minimal_internal_la_SOURCES = src/common.cc \
                                          src/internal_logging.cc \
                                          $(SYSTEM_ALLOC_CC) \
                                          src/memfs_malloc.cc \
                                          src/central_freelist.cc \
                                          src/page_heap.cc \
                                          src/sampler.cc \
                                          src/span.cc \
                                          src/stack_trace_table.cc \
                                          src/static_vars.cc \
                                          src/symbolize.cc \
                                          src/thread_cache.cc \
                                          src/malloc_hook.cc \
                                          src/malloc_extension.cc \
                                          $(TCMALLOC_MINIMAL_INCLUDES)

# We #define NO_TCMALLOC_SAMPLES, since sampling is turned off for _minimal.
libtcmalloc_minimal_internal_la_CXXFLAGS = -DNO_TCMALLOC_SAMPLES \
                                           -DNO_HEAP_CHECK \
                                           -DNDEBUG \
                                           $(AM_CXXFLAGS)

libtcmalloc_minimal_internal_la_LDFLAGS = $(AM_LDFLAGS)
libtcmalloc_minimal_internal_la_LIBADD = $(LIBSPINLOCK) libmaybe_threads.la
libtcmalloc_minimal_la_SOURCES = $(TCMALLOC_CC) $(TCMALLOC_MINIMAL_INCLUDES)
libtcmalloc_minimal_la_CXXFLAGS = -DNO_TCMALLOC_SAMPLES \
                                  $(PTHREAD_CFLAGS) -DNDEBUG $(AM_CXXFLAGS)

# -version-info gets passed to libtool
libtcmalloc_minimal_la_LDFLAGS = -version-info 9:4:5 $(AM_LDFLAGS)
libtcmalloc_minimal_la_LIBADD = libtcmalloc_minimal_internal.la
LIBTCMALLOC_MINIMAL = libtcmalloc_minimal.la

# For windows, we're playing around with trying to do some stacktrace
# support even with libtcmalloc_minimal.  For everyone else, though,
# we turn off all stack-trace activity for libtcmalloc_minimal.
# TODO(csilvers): when we're done experimenting, do something principled here
#LIBTCMALLOC_MINIMAL = libtcmalloc_minimal.la libstacktrace.la
tcmalloc_minimal_unittest_SOURCES = src/tests/tcmalloc_unittest.cc \
                                    src/tests/testutil.h src/tests/testutil.cc \
                                    $(TCMALLOC_UNITTEST_INCLUDES)

tcmalloc_minimal_unittest_CXXFLAGS = $(PTHREAD_CFLAGS) $(AM_CXXFLAGS) $(NO_BUILTIN_CXXFLAGS)
tcmalloc_minimal_unittest_LDFLAGS = $(PTHREAD_CFLAGS) $(TCMALLOC_FLAGS)
# We want libtcmalloc last on the link line, but due to a bug in
# libtool involving convenience libs, they need to come last on the
# link line in order to get dependency ordering right.  This is ok:
# convenience libraries are .a's, so tcmalloc is still the last .so.
# We also put pthreads after tcmalloc, because some pthread
# implementations define their own malloc, and we need to go on the
# first linkline to make sure our malloc 'wins'.
tcmalloc_minimal_unittest_LDADD = $(LIBTCMALLOC_MINIMAL) \
                                  liblogging.la $(PTHREAD_LIBS)

tcm_min_asserts_unittest_SOURCES = src/tests/tcmalloc_unittest.cc \
                                    src/tests/testutil.h src/tests/testutil.cc \
                                    $(libtcmalloc_minimal_internal_la_SOURCES) \
                                    $(libtcmalloc_minimal_la_SOURCES) \
                                    $(TCMALLOC_UNITTEST_INCLUDES)

tcm_min_asserts_unittest_CXXFLAGS = -DNO_TCMALLOC_SAMPLES -DNO_HEAP_CHECK \
                                    $(PTHREAD_CFLAGS) $(AM_CXXFLAGS) $(NO_BUILTIN_CXXFLAGS)

tcm_min_asserts_unittest_LDFLAGS = $(PTHREAD_CFLAGS) $(TCMALLOC_FLAGS)
tcm_min_asserts_unittest_LDADD = $(LIBSPINLOCK) libmaybe_threads.la \
                                  liblogging.la $(PTHREAD_LIBS)

tcmalloc_minimal_large_unittest_SOURCES = src/tests/tcmalloc_large_unittest.cc
tcmalloc_minimal_large_unittest_CXXFLAGS = $(PTHREAD_CFLAGS) $(AM_CXXFLAGS) $(NO_BUILTIN_CXXFLAGS)
tcmalloc_minimal_large_unittest_LDFLAGS = $(PTHREAD_CFLAGS) $(TCMALLOC_FLAGS)
tcmalloc_minimal_large_unittest_LDADD = $(LIBTCMALLOC_MINIMAL) $(PTHREAD_LIBS)
tcmalloc_minimal_large_heap_fragmentation_unittest_SOURCES = src/tests/large_heap_fragmentation_unittest.cc
tcmalloc_minimal_large_heap_fragmentation_unittest_CXXFLAGS = $(PTHREAD_CFLAGS) $(AM_CXXFLAGS) $(NO_BUILTIN_CXXFLAGS)
tcmalloc_minimal_large_heap_fragmentation_unittest_LDFLAGS = $(PTHREAD_CFLAGS) $(TCMALLOC_FLAGS)
tcmalloc_minimal_large_heap_fragmentation_unittest_LDADD = $(LIBTCMALLOC_MINIMAL) $(PTHREAD_LIBS)
#maybe_threads_unittest_sh_SOURCES = src/tests/maybe_threads_unittest.sh
ADDRESSMAP_UNITTEST_INCLUDES = src/addressmap-inl.h \
                               src/base/commandlineflags.h \
                               $(LOGGING_INCLUDES)

addressmap_unittest_SOURCES = src/tests/addressmap_unittest.cc \
	$(ADDRESSMAP_UNITTEST_INCLUDES) $(am__append_26)
addressmap_unittest_CXXFLAGS = -g $(AM_CXXFLAGS)
addressmap_unittest_LDADD = liblogging.la
system_alloc_unittest_SOURCES = src/config_for_unittests.h \
                                src/tests/system-alloc_unittest.cc

system_alloc_unittest_CXXFLAGS = $(PTHREAD_CFLAGS) $(AM_CXXFLAGS) $(NO_BUILTIN_CXXFLAGS)
system_alloc_unittest_LDFLAGS = $(PTHREAD_CFLAGS) $(TCMALLOC_FLAGS)
system_alloc_unittest_LDADD = $(LIBTCMALLOC_MINIMAL) $(PTHREAD_LIBS)
packed_cache_test_SOURCES = src/tests/packed-cache_test.cc
packed_cache_test_CXXFLAGS = $(PTHREAD_CFLAGS) $(AM_CXXFLAGS)
packed_cache_test_LDFLAGS = $(PTHREAD_CFLAGS) $(TCMALLOC_FLAGS)
packed_cache_test_LDADD = $(LIBTCMALLOC_MINIMAL) $(PTHREAD_LIBS)
frag_unittest_SOURCES = src/tests/frag_unittest.cc src/config_for_unittests.h
frag_unittest_CXXFLAGS = $(PTHREAD_CFLAGS) $(AM_CXXFLAGS) $(NO_BUILTIN_CXXFLAGS)
frag_unittest_LDFLAGS = $(PTHREAD_CFLAGS) $(TCMALLOC_FLAGS)
frag_unittest_LDADD = $(LIBTCMALLOC_MINIMAL) $(PTHREAD_LIBS)
markidle_unittest_SOURCES = src/tests/markidle_unittest.cc \
                            src/config_for_unittests.h \
                            src/tests/testutil.h src/tests/testutil.cc

markidle_unittest_CXXFLAGS = $(PTHREAD_CFLAGS) $(AM_CXXFLAGS) $(NO_BUILTIN_CXXFLAGS)
markidle_unittest_LDFLAGS = $(PTHREAD_CFLAGS) $(TCMALLOC_FLAGS)
markidle_unittest_LDADD = $(LIBTCMALLOC_MINIMAL) $(PTHREAD_LIBS)
current_allocated_bytes_test_SOURCES = src/tests/current_allocated_bytes_test.cc \
                                       src/config_for_unittests.h

current_allocated_bytes_test_CXXFLAGS = $(PTHREAD_CFLAGS) $(AM_CXXFLAGS)
current_allocated_bytes_test_LDFLAGS = $(PTHREAD_CFLAGS) $(TCMALLOC_FLAGS)
current_allocated_bytes_test_LDADD = $(LIBTCMALLOC_MINIMAL) $(PTHREAD_LIBS)
malloc_hook_test_SOURCES = src/tests/malloc_hook_test.cc \
                           src/config_for_unittests.h \
                           src/base/logging.h \
                           src/gperftools/malloc_hook.h \
                           src/tests/testutil.h src/tests/testutil.cc

malloc_hook_test_CXXFLAGS = $(PTHREAD_CFLAGS) $(AM_CXXFLAGS)
malloc_hook_test_LDFLAGS = $(PTHREAD_CFLAGS) $(TCMALLOC_FLAGS)
malloc_hook_test_LDADD = $(LIBTCMALLOC_MINIMAL) $(PTHREAD_LIBS)
malloc_extension_test_SOURCES = src/tests/malloc_extension_test.cc \
                                src/config_for_unittests.h \
                                src/base/logging.h \
                                src/gperftools/malloc_extension.h \
                                src/gperftools/malloc_extension_c.h

malloc_extension_test_CXXFLAGS = $(PTHREAD_CFLAGS) $(AM_CXXFLAGS)
malloc_extension_test_LDFLAGS = $(PTHREAD_CFLAGS) $(TCMALLOC_FLAGS)
malloc_extension_test_LDADD = $(LIBTCMALLOC_MINIMAL) $(PTHREAD_LIBS)
malloc_extension_c_test_SOURCES = src/tests/malloc_extension_c_test.c \
                                  src/gperftools/malloc_extension.h \
                                  src/gperftools/malloc_extension_c.h

malloc_extension_c_test_CFLAGS = $(PTHREAD_CFLAGS) \
	$(AM_CFLAGS) $(am__append_29)
malloc_extension_c_test_LDFLAGS = $(PTHREAD_CFLAGS) $(TCMALLOC_FLAGS)
malloc_extension_c_test_LDADD = $(LIBTCMALLOC_MINIMAL) $(PTHREAD_LIBS) -lstdc++ -lm
#memalign_unittest_SOURCES = src/tests/memalign_unittest.cc \
#                            src/tcmalloc.h \
#                            src/config_for_unittests.h \
#                            src/tests/testutil.h src/tests/testutil.cc

#memalign_unittest_CXXFLAGS = $(PTHREAD_CFLAGS) $(AM_CXXFLAGS) $(NO_BUILTIN_CXXFLAGS)
#memalign_unittest_LDFLAGS = $(PTHREAD_CFLAGS) $(TCMALLOC_FLAGS)
#memalign_unittest_LDADD = $(LIBTCMALLOC_MINIMAL) $(PTHREAD_LIBS)
page_heap_test_SOURCES = src/tests/page_heap_test.cc \
                         src/config_for_unittests.h \
                         src/base/logging.h \
                         src/common.h \
                         src/page_heap.h

page_heap_test_CXXFLAGS = $(PTHREAD_CFLAGS) $(AM_CXXFLAGS)
page_heap_test_LDFLAGS = $(PTHREAD_CFLAGS) $(TCMALLOC_FLAGS)
page_heap_test_LDADD = $(LIBTCMALLOC_MINIMAL) $(PTHREAD_LIBS)
pagemap_unittest_SOURCES = src/tests/pagemap_unittest.cc \
                           src/config_for_unittests.h \
                           src/base/logging.h \
                           src/pagemap.h

pagemap_unittest_CXXFLAGS = $(PTHREAD_CFLAGS) $(AM_CXXFLAGS) $(NO_BUILTIN_CXXFLAGS)
pagemap_unittest_LDFLAGS = $(PTHREAD_CFLAGS) $(TCMALLOC_FLAGS)
pagemap_unittest_LDADD = $(LIBTCMALLOC_MINIMAL) $(PTHREAD_LIBS)
realloc_unittest_SOURCES = src/tests/realloc_unittest.cc \
                           src/config_for_unittests.h \
                           src/base/logging.h

realloc_unittest_CXXFLAGS = $(PTHREAD_CFLAGS) $(AM_CXXFLAGS) $(NO_BUILTIN_CXXFLAGS)
realloc_unittest_LDFLAGS = $(PTHREAD_CFLAGS) $(TCMALLOC_FLAGS)
realloc_unittest_LDADD = $(LIBTCMALLOC_MINIMAL) $(PTHREAD_LIBS)
stack_trace_table_test_SOURCES = src/tests/stack_trace_table_test.cc \
                                 src/config_for_unittests.h

stack_trace_table_test_CXXFLAGS = $(PTHREAD_CFLAGS) $(AM_CXXFLAGS)
stack_trace_table_test_LDFLAGS = $(PTHREAD_CFLAGS) $(TCMALLOC_FLAGS)
stack_trace_table_test_LDADD = $(LIBTCMALLOC_MINIMAL) $(PTHREAD_LIBS)
thread_dealloc_unittest_SOURCES = src/tests/thread_dealloc_unittest.cc \
                                  src/config_for_unittests.h \
                                  src/tests/testutil.h src/tests/testutil.cc

thread_dealloc_unittest_CXXFLAGS = $(PTHREAD_CFLAGS) $(AM_CXXFLAGS) $(NO_BUILTIN_CXXFLAGS)
thread_dealloc_unittest_LDFLAGS = $(PTHREAD_CFLAGS) $(TCMALLOC_FLAGS)
thread_dealloc_unittest_LDADD = $(LIBTCMALLOC_MINIMAL) $(PTHREAD_LIBS)
libtcmalloc_minimal_debug_la_SOURCES = src/debugallocation.cc \
                                       $(TCMALLOC_MINIMAL_INCLUDES)

libtcmalloc_minimal_debug_la_CXXFLAGS = $(libtcmalloc_minimal_la_CXXFLAGS) \
                                        -DTCMALLOC_FOR_DEBUGALLOCATION

# version_info gets passed to libtool
libtcmalloc_minimal_debug_la_LDFLAGS = $(libtcmalloc_minimal_la_LDFLAGS) \
                                       -version-info 9:4:5

libtcmalloc_minimal_debug_la_LIBADD = $(libtcmalloc_minimal_la_LIBADD)
tcmalloc_minimal_debug_unittest_SOURCES = $(tcmalloc_minimal_unittest_SOURCES)
tcmalloc_minimal_debug_unittest_CXXFLAGS = $(tcmalloc_minimal_unittest_CXXFLAGS) \
                                           -DDEBUGALLOCATION

tcmalloc_minimal_debug_unittest_LDFLAGS = $(tcmalloc_minimal_unittest_LDFLAGS)
tcmalloc_minimal_debug_unittest_LDADD = libtcmalloc_minimal_debug.la $(PTHREAD_LIBS)
malloc_extension_debug_test_SOURCES = $(malloc_extension_test_SOURCES)
malloc_extension_debug_test_CXXFLAGS = $(malloc_extension_test_CXXFLAGS)
malloc_extension_debug_test_LDFLAGS = $(malloc_extension_test_LDFLAGS)
malloc_extension_debug_test_LDADD = libtcmalloc_minimal_debug.la $(PTHREAD_LIBS)
#memalign_debug_unittest_SOURCES = $(memalign_unittest_SOURCES)
#memalign_debug_unittest_CXXFLAGS = $(memalign_unittest_CXXFLAGS)
#memalign_debug_unittest_LDFLAGS = $(memalign_unittest_LDFLAGS)
#memalign_debug_unittest_LDADD = libtcmalloc_minimal_debug.la $(PTHREAD_LIBS)
realloc_debug_unittest_SOURCES = $(realloc_unittest_SOURCES)
realloc_debug_unittest_CXXFLAGS = $(realloc_unittest_CXXFLAGS)
realloc_debug_unittest_LDFLAGS = $(realloc_unittest_LDFLAGS)
realloc_debug_unittest_LDADD = libtcmalloc_minimal_debug.la $(PTHREAD_LIBS)
debugallocation_test_sh_SOURCES = src/tests/debugallocation_test.sh
debugallocation_test_SOURCES = src/tests/debugallocation_test.cc
debugallocation_test_CXXFLAGS = $(PTHREAD_CFLAGS) $(AM_CXXFLAGS) $(NO_BUILTIN_CXXFLAGS)
debugallocation_test_LDFLAGS = $(PTHREAD_CFLAGS) $(TCMALLOC_FLAGS)
debugallocation_test_LDADD = libtcmalloc_debug.la $(PTHREAD_LIBS)
librun_benchmark_la_SOURCES = \
	benchmark/run_benchmark.c benchmark/run_benchmark.h

malloc_bench_SOURCES = benchmark/malloc_bench.cc
malloc_bench_CXXFLAGS = $(PTHREAD_CFLAGS) $(AM_CXXFLAGS) $(NO_BUILTIN_CXXFLAGS)
malloc_bench_LDFLAGS = $(PTHREAD_CFLAGS) \
	$(TCMALLOC_FLAGS) $(am__append_41)
malloc_bench_LDADD = librun_benchmark.la libtcmalloc_minimal.la $(PTHREAD_LIBS)
malloc_bench_shared_SOURCES = benchmark/malloc_bench.cc
malloc_bench_shared_CXXFLAGS = $(PTHREAD_CFLAGS) $(AM_CXXFLAGS) $(NO_BUILTIN_CXXFLAGS)
malloc_bench_shared_LDFLAGS = $(PTHREAD_CFLAGS) $(TCMALLOC_FLAGS)
malloc_bench_shared_LDADD = librun_benchmark.la libtcmalloc_minimal.la $(PTHREAD_LIBS)
malloc_bench_shared_full_SOURCES = benchmark/malloc_bench.cc
malloc_bench_shared_full_CXXFLAGS = $(PTHREAD_CFLAGS) $(AM_CXXFLAGS) $(NO_BUILTIN_CXXFLAGS)
malloc_bench_shared_full_LDFLAGS = $(PTHREAD_CFLAGS) $(TCMALLOC_FLAGS)
malloc_bench_shared_full_LDADD = librun_benchmark.la libtcmalloc.la $(PTHREAD_LIBS)
binary_trees_SOURCES = benchmark/binary_trees.cc
binary_trees_CXXFLAGS = $(PTHREAD_CFLAGS) $(AM_CXXFLAGS) $(NO_BUILTIN_CXXFLAGS)
binary_trees_LDFLAGS = $(PTHREAD_CFLAGS) \
	$(TCMALLOC_FLAGS) $(am__append_43)
binary_trees_LDADD = libtcmalloc_minimal.la $(PTHREAD_LIBS)
binary_trees_shared_SOURCES = benchmark/binary_trees.cc
binary_trees_shared_CXXFLAGS = $(PTHREAD_CFLAGS) $(AM_CXXFLAGS) $(NO_BUILTIN_CXXFLAGS)
binary_trees_shared_LDFLAGS = $(PTHREAD_CFLAGS) $(TCMALLOC_FLAGS)
binary_trees_shared_LDADD = libtcmalloc_minimal.la $(PTHREAD_LIBS)

### ------- tcmalloc (thread-caching malloc + heap profiler + heap checker)

### The header files we use.  We divide into categories based on directory
S_TCMALLOC_INCLUDES = $(S_TCMALLOC_MINIMAL_INCLUDES) \
                      $(LOGGING_INCLUDES) \
                      src/addressmap-inl.h \
                      src/raw_printer.h \
                      src/base/elfcore.h \
                      src/base/googleinit.h \
                      src/base/linux_syscall_support.h \
                      src/base/linuxthreads.h \
                      src/base/stl_allocator.h \
                      src/base/sysinfo.h \
                      src/base/thread_lister.h \
                      src/heap-profile-table.h \
                      src/heap-profile-stats.h \
                      src/maybe_emergency_malloc.h \
                      src/emergency_malloc.h

SG_TCMALLOC_INCLUDES = src/gperftools/heap-profiler.h \
                       src/gperftools/heap-checker.h

TCMALLOC_INCLUDES = $(S_TCMALLOC_INCLUDES) $(SG_TCMALLOC_MINIMAL_INCLUDES) \
		    $(SG_TCMALLOC_INCLUDES) $(SG_STACKTRACE_INCLUDES)

EMERGENCY_MALLOC_CC = src/fake_stacktrace_scope.cc
#EMERGENCY_MALLOC_CC = src/emergency_malloc.cc src/emergency_malloc_for_stacktrace.cc
EMERGENCY_MALLOC_DEFINE = 
#EMERGENCY_MALLOC_DEFINE = -DENABLE_EMERGENCY_MALLOC
libtcmalloc_internal_la_SOURCES = $(libtcmalloc_minimal_internal_la_SOURCES) \
                                  $(TCMALLOC_INCLUDES) \
                                  src/base/low_level_alloc.cc \
                                  src/heap-profile-table.cc \
                                  src/heap-profiler.cc \
                                  src/raw_printer.cc \
                                  $(EMERGENCY_MALLOC_CC) \
                                  src/memory_region_map.cc

libtcmalloc_internal_la_CXXFLAGS =  \
	$(PTHREAD_CFLAGS) -DNDEBUG \
	$(AM_CXXFLAGS) \
	$(EMERGENCY_MALLOC_DEFINE) \
	$(am__append_48)
libtcmalloc_internal_la_LDFLAGS = $(PTHREAD_CFLAGS)
libtcmalloc_internal_la_LIBADD = libstacktrace.la $(PTHREAD_LIBS)
libtcmalloc_la_SOURCES =  \
	$(TCMALLOC_CC) \
	$(TCMALLOC_INCLUDES) \
	$(am__append_47)
libtcmalloc_la_CXXFLAGS =  \
	$(PTHREAD_CFLAGS) -DNDEBUG \
	$(AM_CXXFLAGS) \
	$(EMERGENCY_MALLOC_DEFINE) \
	$(am__append_49)
libtcmalloc_la_LDFLAGS = $(PTHREAD_CFLAGS) -version-info 9:4:5
libtcmalloc_la_LIBADD = libtcmalloc_internal.la libmaybe_threads.la $(PTHREAD_LIBS)
HEAP_CHECKER_SOURCES = 

# heap-checker-bcad is last, in hopes its global ctor will run first.
# (Note this is added to libtcmalloc.la, not libtcmalloc_internal.la,
# but that's ok; the internal/external distinction is only useful for
# cygwin, and cygwin doesn't use HEAP_CHECKER anyway.)
#HEAP_CHECKER_SOURCES = src/base/thread_lister.c \
#                       src/base/linuxthreads.cc \
#                       src/heap-checker.cc \
#                       src/heap-checker-bcad.cc

LIBTCMALLOC = libtcmalloc.la
tcmalloc_unittest_sh_SOURCES = src/tests/tcmalloc_unittest.sh
tcmalloc_unittest_INCLUDES = src/config_for_unittests.h \
                             src/gperftools/malloc_extension.h

tcmalloc_unittest_SOURCES = src/tests/tcmalloc_unittest.cc \
                            src/tcmalloc.h \
                            src/tests/testutil.h src/tests/testutil.cc \
                            $(TCMALLOC_UNITTEST_INCLUDES)

tcmalloc_unittest_CXXFLAGS = $(PTHREAD_CFLAGS) $(AM_CXXFLAGS) $(NO_BUILTIN_CXXFLAGS)
tcmalloc_unittest_LDFLAGS = $(PTHREAD_CFLAGS) $(TCMALLOC_FLAGS)
# We want libtcmalloc last on the link line, but due to a bug in
# libtool involving convenience libs, they need to come last on the
# link line in order to get dependency ordering right.  This is ok:
# convenience libraries are .a's, so tcmalloc is still the last .so.
# We also put pthreads after tcmalloc, because some pthread
# implementations define their own malloc, and we need to go on the
# first linkline to make sure our malloc 'wins'.
tcmalloc_unittest_LDADD = $(LIBTCMALLOC) liblogging.la $(PTHREAD_LIBS)

# # lets make sure we exerice ASSERTs in at least in statically linked
# # configuration
# TESTS += tcm_asserts_unittest
# tcm_asserts_unittest_SOURCES = src/tests/tcmalloc_unittest.cc \
#                                 src/tests/testutil.h src/tests/testutil.cc \
#                                 $(libtcmalloc_internal_la_SOURCES) \
#                                 $(libtcmalloc_la_SOURCES) \
#                                 $(TCMALLOC_UNITTEST_INCLUDES)
# tcm_asserts_unittest_CXXFLAGS = $(PTHREAD_CFLAGS) $(AM_CXXFLAGS) $(NO_BUILTIN_CXXFLAGS)
# tcm_asserts_unittest_LDFLAGS = $(PTHREAD_CFLAGS) $(TCMALLOC_FLAGS)
# tcm_asserts_unittest_LDADD = $(LIBSPINLOCK) libmaybe_threads.la libstacktrace.la \
#                              liblogging.la $(PTHREAD_LIBS)

# This makes sure it's safe to link in both tcmalloc and
# tcmalloc_minimal.  (One would never do this on purpose, but perhaps
# by accident...)  When we can compile libprofiler, we also link it in
# to make sure that works too.  NOTE: On OS X, it's *not* safe to
# link both in (we end up with two copies of every global var, and
# the code tends to pick one arbitrarily), so don't run the test there.
# (We define these outside the 'if' because they're reused below.)
tcmalloc_both_unittest_srcs = src/tests/tcmalloc_unittest.cc \
                              src/tests/testutil.h src/tests/testutil.cc \
                              $(TCMALLOC_UNITTEST_INCLUDES)

tcmalloc_both_unittest_cflags = $(PTHREAD_CFLAGS) $(AM_CXXFLAGS) $(NO_BUILTIN_CXXFLAGS)
tcmalloc_both_unittest_lflags = $(PTHREAD_CFLAGS) $(TCMALLOC_FLAGS)
#tcmalloc_both_unittest_ladd = $(LIBTCMALLOC) $(LIBTCMALLOC_MINIMAL) \
#                              liblogging.la $(PTHREAD_LIBS)

# We want libtcmalloc last on the link line, but due to a bug in
# libtool involving convenience libs, they need to come last on the
# link line in order to get dependency ordering right.  This is ok:
# convenience libraries are .a's, so tcmalloc is still the last .so.
# We also put pthreads after tcmalloc, because some pthread
# implementations define their own malloc, and we need to go on the
# first linkline to make sure our malloc 'wins'.
tcmalloc_both_unittest_ladd = $(LIBTCMALLOC) $(LIBTCMALLOC_MINIMAL) \
                              libprofiler.la liblogging.la $(PTHREAD_LIBS)

#tcmalloc_both_unittest_SOURCES = $(tcmalloc_both_unittest_srcs)
#tcmalloc_both_unittest_CXXFLAGS = $(tcmalloc_both_unittest_cflags)
#tcmalloc_both_unittest_LDFLAGS = $(tcmalloc_both_unittest_lflags)
#tcmalloc_both_unittest_LDADD = $(tcmalloc_both_unittest_ladd)
tcmalloc_large_unittest_SOURCES = src/tests/tcmalloc_large_unittest.cc
tcmalloc_large_unittest_CXXFLAGS = $(PTHREAD_CFLAGS) $(AM_CXXFLAGS) $(NO_BUILTIN_CXXFLAGS)
tcmalloc_large_unittest_LDFLAGS = $(PTHREAD_CFLAGS) $(TCMALLOC_FLAGS)
tcmalloc_large_unittest_LDADD = $(LIBTCMALLOC) $(PTHREAD_LIBS)
tcmalloc_large_heap_fragmentation_unittest_SOURCES = src/tests/large_heap_fragmentation_unittest.cc
tcmalloc_large_heap_fragmentation_unittest_CXXFLAGS = $(PTHREAD_CFLAGS) $(AM_CXXFLAGS) $(NO_BUILTIN_CXXFLAGS)
tcmalloc_large_heap_fragmentation_unittest_LDFLAGS = $(PTHREAD_CFLAGS) $(TCMALLOC_FLAGS)
tcmalloc_large_heap_fragmentation_unittest_LDADD = $(LIBTCMALLOC) $(PTHREAD_LIBS)
raw_printer_test_SOURCES = src/tests/raw_printer_test.cc
raw_printer_test_CXXFLAGS = $(PTHREAD_CFLAGS) $(AM_CXXFLAGS)
raw_printer_test_LDFLAGS = $(PTHREAD_CFLAGS) $(TCMALLOC_FLAGS)
raw_printer_test_LDADD = $(LIBTCMALLOC) $(PTHREAD_LIBS)
sampler_test_SOURCES = src/tests/sampler_test.cc \
                       src/config_for_unittests.h

sampler_test_CXXFLAGS = $(PTHREAD_CFLAGS) $(AM_CXXFLAGS)
sampler_test_LDFLAGS = $(PTHREAD_CFLAGS) $(TCMALLOC_FLAGS)
sampler_test_LDADD = $(LIBTCMALLOC) $(PTHREAD_LIBS) -lm
sampling_test_sh_SOURCES = src/tests/sampling_test.sh
SAMPLING_TEST_INCLUDES = src/config_for_unittests.h \
                         src/base/logging.h \
                         src/gperftools/malloc_extension.h

sampling_test_SOURCES = src/tests/sampling_test.cc \
                        $(SAMPLING_TEST_INCLUDES)

sampling_test_CXXFLAGS = -g $(PTHREAD_CFLAGS) $(AM_CXXFLAGS)
sampling_test_LDFLAGS = -g $(PTHREAD_CFLAGS) $(TCMALLOC_FLAGS)
sampling_test_LDADD = $(LIBTCMALLOC) $(PTHREAD_LIBS)
heap_profiler_unittest_sh_SOURCES = src/tests/heap-profiler_unittest.sh
HEAP_PROFILER_UNITTEST_INCLUDES = src/config_for_unittests.h \
                                  src/gperftools/heap-profiler.h

heap_profiler_unittest_SOURCES = src/tests/heap-profiler_unittest.cc \
                                 $(HEAP_PROFILER_UNITTEST_INCLUDES)

heap_profiler_unittest_CXXFLAGS = -g $(PTHREAD_CFLAGS) $(AM_CXXFLAGS) $(NO_BUILTIN_CXXFLAGS)
heap_profiler_unittest_LDFLAGS = -g $(PTHREAD_CFLAGS) $(TCMALLOC_FLAGS)
heap_profiler_unittest_LDADD = $(LIBTCMALLOC) $(PTHREAD_LIBS)
simple_compat_test_SOURCES = src/tests/simple_compat_test.cc \
                             $(googleinclude_HEADERS)

simple_compat_test_LDFLAGS = $(TCMALLOC_FLAGS)
simple_compat_test_LDADD = $(LIBTCMALLOC)
#heap_checker_unittest_sh_SOURCES = src/tests/heap-checker_unittest.sh
#heap_checker_death_unittest_sh_SOURCES = src/tests/heap-checker-death_unittest.sh
#HEAP_CHECKER_UNITTEST_INCLUDES = src/config_for_unittests.h \
#                                 src/memory_region_map.h \
#                                 src/base/commandlineflags.h \
#                                 src/base/googleinit.h \
#                                 src/gperftools/heap-checker.h \
#                                 $(LOGGING_INCLUDES)

#heap_checker_unittest_SOURCES = src/tests/heap-checker_unittest.cc \
#                                $(HEAP_CHECKER_UNITTEST_INCLUDES)

#heap_checker_unittest_CXXFLAGS = -g $(PTHREAD_CFLAGS) $(AM_CXXFLAGS) $(NO_BUILTIN_CXXFLAGS)
#heap_checker_unittest_LDFLAGS = -g $(PTHREAD_CFLAGS) $(TCMALLOC_FLAGS)
# We want libtcmalloc last on the link line, but due to a bug in
# libtool involving convenience libs, they need to come last on the
# link line in order to get dependency ordering right.  This is ok:
# convenience libraries are .a's, so tcmalloc is still the last .so.
# We also put pthreads after tcmalloc, because some pthread
# implementations define their own malloc, and we need to go on the
# first linkline to make sure our malloc 'wins'.
#heap_checker_unittest_LDADD = $(LIBTCMALLOC) liblogging.la $(PTHREAD_LIBS)
libtcmalloc_debug_la_SOURCES = src/debugallocation.cc $(HEAP_CHECKER_SOURCES) \
                               $(TCMALLOC_INCLUDES)

libtcmalloc_debug_la_CXXFLAGS = $(libtcmalloc_la_CXXFLAGS) \
                                -DTCMALLOC_FOR_DEBUGALLOCATION

libtcmalloc_debug_la_LDFLAGS = $(libtcmalloc_la_LDFLAGS) \
                               -version-info 9:4:5

libtcmalloc_debug_la_LIBADD = $(libtcmalloc_la_LIBADD)
tcmalloc_debug_unittest_SOURCES = $(tcmalloc_unittest_SOURCES)
tcmalloc_debug_unittest_CXXFLAGS = $(tcmalloc_unittest_CXXFLAGS) \
                                   -DDEBUGALLOCATION

tcmalloc_debug_unittest_LDFLAGS = $(tcmalloc_unittest_LDFLAGS)
tcmalloc_debug_unittest_LDADD = libtcmalloc_debug.la $(PTHREAD_LIBS)
sampler_debug_test_SOURCES = $(sampler_test_SOURCES)
sampler_debug_test_CXXFLAGS = $(samples_test_CXXFLAGS)
sampler_debug_test_LDFLAGS = $(sampler_test_LDFLAGS)
sampler_debug_test_LDADD = libtcmalloc_debug.la $(PTHREAD_LIBS) -lm
sampling_debug_test_sh_SOURCES = src/tests/sampling_test.sh
sampling_debug_test_SOURCES = $(sampling_test_SOURCES)
sampling_debug_test_CXXFLAGS = $(sampling_test_CXXFLAGS)
sampling_debug_test_LDFLAGS = $(sampling_test_LDFLAGS)
sampling_debug_test_LDADD = libtcmalloc_debug.la $(PTHREAD_LIBS)
heap_profiler_debug_unittest_sh_SOURCES = src/tests/heap-profiler_unittest.sh
heap_profiler_debug_unittest_SOURCES = $(heap_profiler_unittest_SOURCES)
heap_profiler_debug_unittest_CXXFLAGS = $(heap_profiler_unittest_CXXFLAGS)
heap_profiler_debug_unittest_LDFLAGS = $(heap_profiler_unittest_LDFLAGS)
heap_profiler_debug_unittest_LDADD = libtcmalloc_debug.la $(PTHREAD_LIBS)
#heap_checker_debug_unittest_sh_SOURCES = src/tests/heap-checker_unittest.sh
#heap_checker_debug_unittest_SOURCES = $(heap_checker_unittest_SOURCES)
#heap_checker_debug_unittest_CXXFLAGS = $(heap_checker_unittest_CXXFLAGS)
#heap_checker_debug_unittest_LDFLAGS = $(heap_checker_unittest_LDFLAGS)
# We want libtcmalloc last on the link line, but due to a bug in
# libtool involving convenience libs, they need to come last on the
# link line in order to get dependency ordering right.  This is ok:
# convenience libraries are .a's, so tcmalloc is still the last .so.
#heap_checker_debug_unittest_LDADD = libtcmalloc_debug.la liblogging.la \
#                                    $(PTHREAD_LIBS)


### ------- CPU profiler

### The header files we use.  We divide into categories based on directory
S_CPU_PROFILER_INCLUDES = src/profiledata.h \
                          src/profile-handler.h \
                          src/getpc.h \
                          src/base/basictypes.h \
                          src/base/commandlineflags.h \
                          src/base/googleinit.h \
                          src/base/logging.h \
                          src/base/simple_mutex.h \
                          src/base/sysinfo.h \
                          $(SPINLOCK_INCLUDES) \
                          $(LOGGING_INCLUDES)

SG_CPU_PROFILER_INCLUDES = src/gperftools/profiler.h
CPU_PROFILER_INCLUDES = $(S_CPU_PROFILER_INCLUDES) $(SG_CPU_PROFILER_INCLUDES) \
			$(SG_STACKTRACE_INCLUDES)

libprofiler_la_SOURCES = src/profiler.cc \
                         src/profile-handler.cc \
                         src/profiledata.cc \
                         $(CPU_PROFILER_INCLUDES)

libprofiler_la_LIBADD = libstacktrace.la libmaybe_threads.la libfake_stacktrace_scope.la
# We have to include ProfileData for profiledata_unittest
CPU_PROFILER_SYMBOLS = '(ProfilerStart|ProfilerStartWithOptions|ProfilerStop|ProfilerFlush|ProfilerEnable|ProfilerDisable|ProfilingIsEnabledForAllThreads|ProfilerRegisterThread|ProfilerGetCurrentState|ProfilerState|ProfileData|ProfileHandler)'
libprofiler_la_LDFLAGS = -export-symbols-regex $(CPU_PROFILER_SYMBOLS) \
                         -version-info 4:19:4


# See discussion above (under LIBTCMALLOC_MINIMAL) for why we do this.
# Basically it's to work around systems where --rpath doesn't work right.
LIBPROFILER = libstacktrace.la libprofiler.la
#WINDOWS_PROJECTS += vsprojects/getpc_test/getpc_test.vcxproj
getpc_test_SOURCES = src/tests/getpc_test.cc src/getpc.h
#WINDOWS_PROJECTS += vsprojects/profiledata_unittest/profiledata_unittest.vcxproj
profiledata_unittest_SOURCES = src/tests/profiledata_unittest.cc \
                               src/profiledata.h \
                               src/base/commandlineflags.h \
                               src/base/logging.h \
                               src/base/basictypes.h

profiledata_unittest_LDADD = $(LIBPROFILER)
profile_handler_unittest_SOURCES = src/tests/profile-handler_unittest.cc \
                                   src/profile-handler.h

profile_handler_unittest_CXXFLAGS = $(PTHREAD_CFLAGS)
profile_handler_unittest_LDFLAGS = $(PTHREAD_CFLAGS)
profile_handler_unittest_LDADD = $(LIBPROFILER) $(PTHREAD_LIBS)
profiler_unittest_sh_SOURCES = src/tests/profiler_unittest.sh
PROFILER_UNITTEST_INCLUDES = src/config_for_unittests.h \
                             src/gperftools/profiler.h

PROFILER_UNITTEST_SRCS = src/tests/profiler_unittest.cc \
                         src/tests/testutil.h src/tests/testutil.cc \
                         $(PROFILER_UNITTEST_INCLUDES)

profiler1_unittest_SOURCES = $(PROFILER_UNITTEST_SRCS)
profiler1_unittest_CXXFLAGS = -g -DNO_THREADS $(AM_CXXFLAGS)
profiler1_unittest_LDADD = $(LIBPROFILER)
profiler2_unittest_SOURCES = $(PROFILER_UNITTEST_SRCS)
profiler2_unittest_CXXFLAGS = -g -DNO_THREADS $(AM_CXXFLAGS)
profiler2_unittest_LDADD = -lstacktrace -lprofiler
# We depend on -lprofiler but haven't yet said how to build it.  Do so now.
profiler2_unittest_DEPENDENCIES = $(LIBPROFILER)
profiler3_unittest_SOURCES = $(PROFILER_UNITTEST_SRCS)
profiler3_unittest_CXXFLAGS = -g $(PTHREAD_CFLAGS) $(AM_CXXFLAGS)
profiler3_unittest_LDFLAGS = $(PTHREAD_CFLAGS)
profiler3_unittest_LDADD = $(LIBPROFILER) $(PTHREAD_LIBS)
profiler4_unittest_SOURCES = $(PROFILER_UNITTEST_SRCS)
profiler4_unittest_CXXFLAGS = -g $(PTHREAD_CFLAGS) $(AM_CXXFLAGS)
profiler4_unittest_LDFLAGS = $(PTHREAD_CFLAGS)
profiler4_unittest_LDADD = -lstacktrace -lprofiler $(PTHREAD_LIBS)
# We depend on -lprofiler but haven't yet said how to build it.  Do so now.
profiler4_unittest_DEPENDENCIES = $(LIBPROFILER)
libtcmalloc_and_profiler_la_SOURCES = $(libtcmalloc_la_SOURCES) $(libprofiler_la_SOURCES)
libtcmalloc_and_profiler_la_CXXFLAGS = $(libtcmalloc_la_CXXFLAGS) $(libprofiler_la_CXXFLAGS)
# Since this library is meant to be used as a .a, I don't worry as much
# about .so versioning.  I just give the libtcmalloc version number.
# TODO(csilvers): use -export-symbols-regex?
libtcmalloc_and_profiler_la_LDFLAGS = $(PTHREAD_CFLAGS) \
                                      -version-info 9:4:5

# We don't include libprofiler_la_LIBADD here because all it adds is
# libstacktrace.la, which we already get via libtcmalloc.  Trying to
# specify it twice causes link-time duplicate-definition errors. :-(
libtcmalloc_and_profiler_la_LIBADD = $(libtcmalloc_la_LIBADD)
tcmalloc_and_profiler_unittest_SOURCES = $(tcmalloc_both_unittest_srcs)
tcmalloc_and_profiler_unittest_CXXFLAGS = $(tcmalloc_both_unittest_cflags)
tcmalloc_and_profiler_unittest_LDFLAGS = $(tcmalloc_both_unittest_lflags)
tcmalloc_and_profiler_unittest_LDADD = libtcmalloc_and_profiler.la

# http://linux.die.net/man/1/pkg-config, http://pkg-config.freedesktop.org/wiki
pkgconfigdir = $(libdir)/pkgconfig
pkgconfig_DATA = libtcmalloc.pc libtcmalloc_minimal.pc \
                 libtcmalloc_debug.pc libtcmalloc_minimal_debug.pc \
                 libprofiler.pc

CLEANFILES = $(pkgconfig_DATA)
EXTRA_DIST = packages/rpm.sh packages/rpm/rpm.spec packages/deb.sh packages/deb \
             $(SCRIPTS) libtool \
             src/windows/get_mangled_names.cc src/windows/override_functions.cc \
             src/windows/config.h src/windows/gperftools/tcmalloc.h \
             docs/pprof.see_also src/windows/TODO \
             $(WINDOWS_PROJECTS) \
             src/solaris/libstdc++.la

all: all-am

.SUFFIXES:
.SUFFIXES: .c .cc .lo .log .o .obj .test .test$(EXEEXT) .trs
am--refresh: Makefile
	@:
$(srcdir)/Makefile.in: # $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      echo ' cd $(srcdir) && $(AUTOMAKE) --gnu'; \
	      $(am__cd) $(srcdir) && $(AUTOMAKE) --gnu \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --gnu Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    echo ' $(SHELL) ./config.status'; \
	    $(SHELL) ./config.status;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $@ $(am__maybe_remake_depfiles)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $@ $(am__maybe_remake_depfiles);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	$(SHELL) ./config.status --recheck

$(top_srcdir)/configure: # $(am__configure_deps)
	$(am__cd) $(srcdir) && $(AUTOCONF)
$(ACLOCAL_M4): # $(am__aclocal_m4_deps)
	$(am__cd) $(srcdir) && $(ACLOCAL) $(ACLOCAL_AMFLAGS)
$(am__aclocal_m4_deps):

src/config.h: src/stamp-h1
	@test -f $@ || rm -f src/stamp-h1
	@test -f $@ || $(MAKE) $(AM_MAKEFLAGS) src/stamp-h1

src/stamp-h1: $(top_srcdir)/src/config.h.in $(top_builddir)/config.status
	@rm -f src/stamp-h1
	cd $(top_builddir) && $(SHELL) ./config.status src/config.h
$(top_srcdir)/src/config.h.in: # $(am__configure_deps) 
	($(am__cd) $(top_srcdir) && $(AUTOHEADER))
	rm -f src/stamp-h1
	touch $@

distclean-hdr:
	-rm -f src/config.h src/stamp-h1
src/gperftools/tcmalloc.h: $(top_builddir)/config.status $(top_srcdir)/src/gperftools/tcmalloc.h.in
	cd $(top_builddir) && $(SHELL) ./config.status $@
src/windows/gperftools/tcmalloc.h: $(top_builddir)/config.status $(top_srcdir)/src/windows/gperftools/tcmalloc.h.in
	cd $(top_builddir) && $(SHELL) ./config.status $@
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(bindir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(bindir)" || exit 1; \
	fi; \
	for p in $$list; do echo "$$p $$p"; done | \
	sed 's/$(EXEEXT)$$//' | \
	while read p p1; do if test -f $$p \
	 || test -f $$p1 \
	  ; then echo "$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n;h' \
	    -e 's|.*|.|' \
	    -e 'p;x;s,.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/' | \
	sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1 } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) files[d] = files[d] " " $$1; \
	    else { print "f", $$3 "/" $$4, $$1; } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	    if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	    test -z "$$files" || { \
	    echo " $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files '$(DESTDIR)$(bindir)$$dir'"; \
	    $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files "$(DESTDIR)$(bindir)$$dir" || exit $$?; \
	    } \
	; done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	files=`for p in $$list; do echo "$$p"; done | \
	  sed -e 'h;s,^.*/,,;s/$(EXEEXT)$$//;$(transform)' \
	      -e 's/$$/$(EXEEXT)/' \
	`; \
	test -n "$$list" || exit 0; \
	echo " ( cd '$(DESTDIR)$(bindir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(bindir)" && rm -f $$files

clean-binPROGRAMS:
	@list='$(bin_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list

clean-noinstPROGRAMS:
	@list='$(noinst_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list

install-libLTLIBRARIES: $(lib_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	@list='$(lib_LTLIBRARIES)'; test -n "$(libdir)" || list=; \
	list2=; for p in $$list; do \
	  if test -f $$p; then \
	    list2="$$list2 $$p"; \
	  else :; fi; \
	done; \
	test -z "$$list2" || { \
	  echo " $(MKDIR_P) '$(DESTDIR)$(libdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(libdir)" || exit 1; \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 '$(DESTDIR)$(libdir)'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 "$(DESTDIR)$(libdir)"; \
	}

uninstall-libLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(lib_LTLIBRARIES)'; test -n "$(libdir)" || list=; \
	for p in $$list; do \
	  $(am__strip_dir) \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f '$(DESTDIR)$(libdir)/$$f'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f "$(DESTDIR)$(libdir)/$$f"; \
	done

clean-libLTLIBRARIES:
	-test -z "$(lib_LTLIBRARIES)" || rm -f $(lib_LTLIBRARIES)
	@list='$(lib_LTLIBRARIES)'; \
	locs=`for p in $$list; do echo $$p; done | \
	      sed 's|^[^/]*$$|.|; s|/[^/]*$$||; s|$$|/so_locations|' | \
	      sort -u`; \
	test -z "$$locs" || { \
	  echo rm -f $${locs}; \
	  rm -f $${locs}; \
	}

clean-noinstLTLIBRARIES:
	-test -z "$(noinst_LTLIBRARIES)" || rm -f $(noinst_LTLIBRARIES)
	@list='$(noinst_LTLIBRARIES)'; \
	locs=`for p in $$list; do echo $$p; done | \
	      sed 's|^[^/]*$$|.|; s|/[^/]*$$||; s|$$|/so_locations|' | \
	      sort -u`; \
	test -z "$$locs" || { \
	  echo rm -f $${locs}; \
	  rm -f $${locs}; \
	}
src/$(am__dirstamp):
	@$(MKDIR_P) src
	@: > src/$(am__dirstamp)
src/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) src/$(DEPDIR)
	@: > src/$(DEPDIR)/$(am__dirstamp)
src/fake_stacktrace_scope.lo: src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)

libfake_stacktrace_scope.la: $(libfake_stacktrace_scope_la_OBJECTS) $(libfake_stacktrace_scope_la_DEPENDENCIES) $(EXTRA_libfake_stacktrace_scope_la_DEPENDENCIES) 
	$(AM_V_CXXLD)$(CXXLINK) $(am_libfake_stacktrace_scope_la_rpath) $(libfake_stacktrace_scope_la_OBJECTS) $(libfake_stacktrace_scope_la_LIBADD) $(LIBS)
src/base/$(am__dirstamp):
	@$(MKDIR_P) src/base
	@: > src/base/$(am__dirstamp)
src/base/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) src/base/$(DEPDIR)
	@: > src/base/$(DEPDIR)/$(am__dirstamp)
src/base/logging.lo: src/base/$(am__dirstamp) \
	src/base/$(DEPDIR)/$(am__dirstamp)
src/base/dynamic_annotations.lo: src/base/$(am__dirstamp) \
	src/base/$(DEPDIR)/$(am__dirstamp)

liblogging.la: $(liblogging_la_OBJECTS) $(liblogging_la_DEPENDENCIES) $(EXTRA_liblogging_la_DEPENDENCIES) 
	$(AM_V_CXXLD)$(CXXLINK)  $(liblogging_la_OBJECTS) $(liblogging_la_LIBADD) $(LIBS)
src/maybe_threads.lo: src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)

libmaybe_threads.la: $(libmaybe_threads_la_OBJECTS) $(libmaybe_threads_la_DEPENDENCIES) $(EXTRA_libmaybe_threads_la_DEPENDENCIES) 
	$(AM_V_CXXLD)$(CXXLINK)  $(libmaybe_threads_la_OBJECTS) $(libmaybe_threads_la_LIBADD) $(LIBS)
src/profiler.lo: src/$(am__dirstamp) src/$(DEPDIR)/$(am__dirstamp)
src/profile-handler.lo: src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/profiledata.lo: src/$(am__dirstamp) src/$(DEPDIR)/$(am__dirstamp)

libprofiler.la: $(libprofiler_la_OBJECTS) $(libprofiler_la_DEPENDENCIES) $(EXTRA_libprofiler_la_DEPENDENCIES) 
	$(AM_V_CXXLD)$(libprofiler_la_LINK) $(am_libprofiler_la_rpath) $(libprofiler_la_OBJECTS) $(libprofiler_la_LIBADD) $(LIBS)
benchmark/$(am__dirstamp):
	@$(MKDIR_P) benchmark
	@: > benchmark/$(am__dirstamp)
benchmark/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) benchmark/$(DEPDIR)
	@: > benchmark/$(DEPDIR)/$(am__dirstamp)
benchmark/run_benchmark.lo: benchmark/$(am__dirstamp) \
	benchmark/$(DEPDIR)/$(am__dirstamp)

librun_benchmark.la: $(librun_benchmark_la_OBJECTS) $(librun_benchmark_la_DEPENDENCIES) $(EXTRA_librun_benchmark_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(LINK) $(am_librun_benchmark_la_rpath) $(librun_benchmark_la_OBJECTS) $(librun_benchmark_la_LIBADD) $(LIBS)
src/base/spinlock.lo: src/base/$(am__dirstamp) \
	src/base/$(DEPDIR)/$(am__dirstamp)
src/base/spinlock_internal.lo: src/base/$(am__dirstamp) \
	src/base/$(DEPDIR)/$(am__dirstamp)
src/base/atomicops-internals-x86.lo: src/base/$(am__dirstamp) \
	src/base/$(DEPDIR)/$(am__dirstamp)

libspinlock.la: $(libspinlock_la_OBJECTS) $(libspinlock_la_DEPENDENCIES) $(EXTRA_libspinlock_la_DEPENDENCIES) 
	$(AM_V_CXXLD)$(CXXLINK) $(am_libspinlock_la_rpath) $(libspinlock_la_OBJECTS) $(libspinlock_la_LIBADD) $(LIBS)
src/stacktrace.lo: src/$(am__dirstamp) src/$(DEPDIR)/$(am__dirstamp)
src/base/elf_mem_image.lo: src/base/$(am__dirstamp) \
	src/base/$(DEPDIR)/$(am__dirstamp)
src/base/vdso_support.lo: src/base/$(am__dirstamp) \
	src/base/$(DEPDIR)/$(am__dirstamp)

libstacktrace.la: $(libstacktrace_la_OBJECTS) $(libstacktrace_la_DEPENDENCIES) $(EXTRA_libstacktrace_la_DEPENDENCIES) 
	$(AM_V_CXXLD)$(libstacktrace_la_LINK) $(am_libstacktrace_la_rpath) $(libstacktrace_la_OBJECTS) $(libstacktrace_la_LIBADD) $(LIBS)
src/base/sysinfo.lo: src/base/$(am__dirstamp) \
	src/base/$(DEPDIR)/$(am__dirstamp)

libsysinfo.la: $(libsysinfo_la_OBJECTS) $(libsysinfo_la_DEPENDENCIES) $(EXTRA_libsysinfo_la_DEPENDENCIES) 
	$(AM_V_CXXLD)$(CXXLINK)  $(libsysinfo_la_OBJECTS) $(libsysinfo_la_LIBADD) $(LIBS)
src/libtcmalloc_la-tcmalloc.lo: src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/base/thread_lister.lo: src/base/$(am__dirstamp) \
	src/base/$(DEPDIR)/$(am__dirstamp)
src/base/libtcmalloc_la-linuxthreads.lo: src/base/$(am__dirstamp) \
	src/base/$(DEPDIR)/$(am__dirstamp)
src/libtcmalloc_la-heap-checker.lo: src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/libtcmalloc_la-heap-checker-bcad.lo: src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)

libtcmalloc.la: $(libtcmalloc_la_OBJECTS) $(libtcmalloc_la_DEPENDENCIES) $(EXTRA_libtcmalloc_la_DEPENDENCIES) 
	$(AM_V_CXXLD)$(libtcmalloc_la_LINK) $(am_libtcmalloc_la_rpath) $(libtcmalloc_la_OBJECTS) $(libtcmalloc_la_LIBADD) $(LIBS)
src/libtcmalloc_and_profiler_la-tcmalloc.lo: src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/base/libtcmalloc_and_profiler_la-linuxthreads.lo:  \
	src/base/$(am__dirstamp) src/base/$(DEPDIR)/$(am__dirstamp)
src/libtcmalloc_and_profiler_la-heap-checker.lo: src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/libtcmalloc_and_profiler_la-heap-checker-bcad.lo:  \
	src/$(am__dirstamp) src/$(DEPDIR)/$(am__dirstamp)
src/libtcmalloc_and_profiler_la-profiler.lo: src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/libtcmalloc_and_profiler_la-profile-handler.lo:  \
	src/$(am__dirstamp) src/$(DEPDIR)/$(am__dirstamp)
src/libtcmalloc_and_profiler_la-profiledata.lo: src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)

libtcmalloc_and_profiler.la: $(libtcmalloc_and_profiler_la_OBJECTS) $(libtcmalloc_and_profiler_la_DEPENDENCIES) $(EXTRA_libtcmalloc_and_profiler_la_DEPENDENCIES) 
	$(AM_V_CXXLD)$(libtcmalloc_and_profiler_la_LINK) $(am_libtcmalloc_and_profiler_la_rpath) $(libtcmalloc_and_profiler_la_OBJECTS) $(libtcmalloc_and_profiler_la_LIBADD) $(LIBS)
src/libtcmalloc_debug_la-debugallocation.lo: src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/base/libtcmalloc_debug_la-linuxthreads.lo:  \
	src/base/$(am__dirstamp) src/base/$(DEPDIR)/$(am__dirstamp)
src/libtcmalloc_debug_la-heap-checker.lo: src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/libtcmalloc_debug_la-heap-checker-bcad.lo: src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)

libtcmalloc_debug.la: $(libtcmalloc_debug_la_OBJECTS) $(libtcmalloc_debug_la_DEPENDENCIES) $(EXTRA_libtcmalloc_debug_la_DEPENDENCIES) 
	$(AM_V_CXXLD)$(libtcmalloc_debug_la_LINK) $(am_libtcmalloc_debug_la_rpath) $(libtcmalloc_debug_la_OBJECTS) $(libtcmalloc_debug_la_LIBADD) $(LIBS)
src/libtcmalloc_internal_la-common.lo: src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/libtcmalloc_internal_la-internal_logging.lo: src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/libtcmalloc_internal_la-system-alloc.lo: src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/libtcmalloc_internal_la-memfs_malloc.lo: src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/libtcmalloc_internal_la-central_freelist.lo: src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/libtcmalloc_internal_la-page_heap.lo: src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/libtcmalloc_internal_la-sampler.lo: src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/libtcmalloc_internal_la-span.lo: src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/libtcmalloc_internal_la-stack_trace_table.lo: src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/libtcmalloc_internal_la-static_vars.lo: src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/libtcmalloc_internal_la-symbolize.lo: src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/libtcmalloc_internal_la-thread_cache.lo: src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/libtcmalloc_internal_la-malloc_hook.lo: src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/libtcmalloc_internal_la-malloc_extension.lo: src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/base/libtcmalloc_internal_la-low_level_alloc.lo:  \
	src/base/$(am__dirstamp) src/base/$(DEPDIR)/$(am__dirstamp)
src/libtcmalloc_internal_la-heap-profile-table.lo:  \
	src/$(am__dirstamp) src/$(DEPDIR)/$(am__dirstamp)
src/libtcmalloc_internal_la-heap-profiler.lo: src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/libtcmalloc_internal_la-raw_printer.lo: src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/libtcmalloc_internal_la-fake_stacktrace_scope.lo:  \
	src/$(am__dirstamp) src/$(DEPDIR)/$(am__dirstamp)
src/libtcmalloc_internal_la-emergency_malloc.lo: src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/libtcmalloc_internal_la-emergency_malloc_for_stacktrace.lo:  \
	src/$(am__dirstamp) src/$(DEPDIR)/$(am__dirstamp)
src/libtcmalloc_internal_la-memory_region_map.lo: src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)

libtcmalloc_internal.la: $(libtcmalloc_internal_la_OBJECTS) $(libtcmalloc_internal_la_DEPENDENCIES) $(EXTRA_libtcmalloc_internal_la_DEPENDENCIES) 
	$(AM_V_CXXLD)$(libtcmalloc_internal_la_LINK) $(am_libtcmalloc_internal_la_rpath) $(libtcmalloc_internal_la_OBJECTS) $(libtcmalloc_internal_la_LIBADD) $(LIBS)
src/libtcmalloc_minimal_la-tcmalloc.lo: src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)

libtcmalloc_minimal.la: $(libtcmalloc_minimal_la_OBJECTS) $(libtcmalloc_minimal_la_DEPENDENCIES) $(EXTRA_libtcmalloc_minimal_la_DEPENDENCIES) 
	$(AM_V_CXXLD)$(libtcmalloc_minimal_la_LINK) -rpath $(libdir) $(libtcmalloc_minimal_la_OBJECTS) $(libtcmalloc_minimal_la_LIBADD) $(LIBS)
src/libtcmalloc_minimal_debug_la-debugallocation.lo:  \
	src/$(am__dirstamp) src/$(DEPDIR)/$(am__dirstamp)

libtcmalloc_minimal_debug.la: $(libtcmalloc_minimal_debug_la_OBJECTS) $(libtcmalloc_minimal_debug_la_DEPENDENCIES) $(EXTRA_libtcmalloc_minimal_debug_la_DEPENDENCIES) 
	$(AM_V_CXXLD)$(libtcmalloc_minimal_debug_la_LINK) $(am_libtcmalloc_minimal_debug_la_rpath) $(libtcmalloc_minimal_debug_la_OBJECTS) $(libtcmalloc_minimal_debug_la_LIBADD) $(LIBS)
src/libtcmalloc_minimal_internal_la-common.lo: src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/libtcmalloc_minimal_internal_la-internal_logging.lo:  \
	src/$(am__dirstamp) src/$(DEPDIR)/$(am__dirstamp)
src/libtcmalloc_minimal_internal_la-system-alloc.lo:  \
	src/$(am__dirstamp) src/$(DEPDIR)/$(am__dirstamp)
src/libtcmalloc_minimal_internal_la-memfs_malloc.lo:  \
	src/$(am__dirstamp) src/$(DEPDIR)/$(am__dirstamp)
src/libtcmalloc_minimal_internal_la-central_freelist.lo:  \
	src/$(am__dirstamp) src/$(DEPDIR)/$(am__dirstamp)
src/libtcmalloc_minimal_internal_la-page_heap.lo: src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/libtcmalloc_minimal_internal_la-sampler.lo: src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/libtcmalloc_minimal_internal_la-span.lo: src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/libtcmalloc_minimal_internal_la-stack_trace_table.lo:  \
	src/$(am__dirstamp) src/$(DEPDIR)/$(am__dirstamp)
src/libtcmalloc_minimal_internal_la-static_vars.lo:  \
	src/$(am__dirstamp) src/$(DEPDIR)/$(am__dirstamp)
src/libtcmalloc_minimal_internal_la-symbolize.lo: src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/libtcmalloc_minimal_internal_la-thread_cache.lo:  \
	src/$(am__dirstamp) src/$(DEPDIR)/$(am__dirstamp)
src/libtcmalloc_minimal_internal_la-malloc_hook.lo:  \
	src/$(am__dirstamp) src/$(DEPDIR)/$(am__dirstamp)
src/libtcmalloc_minimal_internal_la-malloc_extension.lo:  \
	src/$(am__dirstamp) src/$(DEPDIR)/$(am__dirstamp)

libtcmalloc_minimal_internal.la: $(libtcmalloc_minimal_internal_la_OBJECTS) $(libtcmalloc_minimal_internal_la_DEPENDENCIES) $(EXTRA_libtcmalloc_minimal_internal_la_DEPENDENCIES) 
	$(AM_V_CXXLD)$(libtcmalloc_minimal_internal_la_LINK)  $(libtcmalloc_minimal_internal_la_OBJECTS) $(libtcmalloc_minimal_internal_la_LIBADD) $(LIBS)
src/windows/$(am__dirstamp):
	@$(MKDIR_P) src/windows
	@: > src/windows/$(am__dirstamp)
src/windows/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) src/windows/$(DEPDIR)
	@: > src/windows/$(DEPDIR)/$(am__dirstamp)
src/windows/port.lo: src/windows/$(am__dirstamp) \
	src/windows/$(DEPDIR)/$(am__dirstamp)
src/windows/system-alloc.lo: src/windows/$(am__dirstamp) \
	src/windows/$(DEPDIR)/$(am__dirstamp)
src/windows/ia32_modrm_map.lo: src/windows/$(am__dirstamp) \
	src/windows/$(DEPDIR)/$(am__dirstamp)
src/windows/ia32_opcode_map.lo: src/windows/$(am__dirstamp) \
	src/windows/$(DEPDIR)/$(am__dirstamp)
src/windows/mini_disassembler.lo: src/windows/$(am__dirstamp) \
	src/windows/$(DEPDIR)/$(am__dirstamp)
src/windows/patch_functions.lo: src/windows/$(am__dirstamp) \
	src/windows/$(DEPDIR)/$(am__dirstamp)
src/windows/preamble_patcher.lo: src/windows/$(am__dirstamp) \
	src/windows/$(DEPDIR)/$(am__dirstamp)
src/windows/preamble_patcher_with_stub.lo:  \
	src/windows/$(am__dirstamp) \
	src/windows/$(DEPDIR)/$(am__dirstamp)

libwindows.la: $(libwindows_la_OBJECTS) $(libwindows_la_DEPENDENCIES) $(EXTRA_libwindows_la_DEPENDENCIES) 
	$(AM_V_CXXLD)$(CXXLINK) $(am_libwindows_la_rpath) $(libwindows_la_OBJECTS) $(libwindows_la_LIBADD) $(LIBS)
src/tests/$(am__dirstamp):
	@$(MKDIR_P) src/tests
	@: > src/tests/$(am__dirstamp)
src/tests/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) src/tests/$(DEPDIR)
	@: > src/tests/$(DEPDIR)/$(am__dirstamp)
src/tests/addressmap_unittest-addressmap_unittest.$(OBJEXT):  \
	src/tests/$(am__dirstamp) src/tests/$(DEPDIR)/$(am__dirstamp)
src/windows/addressmap_unittest-port.$(OBJEXT):  \
	src/windows/$(am__dirstamp) \
	src/windows/$(DEPDIR)/$(am__dirstamp)

addressmap_unittest$(EXEEXT): $(addressmap_unittest_OBJECTS) $(addressmap_unittest_DEPENDENCIES) $(EXTRA_addressmap_unittest_DEPENDENCIES) 
	@rm -f addressmap_unittest$(EXEEXT)
	$(AM_V_CXXLD)$(addressmap_unittest_LINK) $(addressmap_unittest_OBJECTS) $(addressmap_unittest_LDADD) $(LIBS)
src/tests/atomicops_unittest.$(OBJEXT): src/tests/$(am__dirstamp) \
	src/tests/$(DEPDIR)/$(am__dirstamp)

atomicops_unittest$(EXEEXT): $(atomicops_unittest_OBJECTS) $(atomicops_unittest_DEPENDENCIES) $(EXTRA_atomicops_unittest_DEPENDENCIES) 
	@rm -f atomicops_unittest$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(atomicops_unittest_OBJECTS) $(atomicops_unittest_LDADD) $(LIBS)
benchmark/binary_trees-binary_trees.$(OBJEXT):  \
	benchmark/$(am__dirstamp) benchmark/$(DEPDIR)/$(am__dirstamp)

binary_trees$(EXEEXT): $(binary_trees_OBJECTS) $(binary_trees_DEPENDENCIES) $(EXTRA_binary_trees_DEPENDENCIES) 
	@rm -f binary_trees$(EXEEXT)
	$(AM_V_CXXLD)$(binary_trees_LINK) $(binary_trees_OBJECTS) $(binary_trees_LDADD) $(LIBS)
benchmark/binary_trees_shared-binary_trees.$(OBJEXT):  \
	benchmark/$(am__dirstamp) benchmark/$(DEPDIR)/$(am__dirstamp)

binary_trees_shared$(EXEEXT): $(binary_trees_shared_OBJECTS) $(binary_trees_shared_DEPENDENCIES) $(EXTRA_binary_trees_shared_DEPENDENCIES) 
	@rm -f binary_trees_shared$(EXEEXT)
	$(AM_V_CXXLD)$(binary_trees_shared_LINK) $(binary_trees_shared_OBJECTS) $(binary_trees_shared_LDADD) $(LIBS)
src/tests/current_allocated_bytes_test-current_allocated_bytes_test.$(OBJEXT):  \
	src/tests/$(am__dirstamp) src/tests/$(DEPDIR)/$(am__dirstamp)

current_allocated_bytes_test$(EXEEXT): $(current_allocated_bytes_test_OBJECTS) $(current_allocated_bytes_test_DEPENDENCIES) $(EXTRA_current_allocated_bytes_test_DEPENDENCIES) 
	@rm -f current_allocated_bytes_test$(EXEEXT)
	$(AM_V_CXXLD)$(current_allocated_bytes_test_LINK) $(current_allocated_bytes_test_OBJECTS) $(current_allocated_bytes_test_LDADD) $(LIBS)
src/tests/debugallocation_test-debugallocation_test.$(OBJEXT):  \
	src/tests/$(am__dirstamp) src/tests/$(DEPDIR)/$(am__dirstamp)

debugallocation_test$(EXEEXT): $(debugallocation_test_OBJECTS) $(debugallocation_test_DEPENDENCIES) $(EXTRA_debugallocation_test_DEPENDENCIES) 
	@rm -f debugallocation_test$(EXEEXT)
	$(AM_V_CXXLD)$(debugallocation_test_LINK) $(debugallocation_test_OBJECTS) $(debugallocation_test_LDADD) $(LIBS)

#debugallocation_test.sh$(EXEEXT): $(debugallocation_test_sh_OBJECTS) $(debugallocation_test_sh_DEPENDENCIES) $(EXTRA_debugallocation_test_sh_DEPENDENCIES) 
#	@rm -f debugallocation_test.sh$(EXEEXT)
#	$(AM_V_CCLD)$(LINK) $(debugallocation_test_sh_OBJECTS) $(debugallocation_test_sh_LDADD) $(LIBS)

#debugallocation_test.sh$(EXEEXT): $(debugallocation_test_sh_OBJECTS) $(debugallocation_test_sh_DEPENDENCIES) $(EXTRA_debugallocation_test_sh_DEPENDENCIES) 
#	@rm -f debugallocation_test.sh$(EXEEXT)
#	$(AM_V_CCLD)$(LINK) $(debugallocation_test_sh_OBJECTS) $(debugallocation_test_sh_LDADD) $(LIBS)
src/tests/frag_unittest-frag_unittest.$(OBJEXT):  \
	src/tests/$(am__dirstamp) src/tests/$(DEPDIR)/$(am__dirstamp)

frag_unittest$(EXEEXT): $(frag_unittest_OBJECTS) $(frag_unittest_DEPENDENCIES) $(EXTRA_frag_unittest_DEPENDENCIES) 
	@rm -f frag_unittest$(EXEEXT)
	$(AM_V_CXXLD)$(frag_unittest_LINK) $(frag_unittest_OBJECTS) $(frag_unittest_LDADD) $(LIBS)
src/tests/getpc_test.$(OBJEXT): src/tests/$(am__dirstamp) \
	src/tests/$(DEPDIR)/$(am__dirstamp)

getpc_test$(EXEEXT): $(getpc_test_OBJECTS) $(getpc_test_DEPENDENCIES) $(EXTRA_getpc_test_DEPENDENCIES) 
	@rm -f getpc_test$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(getpc_test_OBJECTS) $(getpc_test_LDADD) $(LIBS)

heap-checker-death_unittest.sh$(EXEEXT): $(heap_checker_death_unittest_sh_OBJECTS) $(heap_checker_death_unittest_sh_DEPENDENCIES) $(EXTRA_heap_checker_death_unittest_sh_DEPENDENCIES) 
	@rm -f heap-checker-death_unittest.sh$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(heap_checker_death_unittest_sh_OBJECTS) $(heap_checker_death_unittest_sh_LDADD) $(LIBS)
src/tests/heap_checker_debug_unittest-heap-checker_unittest.$(OBJEXT):  \
	src/tests/$(am__dirstamp) src/tests/$(DEPDIR)/$(am__dirstamp)

heap-checker_debug_unittest$(EXEEXT): $(heap_checker_debug_unittest_OBJECTS) $(heap_checker_debug_unittest_DEPENDENCIES) $(EXTRA_heap_checker_debug_unittest_DEPENDENCIES) 
	@rm -f heap-checker_debug_unittest$(EXEEXT)
	$(AM_V_CXXLD)$(heap_checker_debug_unittest_LINK) $(heap_checker_debug_unittest_OBJECTS) $(heap_checker_debug_unittest_LDADD) $(LIBS)

#heap-checker_debug_unittest.sh$(EXEEXT): $(heap_checker_debug_unittest_sh_OBJECTS) $(heap_checker_debug_unittest_sh_DEPENDENCIES) $(EXTRA_heap_checker_debug_unittest_sh_DEPENDENCIES) 
#	@rm -f heap-checker_debug_unittest.sh$(EXEEXT)
#	$(AM_V_CCLD)$(LINK) $(heap_checker_debug_unittest_sh_OBJECTS) $(heap_checker_debug_unittest_sh_LDADD) $(LIBS)

heap-checker_debug_unittest.sh$(EXEEXT): $(heap_checker_debug_unittest_sh_OBJECTS) $(heap_checker_debug_unittest_sh_DEPENDENCIES) $(EXTRA_heap_checker_debug_unittest_sh_DEPENDENCIES) 
	@rm -f heap-checker_debug_unittest.sh$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(heap_checker_debug_unittest_sh_OBJECTS) $(heap_checker_debug_unittest_sh_LDADD) $(LIBS)
src/tests/heap_checker_unittest-heap-checker_unittest.$(OBJEXT):  \
	src/tests/$(am__dirstamp) src/tests/$(DEPDIR)/$(am__dirstamp)

heap-checker_unittest$(EXEEXT): $(heap_checker_unittest_OBJECTS) $(heap_checker_unittest_DEPENDENCIES) $(EXTRA_heap_checker_unittest_DEPENDENCIES) 
	@rm -f heap-checker_unittest$(EXEEXT)
	$(AM_V_CXXLD)$(heap_checker_unittest_LINK) $(heap_checker_unittest_OBJECTS) $(heap_checker_unittest_LDADD) $(LIBS)

heap-checker_unittest.sh$(EXEEXT): $(heap_checker_unittest_sh_OBJECTS) $(heap_checker_unittest_sh_DEPENDENCIES) $(EXTRA_heap_checker_unittest_sh_DEPENDENCIES) 
	@rm -f heap-checker_unittest.sh$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(heap_checker_unittest_sh_OBJECTS) $(heap_checker_unittest_sh_LDADD) $(LIBS)
src/tests/heap_profiler_debug_unittest-heap-profiler_unittest.$(OBJEXT):  \
	src/tests/$(am__dirstamp) src/tests/$(DEPDIR)/$(am__dirstamp)

heap-profiler_debug_unittest$(EXEEXT): $(heap_profiler_debug_unittest_OBJECTS) $(heap_profiler_debug_unittest_DEPENDENCIES) $(EXTRA_heap_profiler_debug_unittest_DEPENDENCIES) 
	@rm -f heap-profiler_debug_unittest$(EXEEXT)
	$(AM_V_CXXLD)$(heap_profiler_debug_unittest_LINK) $(heap_profiler_debug_unittest_OBJECTS) $(heap_profiler_debug_unittest_LDADD) $(LIBS)

#heap-profiler_debug_unittest.sh$(EXEEXT): $(heap_profiler_debug_unittest_sh_OBJECTS) $(heap_profiler_debug_unittest_sh_DEPENDENCIES) $(EXTRA_heap_profiler_debug_unittest_sh_DEPENDENCIES) 
#	@rm -f heap-profiler_debug_unittest.sh$(EXEEXT)
#	$(AM_V_CCLD)$(LINK) $(heap_profiler_debug_unittest_sh_OBJECTS) $(heap_profiler_debug_unittest_sh_LDADD) $(LIBS)

#heap-profiler_debug_unittest.sh$(EXEEXT): $(heap_profiler_debug_unittest_sh_OBJECTS) $(heap_profiler_debug_unittest_sh_DEPENDENCIES) $(EXTRA_heap_profiler_debug_unittest_sh_DEPENDENCIES) 
#	@rm -f heap-profiler_debug_unittest.sh$(EXEEXT)
#	$(AM_V_CCLD)$(LINK) $(heap_profiler_debug_unittest_sh_OBJECTS) $(heap_profiler_debug_unittest_sh_LDADD) $(LIBS)
src/tests/heap_profiler_unittest-heap-profiler_unittest.$(OBJEXT):  \
	src/tests/$(am__dirstamp) src/tests/$(DEPDIR)/$(am__dirstamp)

heap-profiler_unittest$(EXEEXT): $(heap_profiler_unittest_OBJECTS) $(heap_profiler_unittest_DEPENDENCIES) $(EXTRA_heap_profiler_unittest_DEPENDENCIES) 
	@rm -f heap-profiler_unittest$(EXEEXT)
	$(AM_V_CXXLD)$(heap_profiler_unittest_LINK) $(heap_profiler_unittest_OBJECTS) $(heap_profiler_unittest_LDADD) $(LIBS)

#heap-profiler_unittest.sh$(EXEEXT): $(heap_profiler_unittest_sh_OBJECTS) $(heap_profiler_unittest_sh_DEPENDENCIES) $(EXTRA_heap_profiler_unittest_sh_DEPENDENCIES) 
#	@rm -f heap-profiler_unittest.sh$(EXEEXT)
#	$(AM_V_CCLD)$(LINK) $(heap_profiler_unittest_sh_OBJECTS) $(heap_profiler_unittest_sh_LDADD) $(LIBS)
src/base/low_level_alloc_unittest-low_level_alloc.$(OBJEXT):  \
	src/base/$(am__dirstamp) src/base/$(DEPDIR)/$(am__dirstamp)
src/low_level_alloc_unittest-malloc_hook.$(OBJEXT):  \
	src/$(am__dirstamp) src/$(DEPDIR)/$(am__dirstamp)
src/tests/low_level_alloc_unittest-low_level_alloc_unittest.$(OBJEXT):  \
	src/tests/$(am__dirstamp) src/tests/$(DEPDIR)/$(am__dirstamp)

low_level_alloc_unittest$(EXEEXT): $(low_level_alloc_unittest_OBJECTS) $(low_level_alloc_unittest_DEPENDENCIES) $(EXTRA_low_level_alloc_unittest_DEPENDENCIES) 
	@rm -f low_level_alloc_unittest$(EXEEXT)
	$(AM_V_CXXLD)$(low_level_alloc_unittest_LINK) $(low_level_alloc_unittest_OBJECTS) $(low_level_alloc_unittest_LDADD) $(LIBS)
benchmark/malloc_bench-malloc_bench.$(OBJEXT):  \
	benchmark/$(am__dirstamp) benchmark/$(DEPDIR)/$(am__dirstamp)

malloc_bench$(EXEEXT): $(malloc_bench_OBJECTS) $(malloc_bench_DEPENDENCIES) $(EXTRA_malloc_bench_DEPENDENCIES) 
	@rm -f malloc_bench$(EXEEXT)
	$(AM_V_CXXLD)$(malloc_bench_LINK) $(malloc_bench_OBJECTS) $(malloc_bench_LDADD) $(LIBS)
benchmark/malloc_bench_shared-malloc_bench.$(OBJEXT):  \
	benchmark/$(am__dirstamp) benchmark/$(DEPDIR)/$(am__dirstamp)

malloc_bench_shared$(EXEEXT): $(malloc_bench_shared_OBJECTS) $(malloc_bench_shared_DEPENDENCIES) $(EXTRA_malloc_bench_shared_DEPENDENCIES) 
	@rm -f malloc_bench_shared$(EXEEXT)
	$(AM_V_CXXLD)$(malloc_bench_shared_LINK) $(malloc_bench_shared_OBJECTS) $(malloc_bench_shared_LDADD) $(LIBS)
benchmark/malloc_bench_shared_full-malloc_bench.$(OBJEXT):  \
	benchmark/$(am__dirstamp) benchmark/$(DEPDIR)/$(am__dirstamp)

malloc_bench_shared_full$(EXEEXT): $(malloc_bench_shared_full_OBJECTS) $(malloc_bench_shared_full_DEPENDENCIES) $(EXTRA_malloc_bench_shared_full_DEPENDENCIES) 
	@rm -f malloc_bench_shared_full$(EXEEXT)
	$(AM_V_CXXLD)$(malloc_bench_shared_full_LINK) $(malloc_bench_shared_full_OBJECTS) $(malloc_bench_shared_full_LDADD) $(LIBS)
src/tests/malloc_extension_c_test-malloc_extension_c_test.$(OBJEXT):  \
	src/tests/$(am__dirstamp) src/tests/$(DEPDIR)/$(am__dirstamp)

malloc_extension_c_test$(EXEEXT): $(malloc_extension_c_test_OBJECTS) $(malloc_extension_c_test_DEPENDENCIES) $(EXTRA_malloc_extension_c_test_DEPENDENCIES) 
	@rm -f malloc_extension_c_test$(EXEEXT)
	$(AM_V_CCLD)$(malloc_extension_c_test_LINK) $(malloc_extension_c_test_OBJECTS) $(malloc_extension_c_test_LDADD) $(LIBS)
src/tests/malloc_extension_debug_test-malloc_extension_test.$(OBJEXT):  \
	src/tests/$(am__dirstamp) src/tests/$(DEPDIR)/$(am__dirstamp)

malloc_extension_debug_test$(EXEEXT): $(malloc_extension_debug_test_OBJECTS) $(malloc_extension_debug_test_DEPENDENCIES) $(EXTRA_malloc_extension_debug_test_DEPENDENCIES) 
	@rm -f malloc_extension_debug_test$(EXEEXT)
	$(AM_V_CXXLD)$(malloc_extension_debug_test_LINK) $(malloc_extension_debug_test_OBJECTS) $(malloc_extension_debug_test_LDADD) $(LIBS)
src/tests/malloc_extension_test-malloc_extension_test.$(OBJEXT):  \
	src/tests/$(am__dirstamp) src/tests/$(DEPDIR)/$(am__dirstamp)

malloc_extension_test$(EXEEXT): $(malloc_extension_test_OBJECTS) $(malloc_extension_test_DEPENDENCIES) $(EXTRA_malloc_extension_test_DEPENDENCIES) 
	@rm -f malloc_extension_test$(EXEEXT)
	$(AM_V_CXXLD)$(malloc_extension_test_LINK) $(malloc_extension_test_OBJECTS) $(malloc_extension_test_LDADD) $(LIBS)
src/tests/malloc_hook_test-malloc_hook_test.$(OBJEXT):  \
	src/tests/$(am__dirstamp) src/tests/$(DEPDIR)/$(am__dirstamp)
src/tests/malloc_hook_test-testutil.$(OBJEXT):  \
	src/tests/$(am__dirstamp) src/tests/$(DEPDIR)/$(am__dirstamp)

malloc_hook_test$(EXEEXT): $(malloc_hook_test_OBJECTS) $(malloc_hook_test_DEPENDENCIES) $(EXTRA_malloc_hook_test_DEPENDENCIES) 
	@rm -f malloc_hook_test$(EXEEXT)
	$(AM_V_CXXLD)$(malloc_hook_test_LINK) $(malloc_hook_test_OBJECTS) $(malloc_hook_test_LDADD) $(LIBS)
src/tests/markidle_unittest-markidle_unittest.$(OBJEXT):  \
	src/tests/$(am__dirstamp) src/tests/$(DEPDIR)/$(am__dirstamp)
src/tests/markidle_unittest-testutil.$(OBJEXT):  \
	src/tests/$(am__dirstamp) src/tests/$(DEPDIR)/$(am__dirstamp)

markidle_unittest$(EXEEXT): $(markidle_unittest_OBJECTS) $(markidle_unittest_DEPENDENCIES) $(EXTRA_markidle_unittest_DEPENDENCIES) 
	@rm -f markidle_unittest$(EXEEXT)
	$(AM_V_CXXLD)$(markidle_unittest_LINK) $(markidle_unittest_OBJECTS) $(markidle_unittest_LDADD) $(LIBS)

maybe_threads_unittest.sh$(EXEEXT): $(maybe_threads_unittest_sh_OBJECTS) $(maybe_threads_unittest_sh_DEPENDENCIES) $(EXTRA_maybe_threads_unittest_sh_DEPENDENCIES) 
	@rm -f maybe_threads_unittest.sh$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(maybe_threads_unittest_sh_OBJECTS) $(maybe_threads_unittest_sh_LDADD) $(LIBS)

#maybe_threads_unittest.sh$(EXEEXT): $(maybe_threads_unittest_sh_OBJECTS) $(maybe_threads_unittest_sh_DEPENDENCIES) $(EXTRA_maybe_threads_unittest_sh_DEPENDENCIES) 
#	@rm -f maybe_threads_unittest.sh$(EXEEXT)
#	$(AM_V_CCLD)$(LINK) $(maybe_threads_unittest_sh_OBJECTS) $(maybe_threads_unittest_sh_LDADD) $(LIBS)
src/tests/memalign_debug_unittest-memalign_unittest.$(OBJEXT):  \
	src/tests/$(am__dirstamp) src/tests/$(DEPDIR)/$(am__dirstamp)
src/tests/memalign_debug_unittest-testutil.$(OBJEXT):  \
	src/tests/$(am__dirstamp) src/tests/$(DEPDIR)/$(am__dirstamp)

memalign_debug_unittest$(EXEEXT): $(memalign_debug_unittest_OBJECTS) $(memalign_debug_unittest_DEPENDENCIES) $(EXTRA_memalign_debug_unittest_DEPENDENCIES) 
	@rm -f memalign_debug_unittest$(EXEEXT)
	$(AM_V_CXXLD)$(memalign_debug_unittest_LINK) $(memalign_debug_unittest_OBJECTS) $(memalign_debug_unittest_LDADD) $(LIBS)
src/tests/memalign_unittest-memalign_unittest.$(OBJEXT):  \
	src/tests/$(am__dirstamp) src/tests/$(DEPDIR)/$(am__dirstamp)
src/tests/memalign_unittest-testutil.$(OBJEXT):  \
	src/tests/$(am__dirstamp) src/tests/$(DEPDIR)/$(am__dirstamp)

memalign_unittest$(EXEEXT): $(memalign_unittest_OBJECTS) $(memalign_unittest_DEPENDENCIES) $(EXTRA_memalign_unittest_DEPENDENCIES) 
	@rm -f memalign_unittest$(EXEEXT)
	$(AM_V_CXXLD)$(memalign_unittest_LINK) $(memalign_unittest_OBJECTS) $(memalign_unittest_LDADD) $(LIBS)
src/tests/packed_cache_test-packed-cache_test.$(OBJEXT):  \
	src/tests/$(am__dirstamp) src/tests/$(DEPDIR)/$(am__dirstamp)

packed_cache_test$(EXEEXT): $(packed_cache_test_OBJECTS) $(packed_cache_test_DEPENDENCIES) $(EXTRA_packed_cache_test_DEPENDENCIES) 
	@rm -f packed_cache_test$(EXEEXT)
	$(AM_V_CXXLD)$(packed_cache_test_LINK) $(packed_cache_test_OBJECTS) $(packed_cache_test_LDADD) $(LIBS)
src/tests/page_heap_test-page_heap_test.$(OBJEXT):  \
	src/tests/$(am__dirstamp) src/tests/$(DEPDIR)/$(am__dirstamp)

page_heap_test$(EXEEXT): $(page_heap_test_OBJECTS) $(page_heap_test_DEPENDENCIES) $(EXTRA_page_heap_test_DEPENDENCIES) 
	@rm -f page_heap_test$(EXEEXT)
	$(AM_V_CXXLD)$(page_heap_test_LINK) $(page_heap_test_OBJECTS) $(page_heap_test_LDADD) $(LIBS)
src/tests/pagemap_unittest-pagemap_unittest.$(OBJEXT):  \
	src/tests/$(am__dirstamp) src/tests/$(DEPDIR)/$(am__dirstamp)

pagemap_unittest$(EXEEXT): $(pagemap_unittest_OBJECTS) $(pagemap_unittest_DEPENDENCIES) $(EXTRA_pagemap_unittest_DEPENDENCIES) 
	@rm -f pagemap_unittest$(EXEEXT)
	$(AM_V_CXXLD)$(pagemap_unittest_LINK) $(pagemap_unittest_OBJECTS) $(pagemap_unittest_LDADD) $(LIBS)
src/tests/profile_handler_unittest-profile-handler_unittest.$(OBJEXT):  \
	src/tests/$(am__dirstamp) src/tests/$(DEPDIR)/$(am__dirstamp)

profile_handler_unittest$(EXEEXT): $(profile_handler_unittest_OBJECTS) $(profile_handler_unittest_DEPENDENCIES) $(EXTRA_profile_handler_unittest_DEPENDENCIES) 
	@rm -f profile_handler_unittest$(EXEEXT)
	$(AM_V_CXXLD)$(profile_handler_unittest_LINK) $(profile_handler_unittest_OBJECTS) $(profile_handler_unittest_LDADD) $(LIBS)
src/tests/profiledata_unittest.$(OBJEXT): src/tests/$(am__dirstamp) \
	src/tests/$(DEPDIR)/$(am__dirstamp)

profiledata_unittest$(EXEEXT): $(profiledata_unittest_OBJECTS) $(profiledata_unittest_DEPENDENCIES) $(EXTRA_profiledata_unittest_DEPENDENCIES) 
	@rm -f profiledata_unittest$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(profiledata_unittest_OBJECTS) $(profiledata_unittest_LDADD) $(LIBS)
src/tests/profiler1_unittest-profiler_unittest.$(OBJEXT):  \
	src/tests/$(am__dirstamp) src/tests/$(DEPDIR)/$(am__dirstamp)
src/tests/profiler1_unittest-testutil.$(OBJEXT):  \
	src/tests/$(am__dirstamp) src/tests/$(DEPDIR)/$(am__dirstamp)

profiler1_unittest$(EXEEXT): $(profiler1_unittest_OBJECTS) $(profiler1_unittest_DEPENDENCIES) $(EXTRA_profiler1_unittest_DEPENDENCIES) 
	@rm -f profiler1_unittest$(EXEEXT)
	$(AM_V_CXXLD)$(profiler1_unittest_LINK) $(profiler1_unittest_OBJECTS) $(profiler1_unittest_LDADD) $(LIBS)
src/tests/profiler2_unittest-profiler_unittest.$(OBJEXT):  \
	src/tests/$(am__dirstamp) src/tests/$(DEPDIR)/$(am__dirstamp)
src/tests/profiler2_unittest-testutil.$(OBJEXT):  \
	src/tests/$(am__dirstamp) src/tests/$(DEPDIR)/$(am__dirstamp)

profiler2_unittest$(EXEEXT): $(profiler2_unittest_OBJECTS) $(profiler2_unittest_DEPENDENCIES) $(EXTRA_profiler2_unittest_DEPENDENCIES) 
	@rm -f profiler2_unittest$(EXEEXT)
	$(AM_V_CXXLD)$(profiler2_unittest_LINK) $(profiler2_unittest_OBJECTS) $(profiler2_unittest_LDADD) $(LIBS)
src/tests/profiler3_unittest-profiler_unittest.$(OBJEXT):  \
	src/tests/$(am__dirstamp) src/tests/$(DEPDIR)/$(am__dirstamp)
src/tests/profiler3_unittest-testutil.$(OBJEXT):  \
	src/tests/$(am__dirstamp) src/tests/$(DEPDIR)/$(am__dirstamp)

profiler3_unittest$(EXEEXT): $(profiler3_unittest_OBJECTS) $(profiler3_unittest_DEPENDENCIES) $(EXTRA_profiler3_unittest_DEPENDENCIES) 
	@rm -f profiler3_unittest$(EXEEXT)
	$(AM_V_CXXLD)$(profiler3_unittest_LINK) $(profiler3_unittest_OBJECTS) $(profiler3_unittest_LDADD) $(LIBS)
src/tests/profiler4_unittest-profiler_unittest.$(OBJEXT):  \
	src/tests/$(am__dirstamp) src/tests/$(DEPDIR)/$(am__dirstamp)
src/tests/profiler4_unittest-testutil.$(OBJEXT):  \
	src/tests/$(am__dirstamp) src/tests/$(DEPDIR)/$(am__dirstamp)

profiler4_unittest$(EXEEXT): $(profiler4_unittest_OBJECTS) $(profiler4_unittest_DEPENDENCIES) $(EXTRA_profiler4_unittest_DEPENDENCIES) 
	@rm -f profiler4_unittest$(EXEEXT)
	$(AM_V_CXXLD)$(profiler4_unittest_LINK) $(profiler4_unittest_OBJECTS) $(profiler4_unittest_LDADD) $(LIBS)

#profiler_unittest.sh$(EXEEXT): $(profiler_unittest_sh_OBJECTS) $(profiler_unittest_sh_DEPENDENCIES) $(EXTRA_profiler_unittest_sh_DEPENDENCIES) 
#	@rm -f profiler_unittest.sh$(EXEEXT)
#	$(AM_V_CCLD)$(LINK) $(profiler_unittest_sh_OBJECTS) $(profiler_unittest_sh_LDADD) $(LIBS)
src/tests/raw_printer_test-raw_printer_test.$(OBJEXT):  \
	src/tests/$(am__dirstamp) src/tests/$(DEPDIR)/$(am__dirstamp)

raw_printer_test$(EXEEXT): $(raw_printer_test_OBJECTS) $(raw_printer_test_DEPENDENCIES) $(EXTRA_raw_printer_test_DEPENDENCIES) 
	@rm -f raw_printer_test$(EXEEXT)
	$(AM_V_CXXLD)$(raw_printer_test_LINK) $(raw_printer_test_OBJECTS) $(raw_printer_test_LDADD) $(LIBS)
src/tests/realloc_debug_unittest-realloc_unittest.$(OBJEXT):  \
	src/tests/$(am__dirstamp) src/tests/$(DEPDIR)/$(am__dirstamp)

realloc_debug_unittest$(EXEEXT): $(realloc_debug_unittest_OBJECTS) $(realloc_debug_unittest_DEPENDENCIES) $(EXTRA_realloc_debug_unittest_DEPENDENCIES) 
	@rm -f realloc_debug_unittest$(EXEEXT)
	$(AM_V_CXXLD)$(realloc_debug_unittest_LINK) $(realloc_debug_unittest_OBJECTS) $(realloc_debug_unittest_LDADD) $(LIBS)
src/tests/realloc_unittest-realloc_unittest.$(OBJEXT):  \
	src/tests/$(am__dirstamp) src/tests/$(DEPDIR)/$(am__dirstamp)

realloc_unittest$(EXEEXT): $(realloc_unittest_OBJECTS) $(realloc_unittest_DEPENDENCIES) $(EXTRA_realloc_unittest_DEPENDENCIES) 
	@rm -f realloc_unittest$(EXEEXT)
	$(AM_V_CXXLD)$(realloc_unittest_LINK) $(realloc_unittest_OBJECTS) $(realloc_unittest_LDADD) $(LIBS)
src/tests/sampler_debug_test-sampler_test.$(OBJEXT):  \
	src/tests/$(am__dirstamp) src/tests/$(DEPDIR)/$(am__dirstamp)

sampler_debug_test$(EXEEXT): $(sampler_debug_test_OBJECTS) $(sampler_debug_test_DEPENDENCIES) $(EXTRA_sampler_debug_test_DEPENDENCIES) 
	@rm -f sampler_debug_test$(EXEEXT)
	$(AM_V_CXXLD)$(sampler_debug_test_LINK) $(sampler_debug_test_OBJECTS) $(sampler_debug_test_LDADD) $(LIBS)
src/tests/sampler_test-sampler_test.$(OBJEXT):  \
	src/tests/$(am__dirstamp) src/tests/$(DEPDIR)/$(am__dirstamp)

sampler_test$(EXEEXT): $(sampler_test_OBJECTS) $(sampler_test_DEPENDENCIES) $(EXTRA_sampler_test_DEPENDENCIES) 
	@rm -f sampler_test$(EXEEXT)
	$(AM_V_CXXLD)$(sampler_test_LINK) $(sampler_test_OBJECTS) $(sampler_test_LDADD) $(LIBS)
src/tests/sampling_debug_test-sampling_test.$(OBJEXT):  \
	src/tests/$(am__dirstamp) src/tests/$(DEPDIR)/$(am__dirstamp)

sampling_debug_test$(EXEEXT): $(sampling_debug_test_OBJECTS) $(sampling_debug_test_DEPENDENCIES) $(EXTRA_sampling_debug_test_DEPENDENCIES) 
	@rm -f sampling_debug_test$(EXEEXT)
	$(AM_V_CXXLD)$(sampling_debug_test_LINK) $(sampling_debug_test_OBJECTS) $(sampling_debug_test_LDADD) $(LIBS)

#sampling_debug_test.sh$(EXEEXT): $(sampling_debug_test_sh_OBJECTS) $(sampling_debug_test_sh_DEPENDENCIES) $(EXTRA_sampling_debug_test_sh_DEPENDENCIES) 
#	@rm -f sampling_debug_test.sh$(EXEEXT)
#	$(AM_V_CCLD)$(LINK) $(sampling_debug_test_sh_OBJECTS) $(sampling_debug_test_sh_LDADD) $(LIBS)

#sampling_debug_test.sh$(EXEEXT): $(sampling_debug_test_sh_OBJECTS) $(sampling_debug_test_sh_DEPENDENCIES) $(EXTRA_sampling_debug_test_sh_DEPENDENCIES) 
#	@rm -f sampling_debug_test.sh$(EXEEXT)
#	$(AM_V_CCLD)$(LINK) $(sampling_debug_test_sh_OBJECTS) $(sampling_debug_test_sh_LDADD) $(LIBS)
src/tests/sampling_test-sampling_test.$(OBJEXT):  \
	src/tests/$(am__dirstamp) src/tests/$(DEPDIR)/$(am__dirstamp)

sampling_test$(EXEEXT): $(sampling_test_OBJECTS) $(sampling_test_DEPENDENCIES) $(EXTRA_sampling_test_DEPENDENCIES) 
	@rm -f sampling_test$(EXEEXT)
	$(AM_V_CXXLD)$(sampling_test_LINK) $(sampling_test_OBJECTS) $(sampling_test_LDADD) $(LIBS)

#sampling_test.sh$(EXEEXT): $(sampling_test_sh_OBJECTS) $(sampling_test_sh_DEPENDENCIES) $(EXTRA_sampling_test_sh_DEPENDENCIES) 
#	@rm -f sampling_test.sh$(EXEEXT)
#	$(AM_V_CCLD)$(LINK) $(sampling_test_sh_OBJECTS) $(sampling_test_sh_LDADD) $(LIBS)
src/tests/simple_compat_test.$(OBJEXT): src/tests/$(am__dirstamp) \
	src/tests/$(DEPDIR)/$(am__dirstamp)

simple_compat_test$(EXEEXT): $(simple_compat_test_OBJECTS) $(simple_compat_test_DEPENDENCIES) $(EXTRA_simple_compat_test_DEPENDENCIES) 
	@rm -f simple_compat_test$(EXEEXT)
	$(AM_V_CXXLD)$(simple_compat_test_LINK) $(simple_compat_test_OBJECTS) $(simple_compat_test_LDADD) $(LIBS)
src/tests/stack_trace_table_test-stack_trace_table_test.$(OBJEXT):  \
	src/tests/$(am__dirstamp) src/tests/$(DEPDIR)/$(am__dirstamp)

stack_trace_table_test$(EXEEXT): $(stack_trace_table_test_OBJECTS) $(stack_trace_table_test_DEPENDENCIES) $(EXTRA_stack_trace_table_test_DEPENDENCIES) 
	@rm -f stack_trace_table_test$(EXEEXT)
	$(AM_V_CXXLD)$(stack_trace_table_test_LINK) $(stack_trace_table_test_OBJECTS) $(stack_trace_table_test_LDADD) $(LIBS)
src/tests/stacktrace_unittest.$(OBJEXT): src/tests/$(am__dirstamp) \
	src/tests/$(DEPDIR)/$(am__dirstamp)

stacktrace_unittest$(EXEEXT): $(stacktrace_unittest_OBJECTS) $(stacktrace_unittest_DEPENDENCIES) $(EXTRA_stacktrace_unittest_DEPENDENCIES) 
	@rm -f stacktrace_unittest$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(stacktrace_unittest_OBJECTS) $(stacktrace_unittest_LDADD) $(LIBS)
src/tests/system_alloc_unittest-system-alloc_unittest.$(OBJEXT):  \
	src/tests/$(am__dirstamp) src/tests/$(DEPDIR)/$(am__dirstamp)

system_alloc_unittest$(EXEEXT): $(system_alloc_unittest_OBJECTS) $(system_alloc_unittest_DEPENDENCIES) $(EXTRA_system_alloc_unittest_DEPENDENCIES) 
	@rm -f system_alloc_unittest$(EXEEXT)
	$(AM_V_CXXLD)$(system_alloc_unittest_LINK) $(system_alloc_unittest_OBJECTS) $(system_alloc_unittest_LDADD) $(LIBS)
src/tests/tcm_min_asserts_unittest-tcmalloc_unittest.$(OBJEXT):  \
	src/tests/$(am__dirstamp) src/tests/$(DEPDIR)/$(am__dirstamp)
src/tests/tcm_min_asserts_unittest-testutil.$(OBJEXT):  \
	src/tests/$(am__dirstamp) src/tests/$(DEPDIR)/$(am__dirstamp)
src/tcm_min_asserts_unittest-common.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/tcm_min_asserts_unittest-internal_logging.$(OBJEXT):  \
	src/$(am__dirstamp) src/$(DEPDIR)/$(am__dirstamp)
src/tcm_min_asserts_unittest-system-alloc.$(OBJEXT):  \
	src/$(am__dirstamp) src/$(DEPDIR)/$(am__dirstamp)
src/tcm_min_asserts_unittest-memfs_malloc.$(OBJEXT):  \
	src/$(am__dirstamp) src/$(DEPDIR)/$(am__dirstamp)
src/tcm_min_asserts_unittest-central_freelist.$(OBJEXT):  \
	src/$(am__dirstamp) src/$(DEPDIR)/$(am__dirstamp)
src/tcm_min_asserts_unittest-page_heap.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/tcm_min_asserts_unittest-sampler.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/tcm_min_asserts_unittest-span.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/tcm_min_asserts_unittest-stack_trace_table.$(OBJEXT):  \
	src/$(am__dirstamp) src/$(DEPDIR)/$(am__dirstamp)
src/tcm_min_asserts_unittest-static_vars.$(OBJEXT):  \
	src/$(am__dirstamp) src/$(DEPDIR)/$(am__dirstamp)
src/tcm_min_asserts_unittest-symbolize.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/tcm_min_asserts_unittest-thread_cache.$(OBJEXT):  \
	src/$(am__dirstamp) src/$(DEPDIR)/$(am__dirstamp)
src/tcm_min_asserts_unittest-malloc_hook.$(OBJEXT):  \
	src/$(am__dirstamp) src/$(DEPDIR)/$(am__dirstamp)
src/tcm_min_asserts_unittest-malloc_extension.$(OBJEXT):  \
	src/$(am__dirstamp) src/$(DEPDIR)/$(am__dirstamp)
src/tcm_min_asserts_unittest-tcmalloc.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)

tcm_min_asserts_unittest$(EXEEXT): $(tcm_min_asserts_unittest_OBJECTS) $(tcm_min_asserts_unittest_DEPENDENCIES) $(EXTRA_tcm_min_asserts_unittest_DEPENDENCIES) 
	@rm -f tcm_min_asserts_unittest$(EXEEXT)
	$(AM_V_CXXLD)$(tcm_min_asserts_unittest_LINK) $(tcm_min_asserts_unittest_OBJECTS) $(tcm_min_asserts_unittest_LDADD) $(LIBS)
src/tests/tcmalloc_and_profiler_unittest-tcmalloc_unittest.$(OBJEXT):  \
	src/tests/$(am__dirstamp) src/tests/$(DEPDIR)/$(am__dirstamp)
src/tests/tcmalloc_and_profiler_unittest-testutil.$(OBJEXT):  \
	src/tests/$(am__dirstamp) src/tests/$(DEPDIR)/$(am__dirstamp)

tcmalloc_and_profiler_unittest$(EXEEXT): $(tcmalloc_and_profiler_unittest_OBJECTS) $(tcmalloc_and_profiler_unittest_DEPENDENCIES) $(EXTRA_tcmalloc_and_profiler_unittest_DEPENDENCIES) 
	@rm -f tcmalloc_and_profiler_unittest$(EXEEXT)
	$(AM_V_CXXLD)$(tcmalloc_and_profiler_unittest_LINK) $(tcmalloc_and_profiler_unittest_OBJECTS) $(tcmalloc_and_profiler_unittest_LDADD) $(LIBS)
src/tests/tcmalloc_both_unittest-tcmalloc_unittest.$(OBJEXT):  \
	src/tests/$(am__dirstamp) src/tests/$(DEPDIR)/$(am__dirstamp)
src/tests/tcmalloc_both_unittest-testutil.$(OBJEXT):  \
	src/tests/$(am__dirstamp) src/tests/$(DEPDIR)/$(am__dirstamp)

tcmalloc_both_unittest$(EXEEXT): $(tcmalloc_both_unittest_OBJECTS) $(tcmalloc_both_unittest_DEPENDENCIES) $(EXTRA_tcmalloc_both_unittest_DEPENDENCIES) 
	@rm -f tcmalloc_both_unittest$(EXEEXT)
	$(AM_V_CXXLD)$(tcmalloc_both_unittest_LINK) $(tcmalloc_both_unittest_OBJECTS) $(tcmalloc_both_unittest_LDADD) $(LIBS)
src/tests/tcmalloc_debug_unittest-tcmalloc_unittest.$(OBJEXT):  \
	src/tests/$(am__dirstamp) src/tests/$(DEPDIR)/$(am__dirstamp)
src/tests/tcmalloc_debug_unittest-testutil.$(OBJEXT):  \
	src/tests/$(am__dirstamp) src/tests/$(DEPDIR)/$(am__dirstamp)

tcmalloc_debug_unittest$(EXEEXT): $(tcmalloc_debug_unittest_OBJECTS) $(tcmalloc_debug_unittest_DEPENDENCIES) $(EXTRA_tcmalloc_debug_unittest_DEPENDENCIES) 
	@rm -f tcmalloc_debug_unittest$(EXEEXT)
	$(AM_V_CXXLD)$(tcmalloc_debug_unittest_LINK) $(tcmalloc_debug_unittest_OBJECTS) $(tcmalloc_debug_unittest_LDADD) $(LIBS)
src/tests/tcmalloc_large_heap_fragmentation_unittest-large_heap_fragmentation_unittest.$(OBJEXT):  \
	src/tests/$(am__dirstamp) src/tests/$(DEPDIR)/$(am__dirstamp)

tcmalloc_large_heap_fragmentation_unittest$(EXEEXT): $(tcmalloc_large_heap_fragmentation_unittest_OBJECTS) $(tcmalloc_large_heap_fragmentation_unittest_DEPENDENCIES) $(EXTRA_tcmalloc_large_heap_fragmentation_unittest_DEPENDENCIES) 
	@rm -f tcmalloc_large_heap_fragmentation_unittest$(EXEEXT)
	$(AM_V_CXXLD)$(tcmalloc_large_heap_fragmentation_unittest_LINK) $(tcmalloc_large_heap_fragmentation_unittest_OBJECTS) $(tcmalloc_large_heap_fragmentation_unittest_LDADD) $(LIBS)
src/tests/tcmalloc_large_unittest-tcmalloc_large_unittest.$(OBJEXT):  \
	src/tests/$(am__dirstamp) src/tests/$(DEPDIR)/$(am__dirstamp)

tcmalloc_large_unittest$(EXEEXT): $(tcmalloc_large_unittest_OBJECTS) $(tcmalloc_large_unittest_DEPENDENCIES) $(EXTRA_tcmalloc_large_unittest_DEPENDENCIES) 
	@rm -f tcmalloc_large_unittest$(EXEEXT)
	$(AM_V_CXXLD)$(tcmalloc_large_unittest_LINK) $(tcmalloc_large_unittest_OBJECTS) $(tcmalloc_large_unittest_LDADD) $(LIBS)
src/tests/tcmalloc_minimal_debug_unittest-tcmalloc_unittest.$(OBJEXT):  \
	src/tests/$(am__dirstamp) src/tests/$(DEPDIR)/$(am__dirstamp)
src/tests/tcmalloc_minimal_debug_unittest-testutil.$(OBJEXT):  \
	src/tests/$(am__dirstamp) src/tests/$(DEPDIR)/$(am__dirstamp)

tcmalloc_minimal_debug_unittest$(EXEEXT): $(tcmalloc_minimal_debug_unittest_OBJECTS) $(tcmalloc_minimal_debug_unittest_DEPENDENCIES) $(EXTRA_tcmalloc_minimal_debug_unittest_DEPENDENCIES) 
	@rm -f tcmalloc_minimal_debug_unittest$(EXEEXT)
	$(AM_V_CXXLD)$(tcmalloc_minimal_debug_unittest_LINK) $(tcmalloc_minimal_debug_unittest_OBJECTS) $(tcmalloc_minimal_debug_unittest_LDADD) $(LIBS)
src/tests/tcmalloc_minimal_large_heap_fragmentation_unittest-large_heap_fragmentation_unittest.$(OBJEXT):  \
	src/tests/$(am__dirstamp) src/tests/$(DEPDIR)/$(am__dirstamp)

tcmalloc_minimal_large_heap_fragmentation_unittest$(EXEEXT): $(tcmalloc_minimal_large_heap_fragmentation_unittest_OBJECTS) $(tcmalloc_minimal_large_heap_fragmentation_unittest_DEPENDENCIES) $(EXTRA_tcmalloc_minimal_large_heap_fragmentation_unittest_DEPENDENCIES) 
	@rm -f tcmalloc_minimal_large_heap_fragmentation_unittest$(EXEEXT)
	$(AM_V_CXXLD)$(tcmalloc_minimal_large_heap_fragmentation_unittest_LINK) $(tcmalloc_minimal_large_heap_fragmentation_unittest_OBJECTS) $(tcmalloc_minimal_large_heap_fragmentation_unittest_LDADD) $(LIBS)
src/tests/tcmalloc_minimal_large_unittest-tcmalloc_large_unittest.$(OBJEXT):  \
	src/tests/$(am__dirstamp) src/tests/$(DEPDIR)/$(am__dirstamp)

tcmalloc_minimal_large_unittest$(EXEEXT): $(tcmalloc_minimal_large_unittest_OBJECTS) $(tcmalloc_minimal_large_unittest_DEPENDENCIES) $(EXTRA_tcmalloc_minimal_large_unittest_DEPENDENCIES) 
	@rm -f tcmalloc_minimal_large_unittest$(EXEEXT)
	$(AM_V_CXXLD)$(tcmalloc_minimal_large_unittest_LINK) $(tcmalloc_minimal_large_unittest_OBJECTS) $(tcmalloc_minimal_large_unittest_LDADD) $(LIBS)
src/tests/tcmalloc_minimal_unittest-tcmalloc_unittest.$(OBJEXT):  \
	src/tests/$(am__dirstamp) src/tests/$(DEPDIR)/$(am__dirstamp)
src/tests/tcmalloc_minimal_unittest-testutil.$(OBJEXT):  \
	src/tests/$(am__dirstamp) src/tests/$(DEPDIR)/$(am__dirstamp)

tcmalloc_minimal_unittest$(EXEEXT): $(tcmalloc_minimal_unittest_OBJECTS) $(tcmalloc_minimal_unittest_DEPENDENCIES) $(EXTRA_tcmalloc_minimal_unittest_DEPENDENCIES) 
	@rm -f tcmalloc_minimal_unittest$(EXEEXT)
	$(AM_V_CXXLD)$(tcmalloc_minimal_unittest_LINK) $(tcmalloc_minimal_unittest_OBJECTS) $(tcmalloc_minimal_unittest_LDADD) $(LIBS)
src/tests/tcmalloc_unittest-tcmalloc_unittest.$(OBJEXT):  \
	src/tests/$(am__dirstamp) src/tests/$(DEPDIR)/$(am__dirstamp)
src/tests/tcmalloc_unittest-testutil.$(OBJEXT):  \
	src/tests/$(am__dirstamp) src/tests/$(DEPDIR)/$(am__dirstamp)

tcmalloc_unittest$(EXEEXT): $(tcmalloc_unittest_OBJECTS) $(tcmalloc_unittest_DEPENDENCIES) $(EXTRA_tcmalloc_unittest_DEPENDENCIES) 
	@rm -f tcmalloc_unittest$(EXEEXT)
	$(AM_V_CXXLD)$(tcmalloc_unittest_LINK) $(tcmalloc_unittest_OBJECTS) $(tcmalloc_unittest_LDADD) $(LIBS)

#tcmalloc_unittest.sh$(EXEEXT): $(tcmalloc_unittest_sh_OBJECTS) $(tcmalloc_unittest_sh_DEPENDENCIES) $(EXTRA_tcmalloc_unittest_sh_DEPENDENCIES) 
#	@rm -f tcmalloc_unittest.sh$(EXEEXT)
#	$(AM_V_CCLD)$(LINK) $(tcmalloc_unittest_sh_OBJECTS) $(tcmalloc_unittest_sh_LDADD) $(LIBS)
src/tests/thread_dealloc_unittest-thread_dealloc_unittest.$(OBJEXT):  \
	src/tests/$(am__dirstamp) src/tests/$(DEPDIR)/$(am__dirstamp)
src/tests/thread_dealloc_unittest-testutil.$(OBJEXT):  \
	src/tests/$(am__dirstamp) src/tests/$(DEPDIR)/$(am__dirstamp)

thread_dealloc_unittest$(EXEEXT): $(thread_dealloc_unittest_OBJECTS) $(thread_dealloc_unittest_DEPENDENCIES) $(EXTRA_thread_dealloc_unittest_DEPENDENCIES) 
	@rm -f thread_dealloc_unittest$(EXEEXT)
	$(AM_V_CXXLD)$(thread_dealloc_unittest_LINK) $(thread_dealloc_unittest_OBJECTS) $(thread_dealloc_unittest_LDADD) $(LIBS)
install-binSCRIPTS: $(bin_SCRIPTS)
	@$(NORMAL_INSTALL)
	@list='$(bin_SCRIPTS)'; test -n "$(bindir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(bindir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(bindir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  if test -f "$$d$$p"; then echo "$$d$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n' \
	    -e 'h;s|.*|.|' \
	    -e 'p;x;s,.*/,,;$(transform)' | sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1; } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) { files[d] = files[d] " " $$1; \
	      if (++n[d] == $(am__install_max)) { \
		print "f", d, files[d]; n[d] = 0; files[d] = "" } } \
	    else { print "f", d "/" $$4, $$1 } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	     if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	     test -z "$$files" || { \
	       echo " $(INSTALL_SCRIPT) $$files '$(DESTDIR)$(bindir)$$dir'"; \
	       $(INSTALL_SCRIPT) $$files "$(DESTDIR)$(bindir)$$dir" || exit $$?; \
	     } \
	; done

uninstall-binSCRIPTS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_SCRIPTS)'; test -n "$(bindir)" || exit 0; \
	files=`for p in $$list; do echo "$$p"; done | \
	       sed -e 's,.*/,,;$(transform)'`; \
	dir='$(DESTDIR)$(bindir)'; $(am__uninstall_files_from_dir)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)
	-rm -f benchmark/*.$(OBJEXT)
	-rm -f benchmark/*.lo
	-rm -f src/*.$(OBJEXT)
	-rm -f src/*.lo
	-rm -f src/base/*.$(OBJEXT)
	-rm -f src/base/*.lo
	-rm -f src/tests/*.$(OBJEXT)
	-rm -f src/windows/*.$(OBJEXT)
	-rm -f src/windows/*.lo

distclean-compile:
	-rm -f *.tab.c

include benchmark/$(DEPDIR)/binary_trees-binary_trees.Po # am--include-marker
include benchmark/$(DEPDIR)/binary_trees_shared-binary_trees.Po # am--include-marker
include benchmark/$(DEPDIR)/malloc_bench-malloc_bench.Po # am--include-marker
include benchmark/$(DEPDIR)/malloc_bench_shared-malloc_bench.Po # am--include-marker
include benchmark/$(DEPDIR)/malloc_bench_shared_full-malloc_bench.Po # am--include-marker
include benchmark/$(DEPDIR)/run_benchmark.Plo # am--include-marker
include src/$(DEPDIR)/fake_stacktrace_scope.Plo # am--include-marker
include src/$(DEPDIR)/libtcmalloc_and_profiler_la-heap-checker-bcad.Plo # am--include-marker
include src/$(DEPDIR)/libtcmalloc_and_profiler_la-heap-checker.Plo # am--include-marker
include src/$(DEPDIR)/libtcmalloc_and_profiler_la-profile-handler.Plo # am--include-marker
include src/$(DEPDIR)/libtcmalloc_and_profiler_la-profiledata.Plo # am--include-marker
include src/$(DEPDIR)/libtcmalloc_and_profiler_la-profiler.Plo # am--include-marker
include src/$(DEPDIR)/libtcmalloc_and_profiler_la-tcmalloc.Plo # am--include-marker
include src/$(DEPDIR)/libtcmalloc_debug_la-debugallocation.Plo # am--include-marker
include src/$(DEPDIR)/libtcmalloc_debug_la-heap-checker-bcad.Plo # am--include-marker
include src/$(DEPDIR)/libtcmalloc_debug_la-heap-checker.Plo # am--include-marker
include src/$(DEPDIR)/libtcmalloc_internal_la-central_freelist.Plo # am--include-marker
include src/$(DEPDIR)/libtcmalloc_internal_la-common.Plo # am--include-marker
include src/$(DEPDIR)/libtcmalloc_internal_la-emergency_malloc.Plo # am--include-marker
include src/$(DEPDIR)/libtcmalloc_internal_la-emergency_malloc_for_stacktrace.Plo # am--include-marker
include src/$(DEPDIR)/libtcmalloc_internal_la-fake_stacktrace_scope.Plo # am--include-marker
include src/$(DEPDIR)/libtcmalloc_internal_la-heap-profile-table.Plo # am--include-marker
include src/$(DEPDIR)/libtcmalloc_internal_la-heap-profiler.Plo # am--include-marker
include src/$(DEPDIR)/libtcmalloc_internal_la-internal_logging.Plo # am--include-marker
include src/$(DEPDIR)/libtcmalloc_internal_la-malloc_extension.Plo # am--include-marker
include src/$(DEPDIR)/libtcmalloc_internal_la-malloc_hook.Plo # am--include-marker
include src/$(DEPDIR)/libtcmalloc_internal_la-memfs_malloc.Plo # am--include-marker
include src/$(DEPDIR)/libtcmalloc_internal_la-memory_region_map.Plo # am--include-marker
include src/$(DEPDIR)/libtcmalloc_internal_la-page_heap.Plo # am--include-marker
include src/$(DEPDIR)/libtcmalloc_internal_la-raw_printer.Plo # am--include-marker
include src/$(DEPDIR)/libtcmalloc_internal_la-sampler.Plo # am--include-marker
include src/$(DEPDIR)/libtcmalloc_internal_la-span.Plo # am--include-marker
include src/$(DEPDIR)/libtcmalloc_internal_la-stack_trace_table.Plo # am--include-marker
include src/$(DEPDIR)/libtcmalloc_internal_la-static_vars.Plo # am--include-marker
include src/$(DEPDIR)/libtcmalloc_internal_la-symbolize.Plo # am--include-marker
include src/$(DEPDIR)/libtcmalloc_internal_la-system-alloc.Plo # am--include-marker
include src/$(DEPDIR)/libtcmalloc_internal_la-thread_cache.Plo # am--include-marker
include src/$(DEPDIR)/libtcmalloc_la-heap-checker-bcad.Plo # am--include-marker
include src/$(DEPDIR)/libtcmalloc_la-heap-checker.Plo # am--include-marker
include src/$(DEPDIR)/libtcmalloc_la-tcmalloc.Plo # am--include-marker
include src/$(DEPDIR)/libtcmalloc_minimal_debug_la-debugallocation.Plo # am--include-marker
include src/$(DEPDIR)/libtcmalloc_minimal_internal_la-central_freelist.Plo # am--include-marker
include src/$(DEPDIR)/libtcmalloc_minimal_internal_la-common.Plo # am--include-marker
include src/$(DEPDIR)/libtcmalloc_minimal_internal_la-internal_logging.Plo # am--include-marker
include src/$(DEPDIR)/libtcmalloc_minimal_internal_la-malloc_extension.Plo # am--include-marker
include src/$(DEPDIR)/libtcmalloc_minimal_internal_la-malloc_hook.Plo # am--include-marker
include src/$(DEPDIR)/libtcmalloc_minimal_internal_la-memfs_malloc.Plo # am--include-marker
include src/$(DEPDIR)/libtcmalloc_minimal_internal_la-page_heap.Plo # am--include-marker
include src/$(DEPDIR)/libtcmalloc_minimal_internal_la-sampler.Plo # am--include-marker
include src/$(DEPDIR)/libtcmalloc_minimal_internal_la-span.Plo # am--include-marker
include src/$(DEPDIR)/libtcmalloc_minimal_internal_la-stack_trace_table.Plo # am--include-marker
include src/$(DEPDIR)/libtcmalloc_minimal_internal_la-static_vars.Plo # am--include-marker
include src/$(DEPDIR)/libtcmalloc_minimal_internal_la-symbolize.Plo # am--include-marker
include src/$(DEPDIR)/libtcmalloc_minimal_internal_la-system-alloc.Plo # am--include-marker
include src/$(DEPDIR)/libtcmalloc_minimal_internal_la-thread_cache.Plo # am--include-marker
include src/$(DEPDIR)/libtcmalloc_minimal_la-tcmalloc.Plo # am--include-marker
include src/$(DEPDIR)/low_level_alloc_unittest-malloc_hook.Po # am--include-marker
include src/$(DEPDIR)/maybe_threads.Plo # am--include-marker
include src/$(DEPDIR)/profile-handler.Plo # am--include-marker
include src/$(DEPDIR)/profiledata.Plo # am--include-marker
include src/$(DEPDIR)/profiler.Plo # am--include-marker
include src/$(DEPDIR)/stacktrace.Plo # am--include-marker
include src/$(DEPDIR)/tcm_min_asserts_unittest-central_freelist.Po # am--include-marker
include src/$(DEPDIR)/tcm_min_asserts_unittest-common.Po # am--include-marker
include src/$(DEPDIR)/tcm_min_asserts_unittest-internal_logging.Po # am--include-marker
include src/$(DEPDIR)/tcm_min_asserts_unittest-malloc_extension.Po # am--include-marker
include src/$(DEPDIR)/tcm_min_asserts_unittest-malloc_hook.Po # am--include-marker
include src/$(DEPDIR)/tcm_min_asserts_unittest-memfs_malloc.Po # am--include-marker
include src/$(DEPDIR)/tcm_min_asserts_unittest-page_heap.Po # am--include-marker
include src/$(DEPDIR)/tcm_min_asserts_unittest-sampler.Po # am--include-marker
include src/$(DEPDIR)/tcm_min_asserts_unittest-span.Po # am--include-marker
include src/$(DEPDIR)/tcm_min_asserts_unittest-stack_trace_table.Po # am--include-marker
include src/$(DEPDIR)/tcm_min_asserts_unittest-static_vars.Po # am--include-marker
include src/$(DEPDIR)/tcm_min_asserts_unittest-symbolize.Po # am--include-marker
include src/$(DEPDIR)/tcm_min_asserts_unittest-system-alloc.Po # am--include-marker
include src/$(DEPDIR)/tcm_min_asserts_unittest-tcmalloc.Po # am--include-marker
include src/$(DEPDIR)/tcm_min_asserts_unittest-thread_cache.Po # am--include-marker
include src/base/$(DEPDIR)/atomicops-internals-x86.Plo # am--include-marker
include src/base/$(DEPDIR)/dynamic_annotations.Plo # am--include-marker
include src/base/$(DEPDIR)/elf_mem_image.Plo # am--include-marker
include src/base/$(DEPDIR)/libtcmalloc_and_profiler_la-linuxthreads.Plo # am--include-marker
include src/base/$(DEPDIR)/libtcmalloc_debug_la-linuxthreads.Plo # am--include-marker
include src/base/$(DEPDIR)/libtcmalloc_internal_la-low_level_alloc.Plo # am--include-marker
include src/base/$(DEPDIR)/libtcmalloc_la-linuxthreads.Plo # am--include-marker
include src/base/$(DEPDIR)/logging.Plo # am--include-marker
include src/base/$(DEPDIR)/low_level_alloc_unittest-low_level_alloc.Po # am--include-marker
include src/base/$(DEPDIR)/spinlock.Plo # am--include-marker
include src/base/$(DEPDIR)/spinlock_internal.Plo # am--include-marker
include src/base/$(DEPDIR)/sysinfo.Plo # am--include-marker
include src/base/$(DEPDIR)/thread_lister.Plo # am--include-marker
include src/base/$(DEPDIR)/vdso_support.Plo # am--include-marker
include src/tests/$(DEPDIR)/addressmap_unittest-addressmap_unittest.Po # am--include-marker
include src/tests/$(DEPDIR)/atomicops_unittest.Po # am--include-marker
include src/tests/$(DEPDIR)/current_allocated_bytes_test-current_allocated_bytes_test.Po # am--include-marker
include src/tests/$(DEPDIR)/debugallocation_test-debugallocation_test.Po # am--include-marker
include src/tests/$(DEPDIR)/frag_unittest-frag_unittest.Po # am--include-marker
include src/tests/$(DEPDIR)/getpc_test.Po # am--include-marker
include src/tests/$(DEPDIR)/heap_checker_debug_unittest-heap-checker_unittest.Po # am--include-marker
include src/tests/$(DEPDIR)/heap_checker_unittest-heap-checker_unittest.Po # am--include-marker
include src/tests/$(DEPDIR)/heap_profiler_debug_unittest-heap-profiler_unittest.Po # am--include-marker
include src/tests/$(DEPDIR)/heap_profiler_unittest-heap-profiler_unittest.Po # am--include-marker
include src/tests/$(DEPDIR)/low_level_alloc_unittest-low_level_alloc_unittest.Po # am--include-marker
include src/tests/$(DEPDIR)/malloc_extension_c_test-malloc_extension_c_test.Po # am--include-marker
include src/tests/$(DEPDIR)/malloc_extension_debug_test-malloc_extension_test.Po # am--include-marker
include src/tests/$(DEPDIR)/malloc_extension_test-malloc_extension_test.Po # am--include-marker
include src/tests/$(DEPDIR)/malloc_hook_test-malloc_hook_test.Po # am--include-marker
include src/tests/$(DEPDIR)/malloc_hook_test-testutil.Po # am--include-marker
include src/tests/$(DEPDIR)/markidle_unittest-markidle_unittest.Po # am--include-marker
include src/tests/$(DEPDIR)/markidle_unittest-testutil.Po # am--include-marker
include src/tests/$(DEPDIR)/memalign_debug_unittest-memalign_unittest.Po # am--include-marker
include src/tests/$(DEPDIR)/memalign_debug_unittest-testutil.Po # am--include-marker
include src/tests/$(DEPDIR)/memalign_unittest-memalign_unittest.Po # am--include-marker
include src/tests/$(DEPDIR)/memalign_unittest-testutil.Po # am--include-marker
include src/tests/$(DEPDIR)/packed_cache_test-packed-cache_test.Po # am--include-marker
include src/tests/$(DEPDIR)/page_heap_test-page_heap_test.Po # am--include-marker
include src/tests/$(DEPDIR)/pagemap_unittest-pagemap_unittest.Po # am--include-marker
include src/tests/$(DEPDIR)/profile_handler_unittest-profile-handler_unittest.Po # am--include-marker
include src/tests/$(DEPDIR)/profiledata_unittest.Po # am--include-marker
include src/tests/$(DEPDIR)/profiler1_unittest-profiler_unittest.Po # am--include-marker
include src/tests/$(DEPDIR)/profiler1_unittest-testutil.Po # am--include-marker
include src/tests/$(DEPDIR)/profiler2_unittest-profiler_unittest.Po # am--include-marker
include src/tests/$(DEPDIR)/profiler2_unittest-testutil.Po # am--include-marker
include src/tests/$(DEPDIR)/profiler3_unittest-profiler_unittest.Po # am--include-marker
include src/tests/$(DEPDIR)/profiler3_unittest-testutil.Po # am--include-marker
include src/tests/$(DEPDIR)/profiler4_unittest-profiler_unittest.Po # am--include-marker
include src/tests/$(DEPDIR)/profiler4_unittest-testutil.Po # am--include-marker
include src/tests/$(DEPDIR)/raw_printer_test-raw_printer_test.Po # am--include-marker
include src/tests/$(DEPDIR)/realloc_debug_unittest-realloc_unittest.Po # am--include-marker
include src/tests/$(DEPDIR)/realloc_unittest-realloc_unittest.Po # am--include-marker
include src/tests/$(DEPDIR)/sampler_debug_test-sampler_test.Po # am--include-marker
include src/tests/$(DEPDIR)/sampler_test-sampler_test.Po # am--include-marker
include src/tests/$(DEPDIR)/sampling_debug_test-sampling_test.Po # am--include-marker
include src/tests/$(DEPDIR)/sampling_test-sampling_test.Po # am--include-marker
include src/tests/$(DEPDIR)/simple_compat_test.Po # am--include-marker
include src/tests/$(DEPDIR)/stack_trace_table_test-stack_trace_table_test.Po # am--include-marker
include src/tests/$(DEPDIR)/stacktrace_unittest.Po # am--include-marker
include src/tests/$(DEPDIR)/system_alloc_unittest-system-alloc_unittest.Po # am--include-marker
include src/tests/$(DEPDIR)/tcm_min_asserts_unittest-tcmalloc_unittest.Po # am--include-marker
include src/tests/$(DEPDIR)/tcm_min_asserts_unittest-testutil.Po # am--include-marker
include src/tests/$(DEPDIR)/tcmalloc_and_profiler_unittest-tcmalloc_unittest.Po # am--include-marker
include src/tests/$(DEPDIR)/tcmalloc_and_profiler_unittest-testutil.Po # am--include-marker
include src/tests/$(DEPDIR)/tcmalloc_both_unittest-tcmalloc_unittest.Po # am--include-marker
include src/tests/$(DEPDIR)/tcmalloc_both_unittest-testutil.Po # am--include-marker
include src/tests/$(DEPDIR)/tcmalloc_debug_unittest-tcmalloc_unittest.Po # am--include-marker
include src/tests/$(DEPDIR)/tcmalloc_debug_unittest-testutil.Po # am--include-marker
include src/tests/$(DEPDIR)/tcmalloc_large_heap_fragmentation_unittest-large_heap_fragmentation_unittest.Po # am--include-marker
include src/tests/$(DEPDIR)/tcmalloc_large_unittest-tcmalloc_large_unittest.Po # am--include-marker
include src/tests/$(DEPDIR)/tcmalloc_minimal_debug_unittest-tcmalloc_unittest.Po # am--include-marker
include src/tests/$(DEPDIR)/tcmalloc_minimal_debug_unittest-testutil.Po # am--include-marker
include src/tests/$(DEPDIR)/tcmalloc_minimal_large_heap_fragmentation_unittest-large_heap_fragmentation_unittest.Po # am--include-marker
include src/tests/$(DEPDIR)/tcmalloc_minimal_large_unittest-tcmalloc_large_unittest.Po # am--include-marker
include src/tests/$(DEPDIR)/tcmalloc_minimal_unittest-tcmalloc_unittest.Po # am--include-marker
include src/tests/$(DEPDIR)/tcmalloc_minimal_unittest-testutil.Po # am--include-marker
include src/tests/$(DEPDIR)/tcmalloc_unittest-tcmalloc_unittest.Po # am--include-marker
include src/tests/$(DEPDIR)/tcmalloc_unittest-testutil.Po # am--include-marker
include src/tests/$(DEPDIR)/thread_dealloc_unittest-testutil.Po # am--include-marker
include src/tests/$(DEPDIR)/thread_dealloc_unittest-thread_dealloc_unittest.Po # am--include-marker
include src/windows/$(DEPDIR)/addressmap_unittest-port.Po # am--include-marker
include src/windows/$(DEPDIR)/ia32_modrm_map.Plo # am--include-marker
include src/windows/$(DEPDIR)/ia32_opcode_map.Plo # am--include-marker
include src/windows/$(DEPDIR)/mini_disassembler.Plo # am--include-marker
include src/windows/$(DEPDIR)/patch_functions.Plo # am--include-marker
include src/windows/$(DEPDIR)/port.Plo # am--include-marker
include src/windows/$(DEPDIR)/preamble_patcher.Plo # am--include-marker
include src/windows/$(DEPDIR)/preamble_patcher_with_stub.Plo # am--include-marker
include src/windows/$(DEPDIR)/system-alloc.Plo # am--include-marker

$(am__depfiles_remade):
	@$(MKDIR_P) $(@D)
	@echo '# dummy' >$@-t && $(am__mv) $@-t $@

am--depfiles: $(am__depfiles_remade)

.c.o:
	$(AM_V_CC)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.o$$||'`;\
	$(COMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
	$(am__mv) $$depbase.Tpo $$depbase.Po
#	$(AM_V_CC)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(COMPILE) -c -o $@ $<

.c.obj:
	$(AM_V_CC)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.obj$$||'`;\
	$(COMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ `$(CYGPATH_W) '$<'` &&\
	$(am__mv) $$depbase.Tpo $$depbase.Po
#	$(AM_V_CC)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(COMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.c.lo:
	$(AM_V_CC)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.lo$$||'`;\
	$(LTCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
	$(am__mv) $$depbase.Tpo $$depbase.Plo
#	$(AM_V_CC)source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LTCOMPILE) -c -o $@ $<

src/tests/malloc_extension_c_test-malloc_extension_c_test.o: src/tests/malloc_extension_c_test.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(malloc_extension_c_test_CFLAGS) $(CFLAGS) -MT src/tests/malloc_extension_c_test-malloc_extension_c_test.o -MD -MP -MF src/tests/$(DEPDIR)/malloc_extension_c_test-malloc_extension_c_test.Tpo -c -o src/tests/malloc_extension_c_test-malloc_extension_c_test.o `test -f 'src/tests/malloc_extension_c_test.c' || echo '$(srcdir)/'`src/tests/malloc_extension_c_test.c
	$(AM_V_at)$(am__mv) src/tests/$(DEPDIR)/malloc_extension_c_test-malloc_extension_c_test.Tpo src/tests/$(DEPDIR)/malloc_extension_c_test-malloc_extension_c_test.Po
#	$(AM_V_CC)source='src/tests/malloc_extension_c_test.c' object='src/tests/malloc_extension_c_test-malloc_extension_c_test.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(malloc_extension_c_test_CFLAGS) $(CFLAGS) -c -o src/tests/malloc_extension_c_test-malloc_extension_c_test.o `test -f 'src/tests/malloc_extension_c_test.c' || echo '$(srcdir)/'`src/tests/malloc_extension_c_test.c

src/tests/malloc_extension_c_test-malloc_extension_c_test.obj: src/tests/malloc_extension_c_test.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(malloc_extension_c_test_CFLAGS) $(CFLAGS) -MT src/tests/malloc_extension_c_test-malloc_extension_c_test.obj -MD -MP -MF src/tests/$(DEPDIR)/malloc_extension_c_test-malloc_extension_c_test.Tpo -c -o src/tests/malloc_extension_c_test-malloc_extension_c_test.obj `if test -f 'src/tests/malloc_extension_c_test.c'; then $(CYGPATH_W) 'src/tests/malloc_extension_c_test.c'; else $(CYGPATH_W) '$(srcdir)/src/tests/malloc_extension_c_test.c'; fi`
	$(AM_V_at)$(am__mv) src/tests/$(DEPDIR)/malloc_extension_c_test-malloc_extension_c_test.Tpo src/tests/$(DEPDIR)/malloc_extension_c_test-malloc_extension_c_test.Po
#	$(AM_V_CC)source='src/tests/malloc_extension_c_test.c' object='src/tests/malloc_extension_c_test-malloc_extension_c_test.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(malloc_extension_c_test_CFLAGS) $(CFLAGS) -c -o src/tests/malloc_extension_c_test-malloc_extension_c_test.obj `if test -f 'src/tests/malloc_extension_c_test.c'; then $(CYGPATH_W) 'src/tests/malloc_extension_c_test.c'; else $(CYGPATH_W) '$(srcdir)/src/tests/malloc_extension_c_test.c'; fi`

.cc.o:
	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.o$$||'`;\
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
	$(am__mv) $$depbase.Tpo $$depbase.Po
#	$(AM_V_CXX)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXXCOMPILE) -c -o $@ $<

.cc.obj:
	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.obj$$||'`;\
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ `$(CYGPATH_W) '$<'` &&\
	$(am__mv) $$depbase.Tpo $$depbase.Po
#	$(AM_V_CXX)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cc.lo:
	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.lo$$||'`;\
	$(LTCXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
	$(am__mv) $$depbase.Tpo $$depbase.Plo
#	$(AM_V_CXX)source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LTCXXCOMPILE) -c -o $@ $<

src/libtcmalloc_la-tcmalloc.lo: src/tcmalloc.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtcmalloc_la_CXXFLAGS) $(CXXFLAGS) -MT src/libtcmalloc_la-tcmalloc.lo -MD -MP -MF src/$(DEPDIR)/libtcmalloc_la-tcmalloc.Tpo -c -o src/libtcmalloc_la-tcmalloc.lo `test -f 'src/tcmalloc.cc' || echo '$(srcdir)/'`src/tcmalloc.cc
	$(AM_V_at)$(am__mv) src/$(DEPDIR)/libtcmalloc_la-tcmalloc.Tpo src/$(DEPDIR)/libtcmalloc_la-tcmalloc.Plo
#	$(AM_V_CXX)source='src/tcmalloc.cc' object='src/libtcmalloc_la-tcmalloc.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtcmalloc_la_CXXFLAGS) $(CXXFLAGS) -c -o src/libtcmalloc_la-tcmalloc.lo `test -f 'src/tcmalloc.cc' || echo '$(srcdir)/'`src/tcmalloc.cc

src/base/libtcmalloc_la-linuxthreads.lo: src/base/linuxthreads.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtcmalloc_la_CXXFLAGS) $(CXXFLAGS) -MT src/base/libtcmalloc_la-linuxthreads.lo -MD -MP -MF src/base/$(DEPDIR)/libtcmalloc_la-linuxthreads.Tpo -c -o src/base/libtcmalloc_la-linuxthreads.lo `test -f 'src/base/linuxthreads.cc' || echo '$(srcdir)/'`src/base/linuxthreads.cc
	$(AM_V_at)$(am__mv) src/base/$(DEPDIR)/libtcmalloc_la-linuxthreads.Tpo src/base/$(DEPDIR)/libtcmalloc_la-linuxthreads.Plo
#	$(AM_V_CXX)source='src/base/linuxthreads.cc' object='src/base/libtcmalloc_la-linuxthreads.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtcmalloc_la_CXXFLAGS) $(CXXFLAGS) -c -o src/base/libtcmalloc_la-linuxthreads.lo `test -f 'src/base/linuxthreads.cc' || echo '$(srcdir)/'`src/base/linuxthreads.cc

src/libtcmalloc_la-heap-checker.lo: src/heap-checker.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtcmalloc_la_CXXFLAGS) $(CXXFLAGS) -MT src/libtcmalloc_la-heap-checker.lo -MD -MP -MF src/$(DEPDIR)/libtcmalloc_la-heap-checker.Tpo -c -o src/libtcmalloc_la-heap-checker.lo `test -f 'src/heap-checker.cc' || echo '$(srcdir)/'`src/heap-checker.cc
	$(AM_V_at)$(am__mv) src/$(DEPDIR)/libtcmalloc_la-heap-checker.Tpo src/$(DEPDIR)/libtcmalloc_la-heap-checker.Plo
#	$(AM_V_CXX)source='src/heap-checker.cc' object='src/libtcmalloc_la-heap-checker.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtcmalloc_la_CXXFLAGS) $(CXXFLAGS) -c -o src/libtcmalloc_la-heap-checker.lo `test -f 'src/heap-checker.cc' || echo '$(srcdir)/'`src/heap-checker.cc

src/libtcmalloc_la-heap-checker-bcad.lo: src/heap-checker-bcad.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtcmalloc_la_CXXFLAGS) $(CXXFLAGS) -MT src/libtcmalloc_la-heap-checker-bcad.lo -MD -MP -MF src/$(DEPDIR)/libtcmalloc_la-heap-checker-bcad.Tpo -c -o src/libtcmalloc_la-heap-checker-bcad.lo `test -f 'src/heap-checker-bcad.cc' || echo '$(srcdir)/'`src/heap-checker-bcad.cc
	$(AM_V_at)$(am__mv) src/$(DEPDIR)/libtcmalloc_la-heap-checker-bcad.Tpo src/$(DEPDIR)/libtcmalloc_la-heap-checker-bcad.Plo
#	$(AM_V_CXX)source='src/heap-checker-bcad.cc' object='src/libtcmalloc_la-heap-checker-bcad.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtcmalloc_la_CXXFLAGS) $(CXXFLAGS) -c -o src/libtcmalloc_la-heap-checker-bcad.lo `test -f 'src/heap-checker-bcad.cc' || echo '$(srcdir)/'`src/heap-checker-bcad.cc

src/libtcmalloc_and_profiler_la-tcmalloc.lo: src/tcmalloc.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtcmalloc_and_profiler_la_CXXFLAGS) $(CXXFLAGS) -MT src/libtcmalloc_and_profiler_la-tcmalloc.lo -MD -MP -MF src/$(DEPDIR)/libtcmalloc_and_profiler_la-tcmalloc.Tpo -c -o src/libtcmalloc_and_profiler_la-tcmalloc.lo `test -f 'src/tcmalloc.cc' || echo '$(srcdir)/'`src/tcmalloc.cc
	$(AM_V_at)$(am__mv) src/$(DEPDIR)/libtcmalloc_and_profiler_la-tcmalloc.Tpo src/$(DEPDIR)/libtcmalloc_and_profiler_la-tcmalloc.Plo
#	$(AM_V_CXX)source='src/tcmalloc.cc' object='src/libtcmalloc_and_profiler_la-tcmalloc.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtcmalloc_and_profiler_la_CXXFLAGS) $(CXXFLAGS) -c -o src/libtcmalloc_and_profiler_la-tcmalloc.lo `test -f 'src/tcmalloc.cc' || echo '$(srcdir)/'`src/tcmalloc.cc

src/base/libtcmalloc_and_profiler_la-linuxthreads.lo: src/base/linuxthreads.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtcmalloc_and_profiler_la_CXXFLAGS) $(CXXFLAGS) -MT src/base/libtcmalloc_and_profiler_la-linuxthreads.lo -MD -MP -MF src/base/$(DEPDIR)/libtcmalloc_and_profiler_la-linuxthreads.Tpo -c -o src/base/libtcmalloc_and_profiler_la-linuxthreads.lo `test -f 'src/base/linuxthreads.cc' || echo '$(srcdir)/'`src/base/linuxthreads.cc
	$(AM_V_at)$(am__mv) src/base/$(DEPDIR)/libtcmalloc_and_profiler_la-linuxthreads.Tpo src/base/$(DEPDIR)/libtcmalloc_and_profiler_la-linuxthreads.Plo
#	$(AM_V_CXX)source='src/base/linuxthreads.cc' object='src/base/libtcmalloc_and_profiler_la-linuxthreads.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtcmalloc_and_profiler_la_CXXFLAGS) $(CXXFLAGS) -c -o src/base/libtcmalloc_and_profiler_la-linuxthreads.lo `test -f 'src/base/linuxthreads.cc' || echo '$(srcdir)/'`src/base/linuxthreads.cc

src/libtcmalloc_and_profiler_la-heap-checker.lo: src/heap-checker.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtcmalloc_and_profiler_la_CXXFLAGS) $(CXXFLAGS) -MT src/libtcmalloc_and_profiler_la-heap-checker.lo -MD -MP -MF src/$(DEPDIR)/libtcmalloc_and_profiler_la-heap-checker.Tpo -c -o src/libtcmalloc_and_profiler_la-heap-checker.lo `test -f 'src/heap-checker.cc' || echo '$(srcdir)/'`src/heap-checker.cc
	$(AM_V_at)$(am__mv) src/$(DEPDIR)/libtcmalloc_and_profiler_la-heap-checker.Tpo src/$(DEPDIR)/libtcmalloc_and_profiler_la-heap-checker.Plo
#	$(AM_V_CXX)source='src/heap-checker.cc' object='src/libtcmalloc_and_profiler_la-heap-checker.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtcmalloc_and_profiler_la_CXXFLAGS) $(CXXFLAGS) -c -o src/libtcmalloc_and_profiler_la-heap-checker.lo `test -f 'src/heap-checker.cc' || echo '$(srcdir)/'`src/heap-checker.cc

src/libtcmalloc_and_profiler_la-heap-checker-bcad.lo: src/heap-checker-bcad.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtcmalloc_and_profiler_la_CXXFLAGS) $(CXXFLAGS) -MT src/libtcmalloc_and_profiler_la-heap-checker-bcad.lo -MD -MP -MF src/$(DEPDIR)/libtcmalloc_and_profiler_la-heap-checker-bcad.Tpo -c -o src/libtcmalloc_and_profiler_la-heap-checker-bcad.lo `test -f 'src/heap-checker-bcad.cc' || echo '$(srcdir)/'`src/heap-checker-bcad.cc
	$(AM_V_at)$(am__mv) src/$(DEPDIR)/libtcmalloc_and_profiler_la-heap-checker-bcad.Tpo src/$(DEPDIR)/libtcmalloc_and_profiler_la-heap-checker-bcad.Plo
#	$(AM_V_CXX)source='src/heap-checker-bcad.cc' object='src/libtcmalloc_and_profiler_la-heap-checker-bcad.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtcmalloc_and_profiler_la_CXXFLAGS) $(CXXFLAGS) -c -o src/libtcmalloc_and_profiler_la-heap-checker-bcad.lo `test -f 'src/heap-checker-bcad.cc' || echo '$(srcdir)/'`src/heap-checker-bcad.cc

src/libtcmalloc_and_profiler_la-profiler.lo: src/profiler.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtcmalloc_and_profiler_la_CXXFLAGS) $(CXXFLAGS) -MT src/libtcmalloc_and_profiler_la-profiler.lo -MD -MP -MF src/$(DEPDIR)/libtcmalloc_and_profiler_la-profiler.Tpo -c -o src/libtcmalloc_and_profiler_la-profiler.lo `test -f 'src/profiler.cc' || echo '$(srcdir)/'`src/profiler.cc
	$(AM_V_at)$(am__mv) src/$(DEPDIR)/libtcmalloc_and_profiler_la-profiler.Tpo src/$(DEPDIR)/libtcmalloc_and_profiler_la-profiler.Plo
#	$(AM_V_CXX)source='src/profiler.cc' object='src/libtcmalloc_and_profiler_la-profiler.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtcmalloc_and_profiler_la_CXXFLAGS) $(CXXFLAGS) -c -o src/libtcmalloc_and_profiler_la-profiler.lo `test -f 'src/profiler.cc' || echo '$(srcdir)/'`src/profiler.cc

src/libtcmalloc_and_profiler_la-profile-handler.lo: src/profile-handler.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtcmalloc_and_profiler_la_CXXFLAGS) $(CXXFLAGS) -MT src/libtcmalloc_and_profiler_la-profile-handler.lo -MD -MP -MF src/$(DEPDIR)/libtcmalloc_and_profiler_la-profile-handler.Tpo -c -o src/libtcmalloc_and_profiler_la-profile-handler.lo `test -f 'src/profile-handler.cc' || echo '$(srcdir)/'`src/profile-handler.cc
	$(AM_V_at)$(am__mv) src/$(DEPDIR)/libtcmalloc_and_profiler_la-profile-handler.Tpo src/$(DEPDIR)/libtcmalloc_and_profiler_la-profile-handler.Plo
#	$(AM_V_CXX)source='src/profile-handler.cc' object='src/libtcmalloc_and_profiler_la-profile-handler.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtcmalloc_and_profiler_la_CXXFLAGS) $(CXXFLAGS) -c -o src/libtcmalloc_and_profiler_la-profile-handler.lo `test -f 'src/profile-handler.cc' || echo '$(srcdir)/'`src/profile-handler.cc

src/libtcmalloc_and_profiler_la-profiledata.lo: src/profiledata.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtcmalloc_and_profiler_la_CXXFLAGS) $(CXXFLAGS) -MT src/libtcmalloc_and_profiler_la-profiledata.lo -MD -MP -MF src/$(DEPDIR)/libtcmalloc_and_profiler_la-profiledata.Tpo -c -o src/libtcmalloc_and_profiler_la-profiledata.lo `test -f 'src/profiledata.cc' || echo '$(srcdir)/'`src/profiledata.cc
	$(AM_V_at)$(am__mv) src/$(DEPDIR)/libtcmalloc_and_profiler_la-profiledata.Tpo src/$(DEPDIR)/libtcmalloc_and_profiler_la-profiledata.Plo
#	$(AM_V_CXX)source='src/profiledata.cc' object='src/libtcmalloc_and_profiler_la-profiledata.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtcmalloc_and_profiler_la_CXXFLAGS) $(CXXFLAGS) -c -o src/libtcmalloc_and_profiler_la-profiledata.lo `test -f 'src/profiledata.cc' || echo '$(srcdir)/'`src/profiledata.cc

src/libtcmalloc_debug_la-debugallocation.lo: src/debugallocation.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtcmalloc_debug_la_CXXFLAGS) $(CXXFLAGS) -MT src/libtcmalloc_debug_la-debugallocation.lo -MD -MP -MF src/$(DEPDIR)/libtcmalloc_debug_la-debugallocation.Tpo -c -o src/libtcmalloc_debug_la-debugallocation.lo `test -f 'src/debugallocation.cc' || echo '$(srcdir)/'`src/debugallocation.cc
	$(AM_V_at)$(am__mv) src/$(DEPDIR)/libtcmalloc_debug_la-debugallocation.Tpo src/$(DEPDIR)/libtcmalloc_debug_la-debugallocation.Plo
#	$(AM_V_CXX)source='src/debugallocation.cc' object='src/libtcmalloc_debug_la-debugallocation.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtcmalloc_debug_la_CXXFLAGS) $(CXXFLAGS) -c -o src/libtcmalloc_debug_la-debugallocation.lo `test -f 'src/debugallocation.cc' || echo '$(srcdir)/'`src/debugallocation.cc

src/base/libtcmalloc_debug_la-linuxthreads.lo: src/base/linuxthreads.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtcmalloc_debug_la_CXXFLAGS) $(CXXFLAGS) -MT src/base/libtcmalloc_debug_la-linuxthreads.lo -MD -MP -MF src/base/$(DEPDIR)/libtcmalloc_debug_la-linuxthreads.Tpo -c -o src/base/libtcmalloc_debug_la-linuxthreads.lo `test -f 'src/base/linuxthreads.cc' || echo '$(srcdir)/'`src/base/linuxthreads.cc
	$(AM_V_at)$(am__mv) src/base/$(DEPDIR)/libtcmalloc_debug_la-linuxthreads.Tpo src/base/$(DEPDIR)/libtcmalloc_debug_la-linuxthreads.Plo
#	$(AM_V_CXX)source='src/base/linuxthreads.cc' object='src/base/libtcmalloc_debug_la-linuxthreads.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtcmalloc_debug_la_CXXFLAGS) $(CXXFLAGS) -c -o src/base/libtcmalloc_debug_la-linuxthreads.lo `test -f 'src/base/linuxthreads.cc' || echo '$(srcdir)/'`src/base/linuxthreads.cc

src/libtcmalloc_debug_la-heap-checker.lo: src/heap-checker.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtcmalloc_debug_la_CXXFLAGS) $(CXXFLAGS) -MT src/libtcmalloc_debug_la-heap-checker.lo -MD -MP -MF src/$(DEPDIR)/libtcmalloc_debug_la-heap-checker.Tpo -c -o src/libtcmalloc_debug_la-heap-checker.lo `test -f 'src/heap-checker.cc' || echo '$(srcdir)/'`src/heap-checker.cc
	$(AM_V_at)$(am__mv) src/$(DEPDIR)/libtcmalloc_debug_la-heap-checker.Tpo src/$(DEPDIR)/libtcmalloc_debug_la-heap-checker.Plo
#	$(AM_V_CXX)source='src/heap-checker.cc' object='src/libtcmalloc_debug_la-heap-checker.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtcmalloc_debug_la_CXXFLAGS) $(CXXFLAGS) -c -o src/libtcmalloc_debug_la-heap-checker.lo `test -f 'src/heap-checker.cc' || echo '$(srcdir)/'`src/heap-checker.cc

src/libtcmalloc_debug_la-heap-checker-bcad.lo: src/heap-checker-bcad.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtcmalloc_debug_la_CXXFLAGS) $(CXXFLAGS) -MT src/libtcmalloc_debug_la-heap-checker-bcad.lo -MD -MP -MF src/$(DEPDIR)/libtcmalloc_debug_la-heap-checker-bcad.Tpo -c -o src/libtcmalloc_debug_la-heap-checker-bcad.lo `test -f 'src/heap-checker-bcad.cc' || echo '$(srcdir)/'`src/heap-checker-bcad.cc
	$(AM_V_at)$(am__mv) src/$(DEPDIR)/libtcmalloc_debug_la-heap-checker-bcad.Tpo src/$(DEPDIR)/libtcmalloc_debug_la-heap-checker-bcad.Plo
#	$(AM_V_CXX)source='src/heap-checker-bcad.cc' object='src/libtcmalloc_debug_la-heap-checker-bcad.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtcmalloc_debug_la_CXXFLAGS) $(CXXFLAGS) -c -o src/libtcmalloc_debug_la-heap-checker-bcad.lo `test -f 'src/heap-checker-bcad.cc' || echo '$(srcdir)/'`src/heap-checker-bcad.cc

src/libtcmalloc_internal_la-common.lo: src/common.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtcmalloc_internal_la_CXXFLAGS) $(CXXFLAGS) -MT src/libtcmalloc_internal_la-common.lo -MD -MP -MF src/$(DEPDIR)/libtcmalloc_internal_la-common.Tpo -c -o src/libtcmalloc_internal_la-common.lo `test -f 'src/common.cc' || echo '$(srcdir)/'`src/common.cc
	$(AM_V_at)$(am__mv) src/$(DEPDIR)/libtcmalloc_internal_la-common.Tpo src/$(DEPDIR)/libtcmalloc_internal_la-common.Plo
#	$(AM_V_CXX)source='src/common.cc' object='src/libtcmalloc_internal_la-common.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtcmalloc_internal_la_CXXFLAGS) $(CXXFLAGS) -c -o src/libtcmalloc_internal_la-common.lo `test -f 'src/common.cc' || echo '$(srcdir)/'`src/common.cc

src/libtcmalloc_internal_la-internal_logging.lo: src/internal_logging.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtcmalloc_internal_la_CXXFLAGS) $(CXXFLAGS) -MT src/libtcmalloc_internal_la-internal_logging.lo -MD -MP -MF src/$(DEPDIR)/libtcmalloc_internal_la-internal_logging.Tpo -c -o src/libtcmalloc_internal_la-internal_logging.lo `test -f 'src/internal_logging.cc' || echo '$(srcdir)/'`src/internal_logging.cc
	$(AM_V_at)$(am__mv) src/$(DEPDIR)/libtcmalloc_internal_la-internal_logging.Tpo src/$(DEPDIR)/libtcmalloc_internal_la-internal_logging.Plo
#	$(AM_V_CXX)source='src/internal_logging.cc' object='src/libtcmalloc_internal_la-internal_logging.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtcmalloc_internal_la_CXXFLAGS) $(CXXFLAGS) -c -o src/libtcmalloc_internal_la-internal_logging.lo `test -f 'src/internal_logging.cc' || echo '$(srcdir)/'`src/internal_logging.cc

src/libtcmalloc_internal_la-system-alloc.lo: src/system-alloc.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtcmalloc_internal_la_CXXFLAGS) $(CXXFLAGS) -MT src/libtcmalloc_internal_la-system-alloc.lo -MD -MP -MF src/$(DEPDIR)/libtcmalloc_internal_la-system-alloc.Tpo -c -o src/libtcmalloc_internal_la-system-alloc.lo `test -f 'src/system-alloc.cc' || echo '$(srcdir)/'`src/system-alloc.cc
	$(AM_V_at)$(am__mv) src/$(DEPDIR)/libtcmalloc_internal_la-system-alloc.Tpo src/$(DEPDIR)/libtcmalloc_internal_la-system-alloc.Plo
#	$(AM_V_CXX)source='src/system-alloc.cc' object='src/libtcmalloc_internal_la-system-alloc.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtcmalloc_internal_la_CXXFLAGS) $(CXXFLAGS) -c -o src/libtcmalloc_internal_la-system-alloc.lo `test -f 'src/system-alloc.cc' || echo '$(srcdir)/'`src/system-alloc.cc

src/libtcmalloc_internal_la-memfs_malloc.lo: src/memfs_malloc.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtcmalloc_internal_la_CXXFLAGS) $(CXXFLAGS) -MT src/libtcmalloc_internal_la-memfs_malloc.lo -MD -MP -MF src/$(DEPDIR)/libtcmalloc_internal_la-memfs_malloc.Tpo -c -o src/libtcmalloc_internal_la-memfs_malloc.lo `test -f 'src/memfs_malloc.cc' || echo '$(srcdir)/'`src/memfs_malloc.cc
	$(AM_V_at)$(am__mv) src/$(DEPDIR)/libtcmalloc_internal_la-memfs_malloc.Tpo src/$(DEPDIR)/libtcmalloc_internal_la-memfs_malloc.Plo
#	$(AM_V_CXX)source='src/memfs_malloc.cc' object='src/libtcmalloc_internal_la-memfs_malloc.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtcmalloc_internal_la_CXXFLAGS) $(CXXFLAGS) -c -o src/libtcmalloc_internal_la-memfs_malloc.lo `test -f 'src/memfs_malloc.cc' || echo '$(srcdir)/'`src/memfs_malloc.cc

src/libtcmalloc_internal_la-central_freelist.lo: src/central_freelist.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtcmalloc_internal_la_CXXFLAGS) $(CXXFLAGS) -MT src/libtcmalloc_internal_la-central_freelist.lo -MD -MP -MF src/$(DEPDIR)/libtcmalloc_internal_la-central_freelist.Tpo -c -o src/libtcmalloc_internal_la-central_freelist.lo `test -f 'src/central_freelist.cc' || echo '$(srcdir)/'`src/central_freelist.cc
	$(AM_V_at)$(am__mv) src/$(DEPDIR)/libtcmalloc_internal_la-central_freelist.Tpo src/$(DEPDIR)/libtcmalloc_internal_la-central_freelist.Plo
#	$(AM_V_CXX)source='src/central_freelist.cc' object='src/libtcmalloc_internal_la-central_freelist.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtcmalloc_internal_la_CXXFLAGS) $(CXXFLAGS) -c -o src/libtcmalloc_internal_la-central_freelist.lo `test -f 'src/central_freelist.cc' || echo '$(srcdir)/'`src/central_freelist.cc

src/libtcmalloc_internal_la-page_heap.lo: src/page_heap.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtcmalloc_internal_la_CXXFLAGS) $(CXXFLAGS) -MT src/libtcmalloc_internal_la-page_heap.lo -MD -MP -MF src/$(DEPDIR)/libtcmalloc_internal_la-page_heap.Tpo -c -o src/libtcmalloc_internal_la-page_heap.lo `test -f 'src/page_heap.cc' || echo '$(srcdir)/'`src/page_heap.cc
	$(AM_V_at)$(am__mv) src/$(DEPDIR)/libtcmalloc_internal_la-page_heap.Tpo src/$(DEPDIR)/libtcmalloc_internal_la-page_heap.Plo
#	$(AM_V_CXX)source='src/page_heap.cc' object='src/libtcmalloc_internal_la-page_heap.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtcmalloc_internal_la_CXXFLAGS) $(CXXFLAGS) -c -o src/libtcmalloc_internal_la-page_heap.lo `test -f 'src/page_heap.cc' || echo '$(srcdir)/'`src/page_heap.cc

src/libtcmalloc_internal_la-sampler.lo: src/sampler.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtcmalloc_internal_la_CXXFLAGS) $(CXXFLAGS) -MT src/libtcmalloc_internal_la-sampler.lo -MD -MP -MF src/$(DEPDIR)/libtcmalloc_internal_la-sampler.Tpo -c -o src/libtcmalloc_internal_la-sampler.lo `test -f 'src/sampler.cc' || echo '$(srcdir)/'`src/sampler.cc
	$(AM_V_at)$(am__mv) src/$(DEPDIR)/libtcmalloc_internal_la-sampler.Tpo src/$(DEPDIR)/libtcmalloc_internal_la-sampler.Plo
#	$(AM_V_CXX)source='src/sampler.cc' object='src/libtcmalloc_internal_la-sampler.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtcmalloc_internal_la_CXXFLAGS) $(CXXFLAGS) -c -o src/libtcmalloc_internal_la-sampler.lo `test -f 'src/sampler.cc' || echo '$(srcdir)/'`src/sampler.cc

src/libtcmalloc_internal_la-span.lo: src/span.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtcmalloc_internal_la_CXXFLAGS) $(CXXFLAGS) -MT src/libtcmalloc_internal_la-span.lo -MD -MP -MF src/$(DEPDIR)/libtcmalloc_internal_la-span.Tpo -c -o src/libtcmalloc_internal_la-span.lo `test -f 'src/span.cc' || echo '$(srcdir)/'`src/span.cc
	$(AM_V_at)$(am__mv) src/$(DEPDIR)/libtcmalloc_internal_la-span.Tpo src/$(DEPDIR)/libtcmalloc_internal_la-span.Plo
#	$(AM_V_CXX)source='src/span.cc' object='src/libtcmalloc_internal_la-span.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtcmalloc_internal_la_CXXFLAGS) $(CXXFLAGS) -c -o src/libtcmalloc_internal_la-span.lo `test -f 'src/span.cc' || echo '$(srcdir)/'`src/span.cc

src/libtcmalloc_internal_la-stack_trace_table.lo: src/stack_trace_table.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtcmalloc_internal_la_CXXFLAGS) $(CXXFLAGS) -MT src/libtcmalloc_internal_la-stack_trace_table.lo -MD -MP -MF src/$(DEPDIR)/libtcmalloc_internal_la-stack_trace_table.Tpo -c -o src/libtcmalloc_internal_la-stack_trace_table.lo `test -f 'src/stack_trace_table.cc' || echo '$(srcdir)/'`src/stack_trace_table.cc
	$(AM_V_at)$(am__mv) src/$(DEPDIR)/libtcmalloc_internal_la-stack_trace_table.Tpo src/$(DEPDIR)/libtcmalloc_internal_la-stack_trace_table.Plo
#	$(AM_V_CXX)source='src/stack_trace_table.cc' object='src/libtcmalloc_internal_la-stack_trace_table.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtcmalloc_internal_la_CXXFLAGS) $(CXXFLAGS) -c -o src/libtcmalloc_internal_la-stack_trace_table.lo `test -f 'src/stack_trace_table.cc' || echo '$(srcdir)/'`src/stack_trace_table.cc

src/libtcmalloc_internal_la-static_vars.lo: src/static_vars.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtcmalloc_internal_la_CXXFLAGS) $(CXXFLAGS) -MT src/libtcmalloc_internal_la-static_vars.lo -MD -MP -MF src/$(DEPDIR)/libtcmalloc_internal_la-static_vars.Tpo -c -o src/libtcmalloc_internal_la-static_vars.lo `test -f 'src/static_vars.cc' || echo '$(srcdir)/'`src/static_vars.cc
	$(AM_V_at)$(am__mv) src/$(DEPDIR)/libtcmalloc_internal_la-static_vars.Tpo src/$(DEPDIR)/libtcmalloc_internal_la-static_vars.Plo
#	$(AM_V_CXX)source='src/static_vars.cc' object='src/libtcmalloc_internal_la-static_vars.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtcmalloc_internal_la_CXXFLAGS) $(CXXFLAGS) -c -o src/libtcmalloc_internal_la-static_vars.lo `test -f 'src/static_vars.cc' || echo '$(srcdir)/'`src/static_vars.cc

src/libtcmalloc_internal_la-symbolize.lo: src/symbolize.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtcmalloc_internal_la_CXXFLAGS) $(CXXFLAGS) -MT src/libtcmalloc_internal_la-symbolize.lo -MD -MP -MF src/$(DEPDIR)/libtcmalloc_internal_la-symbolize.Tpo -c -o src/libtcmalloc_internal_la-symbolize.lo `test -f 'src/symbolize.cc' || echo '$(srcdir)/'`src/symbolize.cc
	$(AM_V_at)$(am__mv) src/$(DEPDIR)/libtcmalloc_internal_la-symbolize.Tpo src/$(DEPDIR)/libtcmalloc_internal_la-symbolize.Plo
#	$(AM_V_CXX)source='src/symbolize.cc' object='src/libtcmalloc_internal_la-symbolize.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtcmalloc_internal_la_CXXFLAGS) $(CXXFLAGS) -c -o src/libtcmalloc_internal_la-symbolize.lo `test -f 'src/symbolize.cc' || echo '$(srcdir)/'`src/symbolize.cc

src/libtcmalloc_internal_la-thread_cache.lo: src/thread_cache.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtcmalloc_internal_la_CXXFLAGS) $(CXXFLAGS) -MT src/libtcmalloc_internal_la-thread_cache.lo -MD -MP -MF src/$(DEPDIR)/libtcmalloc_internal_la-thread_cache.Tpo -c -o src/libtcmalloc_internal_la-thread_cache.lo `test -f 'src/thread_cache.cc' || echo '$(srcdir)/'`src/thread_cache.cc
	$(AM_V_at)$(am__mv) src/$(DEPDIR)/libtcmalloc_internal_la-thread_cache.Tpo src/$(DEPDIR)/libtcmalloc_internal_la-thread_cache.Plo
#	$(AM_V_CXX)source='src/thread_cache.cc' object='src/libtcmalloc_internal_la-thread_cache.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtcmalloc_internal_la_CXXFLAGS) $(CXXFLAGS) -c -o src/libtcmalloc_internal_la-thread_cache.lo `test -f 'src/thread_cache.cc' || echo '$(srcdir)/'`src/thread_cache.cc

src/libtcmalloc_internal_la-malloc_hook.lo: src/malloc_hook.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtcmalloc_internal_la_CXXFLAGS) $(CXXFLAGS) -MT src/libtcmalloc_internal_la-malloc_hook.lo -MD -MP -MF src/$(DEPDIR)/libtcmalloc_internal_la-malloc_hook.Tpo -c -o src/libtcmalloc_internal_la-malloc_hook.lo `test -f 'src/malloc_hook.cc' || echo '$(srcdir)/'`src/malloc_hook.cc
	$(AM_V_at)$(am__mv) src/$(DEPDIR)/libtcmalloc_internal_la-malloc_hook.Tpo src/$(DEPDIR)/libtcmalloc_internal_la-malloc_hook.Plo
#	$(AM_V_CXX)source='src/malloc_hook.cc' object='src/libtcmalloc_internal_la-malloc_hook.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtcmalloc_internal_la_CXXFLAGS) $(CXXFLAGS) -c -o src/libtcmalloc_internal_la-malloc_hook.lo `test -f 'src/malloc_hook.cc' || echo '$(srcdir)/'`src/malloc_hook.cc

src/libtcmalloc_internal_la-malloc_extension.lo: src/malloc_extension.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtcmalloc_internal_la_CXXFLAGS) $(CXXFLAGS) -MT src/libtcmalloc_internal_la-malloc_extension.lo -MD -MP -MF src/$(DEPDIR)/libtcmalloc_internal_la-malloc_extension.Tpo -c -o src/libtcmalloc_internal_la-malloc_extension.lo `test -f 'src/malloc_extension.cc' || echo '$(srcdir)/'`src/malloc_extension.cc
	$(AM_V_at)$(am__mv) src/$(DEPDIR)/libtcmalloc_internal_la-malloc_extension.Tpo src/$(DEPDIR)/libtcmalloc_internal_la-malloc_extension.Plo
#	$(AM_V_CXX)source='src/malloc_extension.cc' object='src/libtcmalloc_internal_la-malloc_extension.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtcmalloc_internal_la_CXXFLAGS) $(CXXFLAGS) -c -o src/libtcmalloc_internal_la-malloc_extension.lo `test -f 'src/malloc_extension.cc' || echo '$(srcdir)/'`src/malloc_extension.cc

src/base/libtcmalloc_internal_la-low_level_alloc.lo: src/base/low_level_alloc.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtcmalloc_internal_la_CXXFLAGS) $(CXXFLAGS) -MT src/base/libtcmalloc_internal_la-low_level_alloc.lo -MD -MP -MF src/base/$(DEPDIR)/libtcmalloc_internal_la-low_level_alloc.Tpo -c -o src/base/libtcmalloc_internal_la-low_level_alloc.lo `test -f 'src/base/low_level_alloc.cc' || echo '$(srcdir)/'`src/base/low_level_alloc.cc
	$(AM_V_at)$(am__mv) src/base/$(DEPDIR)/libtcmalloc_internal_la-low_level_alloc.Tpo src/base/$(DEPDIR)/libtcmalloc_internal_la-low_level_alloc.Plo
#	$(AM_V_CXX)source='src/base/low_level_alloc.cc' object='src/base/libtcmalloc_internal_la-low_level_alloc.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtcmalloc_internal_la_CXXFLAGS) $(CXXFLAGS) -c -o src/base/libtcmalloc_internal_la-low_level_alloc.lo `test -f 'src/base/low_level_alloc.cc' || echo '$(srcdir)/'`src/base/low_level_alloc.cc

src/libtcmalloc_internal_la-heap-profile-table.lo: src/heap-profile-table.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtcmalloc_internal_la_CXXFLAGS) $(CXXFLAGS) -MT src/libtcmalloc_internal_la-heap-profile-table.lo -MD -MP -MF src/$(DEPDIR)/libtcmalloc_internal_la-heap-profile-table.Tpo -c -o src/libtcmalloc_internal_la-heap-profile-table.lo `test -f 'src/heap-profile-table.cc' || echo '$(srcdir)/'`src/heap-profile-table.cc
	$(AM_V_at)$(am__mv) src/$(DEPDIR)/libtcmalloc_internal_la-heap-profile-table.Tpo src/$(DEPDIR)/libtcmalloc_internal_la-heap-profile-table.Plo
#	$(AM_V_CXX)source='src/heap-profile-table.cc' object='src/libtcmalloc_internal_la-heap-profile-table.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtcmalloc_internal_la_CXXFLAGS) $(CXXFLAGS) -c -o src/libtcmalloc_internal_la-heap-profile-table.lo `test -f 'src/heap-profile-table.cc' || echo '$(srcdir)/'`src/heap-profile-table.cc

src/libtcmalloc_internal_la-heap-profiler.lo: src/heap-profiler.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtcmalloc_internal_la_CXXFLAGS) $(CXXFLAGS) -MT src/libtcmalloc_internal_la-heap-profiler.lo -MD -MP -MF src/$(DEPDIR)/libtcmalloc_internal_la-heap-profiler.Tpo -c -o src/libtcmalloc_internal_la-heap-profiler.lo `test -f 'src/heap-profiler.cc' || echo '$(srcdir)/'`src/heap-profiler.cc
	$(AM_V_at)$(am__mv) src/$(DEPDIR)/libtcmalloc_internal_la-heap-profiler.Tpo src/$(DEPDIR)/libtcmalloc_internal_la-heap-profiler.Plo
#	$(AM_V_CXX)source='src/heap-profiler.cc' object='src/libtcmalloc_internal_la-heap-profiler.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtcmalloc_internal_la_CXXFLAGS) $(CXXFLAGS) -c -o src/libtcmalloc_internal_la-heap-profiler.lo `test -f 'src/heap-profiler.cc' || echo '$(srcdir)/'`src/heap-profiler.cc

src/libtcmalloc_internal_la-raw_printer.lo: src/raw_printer.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtcmalloc_internal_la_CXXFLAGS) $(CXXFLAGS) -MT src/libtcmalloc_internal_la-raw_printer.lo -MD -MP -MF src/$(DEPDIR)/libtcmalloc_internal_la-raw_printer.Tpo -c -o src/libtcmalloc_internal_la-raw_printer.lo `test -f 'src/raw_printer.cc' || echo '$(srcdir)/'`src/raw_printer.cc
	$(AM_V_at)$(am__mv) src/$(DEPDIR)/libtcmalloc_internal_la-raw_printer.Tpo src/$(DEPDIR)/libtcmalloc_internal_la-raw_printer.Plo
#	$(AM_V_CXX)source='src/raw_printer.cc' object='src/libtcmalloc_internal_la-raw_printer.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtcmalloc_internal_la_CXXFLAGS) $(CXXFLAGS) -c -o src/libtcmalloc_internal_la-raw_printer.lo `test -f 'src/raw_printer.cc' || echo '$(srcdir)/'`src/raw_printer.cc

src/libtcmalloc_internal_la-fake_stacktrace_scope.lo: src/fake_stacktrace_scope.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtcmalloc_internal_la_CXXFLAGS) $(CXXFLAGS) -MT src/libtcmalloc_internal_la-fake_stacktrace_scope.lo -MD -MP -MF src/$(DEPDIR)/libtcmalloc_internal_la-fake_stacktrace_scope.Tpo -c -o src/libtcmalloc_internal_la-fake_stacktrace_scope.lo `test -f 'src/fake_stacktrace_scope.cc' || echo '$(srcdir)/'`src/fake_stacktrace_scope.cc
	$(AM_V_at)$(am__mv) src/$(DEPDIR)/libtcmalloc_internal_la-fake_stacktrace_scope.Tpo src/$(DEPDIR)/libtcmalloc_internal_la-fake_stacktrace_scope.Plo
#	$(AM_V_CXX)source='src/fake_stacktrace_scope.cc' object='src/libtcmalloc_internal_la-fake_stacktrace_scope.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtcmalloc_internal_la_CXXFLAGS) $(CXXFLAGS) -c -o src/libtcmalloc_internal_la-fake_stacktrace_scope.lo `test -f 'src/fake_stacktrace_scope.cc' || echo '$(srcdir)/'`src/fake_stacktrace_scope.cc

src/libtcmalloc_internal_la-emergency_malloc.lo: src/emergency_malloc.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtcmalloc_internal_la_CXXFLAGS) $(CXXFLAGS) -MT src/libtcmalloc_internal_la-emergency_malloc.lo -MD -MP -MF src/$(DEPDIR)/libtcmalloc_internal_la-emergency_malloc.Tpo -c -o src/libtcmalloc_internal_la-emergency_malloc.lo `test -f 'src/emergency_malloc.cc' || echo '$(srcdir)/'`src/emergency_malloc.cc
	$(AM_V_at)$(am__mv) src/$(DEPDIR)/libtcmalloc_internal_la-emergency_malloc.Tpo src/$(DEPDIR)/libtcmalloc_internal_la-emergency_malloc.Plo
#	$(AM_V_CXX)source='src/emergency_malloc.cc' object='src/libtcmalloc_internal_la-emergency_malloc.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtcmalloc_internal_la_CXXFLAGS) $(CXXFLAGS) -c -o src/libtcmalloc_internal_la-emergency_malloc.lo `test -f 'src/emergency_malloc.cc' || echo '$(srcdir)/'`src/emergency_malloc.cc

src/libtcmalloc_internal_la-emergency_malloc_for_stacktrace.lo: src/emergency_malloc_for_stacktrace.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtcmalloc_internal_la_CXXFLAGS) $(CXXFLAGS) -MT src/libtcmalloc_internal_la-emergency_malloc_for_stacktrace.lo -MD -MP -MF src/$(DEPDIR)/libtcmalloc_internal_la-emergency_malloc_for_stacktrace.Tpo -c -o src/libtcmalloc_internal_la-emergency_malloc_for_stacktrace.lo `test -f 'src/emergency_malloc_for_stacktrace.cc' || echo '$(srcdir)/'`src/emergency_malloc_for_stacktrace.cc
	$(AM_V_at)$(am__mv) src/$(DEPDIR)/libtcmalloc_internal_la-emergency_malloc_for_stacktrace.Tpo src/$(DEPDIR)/libtcmalloc_internal_la-emergency_malloc_for_stacktrace.Plo
#	$(AM_V_CXX)source='src/emergency_malloc_for_stacktrace.cc' object='src/libtcmalloc_internal_la-emergency_malloc_for_stacktrace.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtcmalloc_internal_la_CXXFLAGS) $(CXXFLAGS) -c -o src/libtcmalloc_internal_la-emergency_malloc_for_stacktrace.lo `test -f 'src/emergency_malloc_for_stacktrace.cc' || echo '$(srcdir)/'`src/emergency_malloc_for_stacktrace.cc

src/libtcmalloc_internal_la-memory_region_map.lo: src/memory_region_map.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtcmalloc_internal_la_CXXFLAGS) $(CXXFLAGS) -MT src/libtcmalloc_internal_la-memory_region_map.lo -MD -MP -MF src/$(DEPDIR)/libtcmalloc_internal_la-memory_region_map.Tpo -c -o src/libtcmalloc_internal_la-memory_region_map.lo `test -f 'src/memory_region_map.cc' || echo '$(srcdir)/'`src/memory_region_map.cc
	$(AM_V_at)$(am__mv) src/$(DEPDIR)/libtcmalloc_internal_la-memory_region_map.Tpo src/$(DEPDIR)/libtcmalloc_internal_la-memory_region_map.Plo
#	$(AM_V_CXX)source='src/memory_region_map.cc' object='src/libtcmalloc_internal_la-memory_region_map.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtcmalloc_internal_la_CXXFLAGS) $(CXXFLAGS) -c -o src/libtcmalloc_internal_la-memory_region_map.lo `test -f 'src/memory_region_map.cc' || echo '$(srcdir)/'`src/memory_region_map.cc

src/libtcmalloc_minimal_la-tcmalloc.lo: src/tcmalloc.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtcmalloc_minimal_la_CXXFLAGS) $(CXXFLAGS) -MT src/libtcmalloc_minimal_la-tcmalloc.lo -MD -MP -MF src/$(DEPDIR)/libtcmalloc_minimal_la-tcmalloc.Tpo -c -o src/libtcmalloc_minimal_la-tcmalloc.lo `test -f 'src/tcmalloc.cc' || echo '$(srcdir)/'`src/tcmalloc.cc
	$(AM_V_at)$(am__mv) src/$(DEPDIR)/libtcmalloc_minimal_la-tcmalloc.Tpo src/$(DEPDIR)/libtcmalloc_minimal_la-tcmalloc.Plo
#	$(AM_V_CXX)source='src/tcmalloc.cc' object='src/libtcmalloc_minimal_la-tcmalloc.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtcmalloc_minimal_la_CXXFLAGS) $(CXXFLAGS) -c -o src/libtcmalloc_minimal_la-tcmalloc.lo `test -f 'src/tcmalloc.cc' || echo '$(srcdir)/'`src/tcmalloc.cc

src/libtcmalloc_minimal_debug_la-debugallocation.lo: src/debugallocation.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtcmalloc_minimal_debug_la_CXXFLAGS) $(CXXFLAGS) -MT src/libtcmalloc_minimal_debug_la-debugallocation.lo -MD -MP -MF src/$(DEPDIR)/libtcmalloc_minimal_debug_la-debugallocation.Tpo -c -o src/libtcmalloc_minimal_debug_la-debugallocation.lo `test -f 'src/debugallocation.cc' || echo '$(srcdir)/'`src/debugallocation.cc
	$(AM_V_at)$(am__mv) src/$(DEPDIR)/libtcmalloc_minimal_debug_la-debugallocation.Tpo src/$(DEPDIR)/libtcmalloc_minimal_debug_la-debugallocation.Plo
#	$(AM_V_CXX)source='src/debugallocation.cc' object='src/libtcmalloc_minimal_debug_la-debugallocation.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtcmalloc_minimal_debug_la_CXXFLAGS) $(CXXFLAGS) -c -o src/libtcmalloc_minimal_debug_la-debugallocation.lo `test -f 'src/debugallocation.cc' || echo '$(srcdir)/'`src/debugallocation.cc

src/libtcmalloc_minimal_internal_la-common.lo: src/common.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtcmalloc_minimal_internal_la_CXXFLAGS) $(CXXFLAGS) -MT src/libtcmalloc_minimal_internal_la-common.lo -MD -MP -MF src/$(DEPDIR)/libtcmalloc_minimal_internal_la-common.Tpo -c -o src/libtcmalloc_minimal_internal_la-common.lo `test -f 'src/common.cc' || echo '$(srcdir)/'`src/common.cc
	$(AM_V_at)$(am__mv) src/$(DEPDIR)/libtcmalloc_minimal_internal_la-common.Tpo src/$(DEPDIR)/libtcmalloc_minimal_internal_la-common.Plo
#	$(AM_V_CXX)source='src/common.cc' object='src/libtcmalloc_minimal_internal_la-common.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtcmalloc_minimal_internal_la_CXXFLAGS) $(CXXFLAGS) -c -o src/libtcmalloc_minimal_internal_la-common.lo `test -f 'src/common.cc' || echo '$(srcdir)/'`src/common.cc

src/libtcmalloc_minimal_internal_la-internal_logging.lo: src/internal_logging.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtcmalloc_minimal_internal_la_CXXFLAGS) $(CXXFLAGS) -MT src/libtcmalloc_minimal_internal_la-internal_logging.lo -MD -MP -MF src/$(DEPDIR)/libtcmalloc_minimal_internal_la-internal_logging.Tpo -c -o src/libtcmalloc_minimal_internal_la-internal_logging.lo `test -f 'src/internal_logging.cc' || echo '$(srcdir)/'`src/internal_logging.cc
	$(AM_V_at)$(am__mv) src/$(DEPDIR)/libtcmalloc_minimal_internal_la-internal_logging.Tpo src/$(DEPDIR)/libtcmalloc_minimal_internal_la-internal_logging.Plo
#	$(AM_V_CXX)source='src/internal_logging.cc' object='src/libtcmalloc_minimal_internal_la-internal_logging.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtcmalloc_minimal_internal_la_CXXFLAGS) $(CXXFLAGS) -c -o src/libtcmalloc_minimal_internal_la-internal_logging.lo `test -f 'src/internal_logging.cc' || echo '$(srcdir)/'`src/internal_logging.cc

src/libtcmalloc_minimal_internal_la-system-alloc.lo: src/system-alloc.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtcmalloc_minimal_internal_la_CXXFLAGS) $(CXXFLAGS) -MT src/libtcmalloc_minimal_internal_la-system-alloc.lo -MD -MP -MF src/$(DEPDIR)/libtcmalloc_minimal_internal_la-system-alloc.Tpo -c -o src/libtcmalloc_minimal_internal_la-system-alloc.lo `test -f 'src/system-alloc.cc' || echo '$(srcdir)/'`src/system-alloc.cc
	$(AM_V_at)$(am__mv) src/$(DEPDIR)/libtcmalloc_minimal_internal_la-system-alloc.Tpo src/$(DEPDIR)/libtcmalloc_minimal_internal_la-system-alloc.Plo
#	$(AM_V_CXX)source='src/system-alloc.cc' object='src/libtcmalloc_minimal_internal_la-system-alloc.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtcmalloc_minimal_internal_la_CXXFLAGS) $(CXXFLAGS) -c -o src/libtcmalloc_minimal_internal_la-system-alloc.lo `test -f 'src/system-alloc.cc' || echo '$(srcdir)/'`src/system-alloc.cc

src/libtcmalloc_minimal_internal_la-memfs_malloc.lo: src/memfs_malloc.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtcmalloc_minimal_internal_la_CXXFLAGS) $(CXXFLAGS) -MT src/libtcmalloc_minimal_internal_la-memfs_malloc.lo -MD -MP -MF src/$(DEPDIR)/libtcmalloc_minimal_internal_la-memfs_malloc.Tpo -c -o src/libtcmalloc_minimal_internal_la-memfs_malloc.lo `test -f 'src/memfs_malloc.cc' || echo '$(srcdir)/'`src/memfs_malloc.cc
	$(AM_V_at)$(am__mv) src/$(DEPDIR)/libtcmalloc_minimal_internal_la-memfs_malloc.Tpo src/$(DEPDIR)/libtcmalloc_minimal_internal_la-memfs_malloc.Plo
#	$(AM_V_CXX)source='src/memfs_malloc.cc' object='src/libtcmalloc_minimal_internal_la-memfs_malloc.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtcmalloc_minimal_internal_la_CXXFLAGS) $(CXXFLAGS) -c -o src/libtcmalloc_minimal_internal_la-memfs_malloc.lo `test -f 'src/memfs_malloc.cc' || echo '$(srcdir)/'`src/memfs_malloc.cc

src/libtcmalloc_minimal_internal_la-central_freelist.lo: src/central_freelist.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtcmalloc_minimal_internal_la_CXXFLAGS) $(CXXFLAGS) -MT src/libtcmalloc_minimal_internal_la-central_freelist.lo -MD -MP -MF src/$(DEPDIR)/libtcmalloc_minimal_internal_la-central_freelist.Tpo -c -o src/libtcmalloc_minimal_internal_la-central_freelist.lo `test -f 'src/central_freelist.cc' || echo '$(srcdir)/'`src/central_freelist.cc
	$(AM_V_at)$(am__mv) src/$(DEPDIR)/libtcmalloc_minimal_internal_la-central_freelist.Tpo src/$(DEPDIR)/libtcmalloc_minimal_internal_la-central_freelist.Plo
#	$(AM_V_CXX)source='src/central_freelist.cc' object='src/libtcmalloc_minimal_internal_la-central_freelist.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtcmalloc_minimal_internal_la_CXXFLAGS) $(CXXFLAGS) -c -o src/libtcmalloc_minimal_internal_la-central_freelist.lo `test -f 'src/central_freelist.cc' || echo '$(srcdir)/'`src/central_freelist.cc

src/libtcmalloc_minimal_internal_la-page_heap.lo: src/page_heap.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtcmalloc_minimal_internal_la_CXXFLAGS) $(CXXFLAGS) -MT src/libtcmalloc_minimal_internal_la-page_heap.lo -MD -MP -MF src/$(DEPDIR)/libtcmalloc_minimal_internal_la-page_heap.Tpo -c -o src/libtcmalloc_minimal_internal_la-page_heap.lo `test -f 'src/page_heap.cc' || echo '$(srcdir)/'`src/page_heap.cc
	$(AM_V_at)$(am__mv) src/$(DEPDIR)/libtcmalloc_minimal_internal_la-page_heap.Tpo src/$(DEPDIR)/libtcmalloc_minimal_internal_la-page_heap.Plo
#	$(AM_V_CXX)source='src/page_heap.cc' object='src/libtcmalloc_minimal_internal_la-page_heap.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtcmalloc_minimal_internal_la_CXXFLAGS) $(CXXFLAGS) -c -o src/libtcmalloc_minimal_internal_la-page_heap.lo `test -f 'src/page_heap.cc' || echo '$(srcdir)/'`src/page_heap.cc

src/libtcmalloc_minimal_internal_la-sampler.lo: src/sampler.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtcmalloc_minimal_internal_la_CXXFLAGS) $(CXXFLAGS) -MT src/libtcmalloc_minimal_internal_la-sampler.lo -MD -MP -MF src/$(DEPDIR)/libtcmalloc_minimal_internal_la-sampler.Tpo -c -o src/libtcmalloc_minimal_internal_la-sampler.lo `test -f 'src/sampler.cc' || echo '$(srcdir)/'`src/sampler.cc
	$(AM_V_at)$(am__mv) src/$(DEPDIR)/libtcmalloc_minimal_internal_la-sampler.Tpo src/$(DEPDIR)/libtcmalloc_minimal_internal_la-sampler.Plo
#	$(AM_V_CXX)source='src/sampler.cc' object='src/libtcmalloc_minimal_internal_la-sampler.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtcmalloc_minimal_internal_la_CXXFLAGS) $(CXXFLAGS) -c -o src/libtcmalloc_minimal_internal_la-sampler.lo `test -f 'src/sampler.cc' || echo '$(srcdir)/'`src/sampler.cc

src/libtcmalloc_minimal_internal_la-span.lo: src/span.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtcmalloc_minimal_internal_la_CXXFLAGS) $(CXXFLAGS) -MT src/libtcmalloc_minimal_internal_la-span.lo -MD -MP -MF src/$(DEPDIR)/libtcmalloc_minimal_internal_la-span.Tpo -c -o src/libtcmalloc_minimal_internal_la-span.lo `test -f 'src/span.cc' || echo '$(srcdir)/'`src/span.cc
	$(AM_V_at)$(am__mv) src/$(DEPDIR)/libtcmalloc_minimal_internal_la-span.Tpo src/$(DEPDIR)/libtcmalloc_minimal_internal_la-span.Plo
#	$(AM_V_CXX)source='src/span.cc' object='src/libtcmalloc_minimal_internal_la-span.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtcmalloc_minimal_internal_la_CXXFLAGS) $(CXXFLAGS) -c -o src/libtcmalloc_minimal_internal_la-span.lo `test -f 'src/span.cc' || echo '$(srcdir)/'`src/span.cc

src/libtcmalloc_minimal_internal_la-stack_trace_table.lo: src/stack_trace_table.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtcmalloc_minimal_internal_la_CXXFLAGS) $(CXXFLAGS) -MT src/libtcmalloc_minimal_internal_la-stack_trace_table.lo -MD -MP -MF src/$(DEPDIR)/libtcmalloc_minimal_internal_la-stack_trace_table.Tpo -c -o src/libtcmalloc_minimal_internal_la-stack_trace_table.lo `test -f 'src/stack_trace_table.cc' || echo '$(srcdir)/'`src/stack_trace_table.cc
	$(AM_V_at)$(am__mv) src/$(DEPDIR)/libtcmalloc_minimal_internal_la-stack_trace_table.Tpo src/$(DEPDIR)/libtcmalloc_minimal_internal_la-stack_trace_table.Plo
#	$(AM_V_CXX)source='src/stack_trace_table.cc' object='src/libtcmalloc_minimal_internal_la-stack_trace_table.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtcmalloc_minimal_internal_la_CXXFLAGS) $(CXXFLAGS) -c -o src/libtcmalloc_minimal_internal_la-stack_trace_table.lo `test -f 'src/stack_trace_table.cc' || echo '$(srcdir)/'`src/stack_trace_table.cc

src/libtcmalloc_minimal_internal_la-static_vars.lo: src/static_vars.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtcmalloc_minimal_internal_la_CXXFLAGS) $(CXXFLAGS) -MT src/libtcmalloc_minimal_internal_la-static_vars.lo -MD -MP -MF src/$(DEPDIR)/libtcmalloc_minimal_internal_la-static_vars.Tpo -c -o src/libtcmalloc_minimal_internal_la-static_vars.lo `test -f 'src/static_vars.cc' || echo '$(srcdir)/'`src/static_vars.cc
	$(AM_V_at)$(am__mv) src/$(DEPDIR)/libtcmalloc_minimal_internal_la-static_vars.Tpo src/$(DEPDIR)/libtcmalloc_minimal_internal_la-static_vars.Plo
#	$(AM_V_CXX)source='src/static_vars.cc' object='src/libtcmalloc_minimal_internal_la-static_vars.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtcmalloc_minimal_internal_la_CXXFLAGS) $(CXXFLAGS) -c -o src/libtcmalloc_minimal_internal_la-static_vars.lo `test -f 'src/static_vars.cc' || echo '$(srcdir)/'`src/static_vars.cc

src/libtcmalloc_minimal_internal_la-symbolize.lo: src/symbolize.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtcmalloc_minimal_internal_la_CXXFLAGS) $(CXXFLAGS) -MT src/libtcmalloc_minimal_internal_la-symbolize.lo -MD -MP -MF src/$(DEPDIR)/libtcmalloc_minimal_internal_la-symbolize.Tpo -c -o src/libtcmalloc_minimal_internal_la-symbolize.lo `test -f 'src/symbolize.cc' || echo '$(srcdir)/'`src/symbolize.cc
	$(AM_V_at)$(am__mv) src/$(DEPDIR)/libtcmalloc_minimal_internal_la-symbolize.Tpo src/$(DEPDIR)/libtcmalloc_minimal_internal_la-symbolize.Plo
#	$(AM_V_CXX)source='src/symbolize.cc' object='src/libtcmalloc_minimal_internal_la-symbolize.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtcmalloc_minimal_internal_la_CXXFLAGS) $(CXXFLAGS) -c -o src/libtcmalloc_minimal_internal_la-symbolize.lo `test -f 'src/symbolize.cc' || echo '$(srcdir)/'`src/symbolize.cc

src/libtcmalloc_minimal_internal_la-thread_cache.lo: src/thread_cache.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtcmalloc_minimal_internal_la_CXXFLAGS) $(CXXFLAGS) -MT src/libtcmalloc_minimal_internal_la-thread_cache.lo -MD -MP -MF src/$(DEPDIR)/libtcmalloc_minimal_internal_la-thread_cache.Tpo -c -o src/libtcmalloc_minimal_internal_la-thread_cache.lo `test -f 'src/thread_cache.cc' || echo '$(srcdir)/'`src/thread_cache.cc
	$(AM_V_at)$(am__mv) src/$(DEPDIR)/libtcmalloc_minimal_internal_la-thread_cache.Tpo src/$(DEPDIR)/libtcmalloc_minimal_internal_la-thread_cache.Plo
#	$(AM_V_CXX)source='src/thread_cache.cc' object='src/libtcmalloc_minimal_internal_la-thread_cache.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtcmalloc_minimal_internal_la_CXXFLAGS) $(CXXFLAGS) -c -o src/libtcmalloc_minimal_internal_la-thread_cache.lo `test -f 'src/thread_cache.cc' || echo '$(srcdir)/'`src/thread_cache.cc

src/libtcmalloc_minimal_internal_la-malloc_hook.lo: src/malloc_hook.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtcmalloc_minimal_internal_la_CXXFLAGS) $(CXXFLAGS) -MT src/libtcmalloc_minimal_internal_la-malloc_hook.lo -MD -MP -MF src/$(DEPDIR)/libtcmalloc_minimal_internal_la-malloc_hook.Tpo -c -o src/libtcmalloc_minimal_internal_la-malloc_hook.lo `test -f 'src/malloc_hook.cc' || echo '$(srcdir)/'`src/malloc_hook.cc
	$(AM_V_at)$(am__mv) src/$(DEPDIR)/libtcmalloc_minimal_internal_la-malloc_hook.Tpo src/$(DEPDIR)/libtcmalloc_minimal_internal_la-malloc_hook.Plo
#	$(AM_V_CXX)source='src/malloc_hook.cc' object='src/libtcmalloc_minimal_internal_la-malloc_hook.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtcmalloc_minimal_internal_la_CXXFLAGS) $(CXXFLAGS) -c -o src/libtcmalloc_minimal_internal_la-malloc_hook.lo `test -f 'src/malloc_hook.cc' || echo '$(srcdir)/'`src/malloc_hook.cc

src/libtcmalloc_minimal_internal_la-malloc_extension.lo: src/malloc_extension.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtcmalloc_minimal_internal_la_CXXFLAGS) $(CXXFLAGS) -MT src/libtcmalloc_minimal_internal_la-malloc_extension.lo -MD -MP -MF src/$(DEPDIR)/libtcmalloc_minimal_internal_la-malloc_extension.Tpo -c -o src/libtcmalloc_minimal_internal_la-malloc_extension.lo `test -f 'src/malloc_extension.cc' || echo '$(srcdir)/'`src/malloc_extension.cc
	$(AM_V_at)$(am__mv) src/$(DEPDIR)/libtcmalloc_minimal_internal_la-malloc_extension.Tpo src/$(DEPDIR)/libtcmalloc_minimal_internal_la-malloc_extension.Plo
#	$(AM_V_CXX)source='src/malloc_extension.cc' object='src/libtcmalloc_minimal_internal_la-malloc_extension.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtcmalloc_minimal_internal_la_CXXFLAGS) $(CXXFLAGS) -c -o src/libtcmalloc_minimal_internal_la-malloc_extension.lo `test -f 'src/malloc_extension.cc' || echo '$(srcdir)/'`src/malloc_extension.cc

src/tests/addressmap_unittest-addressmap_unittest.o: src/tests/addressmap_unittest.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(addressmap_unittest_CXXFLAGS) $(CXXFLAGS) -MT src/tests/addressmap_unittest-addressmap_unittest.o -MD -MP -MF src/tests/$(DEPDIR)/addressmap_unittest-addressmap_unittest.Tpo -c -o src/tests/addressmap_unittest-addressmap_unittest.o `test -f 'src/tests/addressmap_unittest.cc' || echo '$(srcdir)/'`src/tests/addressmap_unittest.cc
	$(AM_V_at)$(am__mv) src/tests/$(DEPDIR)/addressmap_unittest-addressmap_unittest.Tpo src/tests/$(DEPDIR)/addressmap_unittest-addressmap_unittest.Po
#	$(AM_V_CXX)source='src/tests/addressmap_unittest.cc' object='src/tests/addressmap_unittest-addressmap_unittest.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(addressmap_unittest_CXXFLAGS) $(CXXFLAGS) -c -o src/tests/addressmap_unittest-addressmap_unittest.o `test -f 'src/tests/addressmap_unittest.cc' || echo '$(srcdir)/'`src/tests/addressmap_unittest.cc

src/tests/addressmap_unittest-addressmap_unittest.obj: src/tests/addressmap_unittest.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(addressmap_unittest_CXXFLAGS) $(CXXFLAGS) -MT src/tests/addressmap_unittest-addressmap_unittest.obj -MD -MP -MF src/tests/$(DEPDIR)/addressmap_unittest-addressmap_unittest.Tpo -c -o src/tests/addressmap_unittest-addressmap_unittest.obj `if test -f 'src/tests/addressmap_unittest.cc'; then $(CYGPATH_W) 'src/tests/addressmap_unittest.cc'; else $(CYGPATH_W) '$(srcdir)/src/tests/addressmap_unittest.cc'; fi`
	$(AM_V_at)$(am__mv) src/tests/$(DEPDIR)/addressmap_unittest-addressmap_unittest.Tpo src/tests/$(DEPDIR)/addressmap_unittest-addressmap_unittest.Po
#	$(AM_V_CXX)source='src/tests/addressmap_unittest.cc' object='src/tests/addressmap_unittest-addressmap_unittest.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(addressmap_unittest_CXXFLAGS) $(CXXFLAGS) -c -o src/tests/addressmap_unittest-addressmap_unittest.obj `if test -f 'src/tests/addressmap_unittest.cc'; then $(CYGPATH_W) 'src/tests/addressmap_unittest.cc'; else $(CYGPATH_W) '$(srcdir)/src/tests/addressmap_unittest.cc'; fi`

src/windows/addressmap_unittest-port.o: src/windows/port.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(addressmap_unittest_CXXFLAGS) $(CXXFLAGS) -MT src/windows/addressmap_unittest-port.o -MD -MP -MF src/windows/$(DEPDIR)/addressmap_unittest-port.Tpo -c -o src/windows/addressmap_unittest-port.o `test -f 'src/windows/port.cc' || echo '$(srcdir)/'`src/windows/port.cc
	$(AM_V_at)$(am__mv) src/windows/$(DEPDIR)/addressmap_unittest-port.Tpo src/windows/$(DEPDIR)/addressmap_unittest-port.Po
#	$(AM_V_CXX)source='src/windows/port.cc' object='src/windows/addressmap_unittest-port.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(addressmap_unittest_CXXFLAGS) $(CXXFLAGS) -c -o src/windows/addressmap_unittest-port.o `test -f 'src/windows/port.cc' || echo '$(srcdir)/'`src/windows/port.cc

src/windows/addressmap_unittest-port.obj: src/windows/port.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(addressmap_unittest_CXXFLAGS) $(CXXFLAGS) -MT src/windows/addressmap_unittest-port.obj -MD -MP -MF src/windows/$(DEPDIR)/addressmap_unittest-port.Tpo -c -o src/windows/addressmap_unittest-port.obj `if test -f 'src/windows/port.cc'; then $(CYGPATH_W) 'src/windows/port.cc'; else $(CYGPATH_W) '$(srcdir)/src/windows/port.cc'; fi`
	$(AM_V_at)$(am__mv) src/windows/$(DEPDIR)/addressmap_unittest-port.Tpo src/windows/$(DEPDIR)/addressmap_unittest-port.Po
#	$(AM_V_CXX)source='src/windows/port.cc' object='src/windows/addressmap_unittest-port.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(addressmap_unittest_CXXFLAGS) $(CXXFLAGS) -c -o src/windows/addressmap_unittest-port.obj `if test -f 'src/windows/port.cc'; then $(CYGPATH_W) 'src/windows/port.cc'; else $(CYGPATH_W) '$(srcdir)/src/windows/port.cc'; fi`

benchmark/binary_trees-binary_trees.o: benchmark/binary_trees.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(binary_trees_CXXFLAGS) $(CXXFLAGS) -MT benchmark/binary_trees-binary_trees.o -MD -MP -MF benchmark/$(DEPDIR)/binary_trees-binary_trees.Tpo -c -o benchmark/binary_trees-binary_trees.o `test -f 'benchmark/binary_trees.cc' || echo '$(srcdir)/'`benchmark/binary_trees.cc
	$(AM_V_at)$(am__mv) benchmark/$(DEPDIR)/binary_trees-binary_trees.Tpo benchmark/$(DEPDIR)/binary_trees-binary_trees.Po
#	$(AM_V_CXX)source='benchmark/binary_trees.cc' object='benchmark/binary_trees-binary_trees.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(binary_trees_CXXFLAGS) $(CXXFLAGS) -c -o benchmark/binary_trees-binary_trees.o `test -f 'benchmark/binary_trees.cc' || echo '$(srcdir)/'`benchmark/binary_trees.cc

benchmark/binary_trees-binary_trees.obj: benchmark/binary_trees.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(binary_trees_CXXFLAGS) $(CXXFLAGS) -MT benchmark/binary_trees-binary_trees.obj -MD -MP -MF benchmark/$(DEPDIR)/binary_trees-binary_trees.Tpo -c -o benchmark/binary_trees-binary_trees.obj `if test -f 'benchmark/binary_trees.cc'; then $(CYGPATH_W) 'benchmark/binary_trees.cc'; else $(CYGPATH_W) '$(srcdir)/benchmark/binary_trees.cc'; fi`
	$(AM_V_at)$(am__mv) benchmark/$(DEPDIR)/binary_trees-binary_trees.Tpo benchmark/$(DEPDIR)/binary_trees-binary_trees.Po
#	$(AM_V_CXX)source='benchmark/binary_trees.cc' object='benchmark/binary_trees-binary_trees.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(binary_trees_CXXFLAGS) $(CXXFLAGS) -c -o benchmark/binary_trees-binary_trees.obj `if test -f 'benchmark/binary_trees.cc'; then $(CYGPATH_W) 'benchmark/binary_trees.cc'; else $(CYGPATH_W) '$(srcdir)/benchmark/binary_trees.cc'; fi`

benchmark/binary_trees_shared-binary_trees.o: benchmark/binary_trees.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(binary_trees_shared_CXXFLAGS) $(CXXFLAGS) -MT benchmark/binary_trees_shared-binary_trees.o -MD -MP -MF benchmark/$(DEPDIR)/binary_trees_shared-binary_trees.Tpo -c -o benchmark/binary_trees_shared-binary_trees.o `test -f 'benchmark/binary_trees.cc' || echo '$(srcdir)/'`benchmark/binary_trees.cc
	$(AM_V_at)$(am__mv) benchmark/$(DEPDIR)/binary_trees_shared-binary_trees.Tpo benchmark/$(DEPDIR)/binary_trees_shared-binary_trees.Po
#	$(AM_V_CXX)source='benchmark/binary_trees.cc' object='benchmark/binary_trees_shared-binary_trees.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(binary_trees_shared_CXXFLAGS) $(CXXFLAGS) -c -o benchmark/binary_trees_shared-binary_trees.o `test -f 'benchmark/binary_trees.cc' || echo '$(srcdir)/'`benchmark/binary_trees.cc

benchmark/binary_trees_shared-binary_trees.obj: benchmark/binary_trees.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(binary_trees_shared_CXXFLAGS) $(CXXFLAGS) -MT benchmark/binary_trees_shared-binary_trees.obj -MD -MP -MF benchmark/$(DEPDIR)/binary_trees_shared-binary_trees.Tpo -c -o benchmark/binary_trees_shared-binary_trees.obj `if test -f 'benchmark/binary_trees.cc'; then $(CYGPATH_W) 'benchmark/binary_trees.cc'; else $(CYGPATH_W) '$(srcdir)/benchmark/binary_trees.cc'; fi`
	$(AM_V_at)$(am__mv) benchmark/$(DEPDIR)/binary_trees_shared-binary_trees.Tpo benchmark/$(DEPDIR)/binary_trees_shared-binary_trees.Po
#	$(AM_V_CXX)source='benchmark/binary_trees.cc' object='benchmark/binary_trees_shared-binary_trees.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(binary_trees_shared_CXXFLAGS) $(CXXFLAGS) -c -o benchmark/binary_trees_shared-binary_trees.obj `if test -f 'benchmark/binary_trees.cc'; then $(CYGPATH_W) 'benchmark/binary_trees.cc'; else $(CYGPATH_W) '$(srcdir)/benchmark/binary_trees.cc'; fi`

src/tests/current_allocated_bytes_test-current_allocated_bytes_test.o: src/tests/current_allocated_bytes_test.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(current_allocated_bytes_test_CXXFLAGS) $(CXXFLAGS) -MT src/tests/current_allocated_bytes_test-current_allocated_bytes_test.o -MD -MP -MF src/tests/$(DEPDIR)/current_allocated_bytes_test-current_allocated_bytes_test.Tpo -c -o src/tests/current_allocated_bytes_test-current_allocated_bytes_test.o `test -f 'src/tests/current_allocated_bytes_test.cc' || echo '$(srcdir)/'`src/tests/current_allocated_bytes_test.cc
	$(AM_V_at)$(am__mv) src/tests/$(DEPDIR)/current_allocated_bytes_test-current_allocated_bytes_test.Tpo src/tests/$(DEPDIR)/current_allocated_bytes_test-current_allocated_bytes_test.Po
#	$(AM_V_CXX)source='src/tests/current_allocated_bytes_test.cc' object='src/tests/current_allocated_bytes_test-current_allocated_bytes_test.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(current_allocated_bytes_test_CXXFLAGS) $(CXXFLAGS) -c -o src/tests/current_allocated_bytes_test-current_allocated_bytes_test.o `test -f 'src/tests/current_allocated_bytes_test.cc' || echo '$(srcdir)/'`src/tests/current_allocated_bytes_test.cc

src/tests/current_allocated_bytes_test-current_allocated_bytes_test.obj: src/tests/current_allocated_bytes_test.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(current_allocated_bytes_test_CXXFLAGS) $(CXXFLAGS) -MT src/tests/current_allocated_bytes_test-current_allocated_bytes_test.obj -MD -MP -MF src/tests/$(DEPDIR)/current_allocated_bytes_test-current_allocated_bytes_test.Tpo -c -o src/tests/current_allocated_bytes_test-current_allocated_bytes_test.obj `if test -f 'src/tests/current_allocated_bytes_test.cc'; then $(CYGPATH_W) 'src/tests/current_allocated_bytes_test.cc'; else $(CYGPATH_W) '$(srcdir)/src/tests/current_allocated_bytes_test.cc'; fi`
	$(AM_V_at)$(am__mv) src/tests/$(DEPDIR)/current_allocated_bytes_test-current_allocated_bytes_test.Tpo src/tests/$(DEPDIR)/current_allocated_bytes_test-current_allocated_bytes_test.Po
#	$(AM_V_CXX)source='src/tests/current_allocated_bytes_test.cc' object='src/tests/current_allocated_bytes_test-current_allocated_bytes_test.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(current_allocated_bytes_test_CXXFLAGS) $(CXXFLAGS) -c -o src/tests/current_allocated_bytes_test-current_allocated_bytes_test.obj `if test -f 'src/tests/current_allocated_bytes_test.cc'; then $(CYGPATH_W) 'src/tests/current_allocated_bytes_test.cc'; else $(CYGPATH_W) '$(srcdir)/src/tests/current_allocated_bytes_test.cc'; fi`

src/tests/debugallocation_test-debugallocation_test.o: src/tests/debugallocation_test.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(debugallocation_test_CXXFLAGS) $(CXXFLAGS) -MT src/tests/debugallocation_test-debugallocation_test.o -MD -MP -MF src/tests/$(DEPDIR)/debugallocation_test-debugallocation_test.Tpo -c -o src/tests/debugallocation_test-debugallocation_test.o `test -f 'src/tests/debugallocation_test.cc' || echo '$(srcdir)/'`src/tests/debugallocation_test.cc
	$(AM_V_at)$(am__mv) src/tests/$(DEPDIR)/debugallocation_test-debugallocation_test.Tpo src/tests/$(DEPDIR)/debugallocation_test-debugallocation_test.Po
#	$(AM_V_CXX)source='src/tests/debugallocation_test.cc' object='src/tests/debugallocation_test-debugallocation_test.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(debugallocation_test_CXXFLAGS) $(CXXFLAGS) -c -o src/tests/debugallocation_test-debugallocation_test.o `test -f 'src/tests/debugallocation_test.cc' || echo '$(srcdir)/'`src/tests/debugallocation_test.cc

src/tests/debugallocation_test-debugallocation_test.obj: src/tests/debugallocation_test.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(debugallocation_test_CXXFLAGS) $(CXXFLAGS) -MT src/tests/debugallocation_test-debugallocation_test.obj -MD -MP -MF src/tests/$(DEPDIR)/debugallocation_test-debugallocation_test.Tpo -c -o src/tests/debugallocation_test-debugallocation_test.obj `if test -f 'src/tests/debugallocation_test.cc'; then $(CYGPATH_W) 'src/tests/debugallocation_test.cc'; else $(CYGPATH_W) '$(srcdir)/src/tests/debugallocation_test.cc'; fi`
	$(AM_V_at)$(am__mv) src/tests/$(DEPDIR)/debugallocation_test-debugallocation_test.Tpo src/tests/$(DEPDIR)/debugallocation_test-debugallocation_test.Po
#	$(AM_V_CXX)source='src/tests/debugallocation_test.cc' object='src/tests/debugallocation_test-debugallocation_test.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(debugallocation_test_CXXFLAGS) $(CXXFLAGS) -c -o src/tests/debugallocation_test-debugallocation_test.obj `if test -f 'src/tests/debugallocation_test.cc'; then $(CYGPATH_W) 'src/tests/debugallocation_test.cc'; else $(CYGPATH_W) '$(srcdir)/src/tests/debugallocation_test.cc'; fi`

src/tests/frag_unittest-frag_unittest.o: src/tests/frag_unittest.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(frag_unittest_CXXFLAGS) $(CXXFLAGS) -MT src/tests/frag_unittest-frag_unittest.o -MD -MP -MF src/tests/$(DEPDIR)/frag_unittest-frag_unittest.Tpo -c -o src/tests/frag_unittest-frag_unittest.o `test -f 'src/tests/frag_unittest.cc' || echo '$(srcdir)/'`src/tests/frag_unittest.cc
	$(AM_V_at)$(am__mv) src/tests/$(DEPDIR)/frag_unittest-frag_unittest.Tpo src/tests/$(DEPDIR)/frag_unittest-frag_unittest.Po
#	$(AM_V_CXX)source='src/tests/frag_unittest.cc' object='src/tests/frag_unittest-frag_unittest.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(frag_unittest_CXXFLAGS) $(CXXFLAGS) -c -o src/tests/frag_unittest-frag_unittest.o `test -f 'src/tests/frag_unittest.cc' || echo '$(srcdir)/'`src/tests/frag_unittest.cc

src/tests/frag_unittest-frag_unittest.obj: src/tests/frag_unittest.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(frag_unittest_CXXFLAGS) $(CXXFLAGS) -MT src/tests/frag_unittest-frag_unittest.obj -MD -MP -MF src/tests/$(DEPDIR)/frag_unittest-frag_unittest.Tpo -c -o src/tests/frag_unittest-frag_unittest.obj `if test -f 'src/tests/frag_unittest.cc'; then $(CYGPATH_W) 'src/tests/frag_unittest.cc'; else $(CYGPATH_W) '$(srcdir)/src/tests/frag_unittest.cc'; fi`
	$(AM_V_at)$(am__mv) src/tests/$(DEPDIR)/frag_unittest-frag_unittest.Tpo src/tests/$(DEPDIR)/frag_unittest-frag_unittest.Po
#	$(AM_V_CXX)source='src/tests/frag_unittest.cc' object='src/tests/frag_unittest-frag_unittest.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(frag_unittest_CXXFLAGS) $(CXXFLAGS) -c -o src/tests/frag_unittest-frag_unittest.obj `if test -f 'src/tests/frag_unittest.cc'; then $(CYGPATH_W) 'src/tests/frag_unittest.cc'; else $(CYGPATH_W) '$(srcdir)/src/tests/frag_unittest.cc'; fi`

src/tests/heap_checker_debug_unittest-heap-checker_unittest.o: src/tests/heap-checker_unittest.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(heap_checker_debug_unittest_CXXFLAGS) $(CXXFLAGS) -MT src/tests/heap_checker_debug_unittest-heap-checker_unittest.o -MD -MP -MF src/tests/$(DEPDIR)/heap_checker_debug_unittest-heap-checker_unittest.Tpo -c -o src/tests/heap_checker_debug_unittest-heap-checker_unittest.o `test -f 'src/tests/heap-checker_unittest.cc' || echo '$(srcdir)/'`src/tests/heap-checker_unittest.cc
	$(AM_V_at)$(am__mv) src/tests/$(DEPDIR)/heap_checker_debug_unittest-heap-checker_unittest.Tpo src/tests/$(DEPDIR)/heap_checker_debug_unittest-heap-checker_unittest.Po
#	$(AM_V_CXX)source='src/tests/heap-checker_unittest.cc' object='src/tests/heap_checker_debug_unittest-heap-checker_unittest.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(heap_checker_debug_unittest_CXXFLAGS) $(CXXFLAGS) -c -o src/tests/heap_checker_debug_unittest-heap-checker_unittest.o `test -f 'src/tests/heap-checker_unittest.cc' || echo '$(srcdir)/'`src/tests/heap-checker_unittest.cc

src/tests/heap_checker_debug_unittest-heap-checker_unittest.obj: src/tests/heap-checker_unittest.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(heap_checker_debug_unittest_CXXFLAGS) $(CXXFLAGS) -MT src/tests/heap_checker_debug_unittest-heap-checker_unittest.obj -MD -MP -MF src/tests/$(DEPDIR)/heap_checker_debug_unittest-heap-checker_unittest.Tpo -c -o src/tests/heap_checker_debug_unittest-heap-checker_unittest.obj `if test -f 'src/tests/heap-checker_unittest.cc'; then $(CYGPATH_W) 'src/tests/heap-checker_unittest.cc'; else $(CYGPATH_W) '$(srcdir)/src/tests/heap-checker_unittest.cc'; fi`
	$(AM_V_at)$(am__mv) src/tests/$(DEPDIR)/heap_checker_debug_unittest-heap-checker_unittest.Tpo src/tests/$(DEPDIR)/heap_checker_debug_unittest-heap-checker_unittest.Po
#	$(AM_V_CXX)source='src/tests/heap-checker_unittest.cc' object='src/tests/heap_checker_debug_unittest-heap-checker_unittest.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(heap_checker_debug_unittest_CXXFLAGS) $(CXXFLAGS) -c -o src/tests/heap_checker_debug_unittest-heap-checker_unittest.obj `if test -f 'src/tests/heap-checker_unittest.cc'; then $(CYGPATH_W) 'src/tests/heap-checker_unittest.cc'; else $(CYGPATH_W) '$(srcdir)/src/tests/heap-checker_unittest.cc'; fi`

src/tests/heap_checker_unittest-heap-checker_unittest.o: src/tests/heap-checker_unittest.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(heap_checker_unittest_CXXFLAGS) $(CXXFLAGS) -MT src/tests/heap_checker_unittest-heap-checker_unittest.o -MD -MP -MF src/tests/$(DEPDIR)/heap_checker_unittest-heap-checker_unittest.Tpo -c -o src/tests/heap_checker_unittest-heap-checker_unittest.o `test -f 'src/tests/heap-checker_unittest.cc' || echo '$(srcdir)/'`src/tests/heap-checker_unittest.cc
	$(AM_V_at)$(am__mv) src/tests/$(DEPDIR)/heap_checker_unittest-heap-checker_unittest.Tpo src/tests/$(DEPDIR)/heap_checker_unittest-heap-checker_unittest.Po
#	$(AM_V_CXX)source='src/tests/heap-checker_unittest.cc' object='src/tests/heap_checker_unittest-heap-checker_unittest.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(heap_checker_unittest_CXXFLAGS) $(CXXFLAGS) -c -o src/tests/heap_checker_unittest-heap-checker_unittest.o `test -f 'src/tests/heap-checker_unittest.cc' || echo '$(srcdir)/'`src/tests/heap-checker_unittest.cc

src/tests/heap_checker_unittest-heap-checker_unittest.obj: src/tests/heap-checker_unittest.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(heap_checker_unittest_CXXFLAGS) $(CXXFLAGS) -MT src/tests/heap_checker_unittest-heap-checker_unittest.obj -MD -MP -MF src/tests/$(DEPDIR)/heap_checker_unittest-heap-checker_unittest.Tpo -c -o src/tests/heap_checker_unittest-heap-checker_unittest.obj `if test -f 'src/tests/heap-checker_unittest.cc'; then $(CYGPATH_W) 'src/tests/heap-checker_unittest.cc'; else $(CYGPATH_W) '$(srcdir)/src/tests/heap-checker_unittest.cc'; fi`
	$(AM_V_at)$(am__mv) src/tests/$(DEPDIR)/heap_checker_unittest-heap-checker_unittest.Tpo src/tests/$(DEPDIR)/heap_checker_unittest-heap-checker_unittest.Po
#	$(AM_V_CXX)source='src/tests/heap-checker_unittest.cc' object='src/tests/heap_checker_unittest-heap-checker_unittest.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(heap_checker_unittest_CXXFLAGS) $(CXXFLAGS) -c -o src/tests/heap_checker_unittest-heap-checker_unittest.obj `if test -f 'src/tests/heap-checker_unittest.cc'; then $(CYGPATH_W) 'src/tests/heap-checker_unittest.cc'; else $(CYGPATH_W) '$(srcdir)/src/tests/heap-checker_unittest.cc'; fi`

src/tests/heap_profiler_debug_unittest-heap-profiler_unittest.o: src/tests/heap-profiler_unittest.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(heap_profiler_debug_unittest_CXXFLAGS) $(CXXFLAGS) -MT src/tests/heap_profiler_debug_unittest-heap-profiler_unittest.o -MD -MP -MF src/tests/$(DEPDIR)/heap_profiler_debug_unittest-heap-profiler_unittest.Tpo -c -o src/tests/heap_profiler_debug_unittest-heap-profiler_unittest.o `test -f 'src/tests/heap-profiler_unittest.cc' || echo '$(srcdir)/'`src/tests/heap-profiler_unittest.cc
	$(AM_V_at)$(am__mv) src/tests/$(DEPDIR)/heap_profiler_debug_unittest-heap-profiler_unittest.Tpo src/tests/$(DEPDIR)/heap_profiler_debug_unittest-heap-profiler_unittest.Po
#	$(AM_V_CXX)source='src/tests/heap-profiler_unittest.cc' object='src/tests/heap_profiler_debug_unittest-heap-profiler_unittest.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(heap_profiler_debug_unittest_CXXFLAGS) $(CXXFLAGS) -c -o src/tests/heap_profiler_debug_unittest-heap-profiler_unittest.o `test -f 'src/tests/heap-profiler_unittest.cc' || echo '$(srcdir)/'`src/tests/heap-profiler_unittest.cc

src/tests/heap_profiler_debug_unittest-heap-profiler_unittest.obj: src/tests/heap-profiler_unittest.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(heap_profiler_debug_unittest_CXXFLAGS) $(CXXFLAGS) -MT src/tests/heap_profiler_debug_unittest-heap-profiler_unittest.obj -MD -MP -MF src/tests/$(DEPDIR)/heap_profiler_debug_unittest-heap-profiler_unittest.Tpo -c -o src/tests/heap_profiler_debug_unittest-heap-profiler_unittest.obj `if test -f 'src/tests/heap-profiler_unittest.cc'; then $(CYGPATH_W) 'src/tests/heap-profiler_unittest.cc'; else $(CYGPATH_W) '$(srcdir)/src/tests/heap-profiler_unittest.cc'; fi`
	$(AM_V_at)$(am__mv) src/tests/$(DEPDIR)/heap_profiler_debug_unittest-heap-profiler_unittest.Tpo src/tests/$(DEPDIR)/heap_profiler_debug_unittest-heap-profiler_unittest.Po
#	$(AM_V_CXX)source='src/tests/heap-profiler_unittest.cc' object='src/tests/heap_profiler_debug_unittest-heap-profiler_unittest.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(heap_profiler_debug_unittest_CXXFLAGS) $(CXXFLAGS) -c -o src/tests/heap_profiler_debug_unittest-heap-profiler_unittest.obj `if test -f 'src/tests/heap-profiler_unittest.cc'; then $(CYGPATH_W) 'src/tests/heap-profiler_unittest.cc'; else $(CYGPATH_W) '$(srcdir)/src/tests/heap-profiler_unittest.cc'; fi`

src/tests/heap_profiler_unittest-heap-profiler_unittest.o: src/tests/heap-profiler_unittest.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(heap_profiler_unittest_CXXFLAGS) $(CXXFLAGS) -MT src/tests/heap_profiler_unittest-heap-profiler_unittest.o -MD -MP -MF src/tests/$(DEPDIR)/heap_profiler_unittest-heap-profiler_unittest.Tpo -c -o src/tests/heap_profiler_unittest-heap-profiler_unittest.o `test -f 'src/tests/heap-profiler_unittest.cc' || echo '$(srcdir)/'`src/tests/heap-profiler_unittest.cc
	$(AM_V_at)$(am__mv) src/tests/$(DEPDIR)/heap_profiler_unittest-heap-profiler_unittest.Tpo src/tests/$(DEPDIR)/heap_profiler_unittest-heap-profiler_unittest.Po
#	$(AM_V_CXX)source='src/tests/heap-profiler_unittest.cc' object='src/tests/heap_profiler_unittest-heap-profiler_unittest.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(heap_profiler_unittest_CXXFLAGS) $(CXXFLAGS) -c -o src/tests/heap_profiler_unittest-heap-profiler_unittest.o `test -f 'src/tests/heap-profiler_unittest.cc' || echo '$(srcdir)/'`src/tests/heap-profiler_unittest.cc

src/tests/heap_profiler_unittest-heap-profiler_unittest.obj: src/tests/heap-profiler_unittest.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(heap_profiler_unittest_CXXFLAGS) $(CXXFLAGS) -MT src/tests/heap_profiler_unittest-heap-profiler_unittest.obj -MD -MP -MF src/tests/$(DEPDIR)/heap_profiler_unittest-heap-profiler_unittest.Tpo -c -o src/tests/heap_profiler_unittest-heap-profiler_unittest.obj `if test -f 'src/tests/heap-profiler_unittest.cc'; then $(CYGPATH_W) 'src/tests/heap-profiler_unittest.cc'; else $(CYGPATH_W) '$(srcdir)/src/tests/heap-profiler_unittest.cc'; fi`
	$(AM_V_at)$(am__mv) src/tests/$(DEPDIR)/heap_profiler_unittest-heap-profiler_unittest.Tpo src/tests/$(DEPDIR)/heap_profiler_unittest-heap-profiler_unittest.Po
#	$(AM_V_CXX)source='src/tests/heap-profiler_unittest.cc' object='src/tests/heap_profiler_unittest-heap-profiler_unittest.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(heap_profiler_unittest_CXXFLAGS) $(CXXFLAGS) -c -o src/tests/heap_profiler_unittest-heap-profiler_unittest.obj `if test -f 'src/tests/heap-profiler_unittest.cc'; then $(CYGPATH_W) 'src/tests/heap-profiler_unittest.cc'; else $(CYGPATH_W) '$(srcdir)/src/tests/heap-profiler_unittest.cc'; fi`

src/base/low_level_alloc_unittest-low_level_alloc.o: src/base/low_level_alloc.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(low_level_alloc_unittest_CXXFLAGS) $(CXXFLAGS) -MT src/base/low_level_alloc_unittest-low_level_alloc.o -MD -MP -MF src/base/$(DEPDIR)/low_level_alloc_unittest-low_level_alloc.Tpo -c -o src/base/low_level_alloc_unittest-low_level_alloc.o `test -f 'src/base/low_level_alloc.cc' || echo '$(srcdir)/'`src/base/low_level_alloc.cc
	$(AM_V_at)$(am__mv) src/base/$(DEPDIR)/low_level_alloc_unittest-low_level_alloc.Tpo src/base/$(DEPDIR)/low_level_alloc_unittest-low_level_alloc.Po
#	$(AM_V_CXX)source='src/base/low_level_alloc.cc' object='src/base/low_level_alloc_unittest-low_level_alloc.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(low_level_alloc_unittest_CXXFLAGS) $(CXXFLAGS) -c -o src/base/low_level_alloc_unittest-low_level_alloc.o `test -f 'src/base/low_level_alloc.cc' || echo '$(srcdir)/'`src/base/low_level_alloc.cc

src/base/low_level_alloc_unittest-low_level_alloc.obj: src/base/low_level_alloc.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(low_level_alloc_unittest_CXXFLAGS) $(CXXFLAGS) -MT src/base/low_level_alloc_unittest-low_level_alloc.obj -MD -MP -MF src/base/$(DEPDIR)/low_level_alloc_unittest-low_level_alloc.Tpo -c -o src/base/low_level_alloc_unittest-low_level_alloc.obj `if test -f 'src/base/low_level_alloc.cc'; then $(CYGPATH_W) 'src/base/low_level_alloc.cc'; else $(CYGPATH_W) '$(srcdir)/src/base/low_level_alloc.cc'; fi`
	$(AM_V_at)$(am__mv) src/base/$(DEPDIR)/low_level_alloc_unittest-low_level_alloc.Tpo src/base/$(DEPDIR)/low_level_alloc_unittest-low_level_alloc.Po
#	$(AM_V_CXX)source='src/base/low_level_alloc.cc' object='src/base/low_level_alloc_unittest-low_level_alloc.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(low_level_alloc_unittest_CXXFLAGS) $(CXXFLAGS) -c -o src/base/low_level_alloc_unittest-low_level_alloc.obj `if test -f 'src/base/low_level_alloc.cc'; then $(CYGPATH_W) 'src/base/low_level_alloc.cc'; else $(CYGPATH_W) '$(srcdir)/src/base/low_level_alloc.cc'; fi`

src/low_level_alloc_unittest-malloc_hook.o: src/malloc_hook.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(low_level_alloc_unittest_CXXFLAGS) $(CXXFLAGS) -MT src/low_level_alloc_unittest-malloc_hook.o -MD -MP -MF src/$(DEPDIR)/low_level_alloc_unittest-malloc_hook.Tpo -c -o src/low_level_alloc_unittest-malloc_hook.o `test -f 'src/malloc_hook.cc' || echo '$(srcdir)/'`src/malloc_hook.cc
	$(AM_V_at)$(am__mv) src/$(DEPDIR)/low_level_alloc_unittest-malloc_hook.Tpo src/$(DEPDIR)/low_level_alloc_unittest-malloc_hook.Po
#	$(AM_V_CXX)source='src/malloc_hook.cc' object='src/low_level_alloc_unittest-malloc_hook.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(low_level_alloc_unittest_CXXFLAGS) $(CXXFLAGS) -c -o src/low_level_alloc_unittest-malloc_hook.o `test -f 'src/malloc_hook.cc' || echo '$(srcdir)/'`src/malloc_hook.cc

src/low_level_alloc_unittest-malloc_hook.obj: src/malloc_hook.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(low_level_alloc_unittest_CXXFLAGS) $(CXXFLAGS) -MT src/low_level_alloc_unittest-malloc_hook.obj -MD -MP -MF src/$(DEPDIR)/low_level_alloc_unittest-malloc_hook.Tpo -c -o src/low_level_alloc_unittest-malloc_hook.obj `if test -f 'src/malloc_hook.cc'; then $(CYGPATH_W) 'src/malloc_hook.cc'; else $(CYGPATH_W) '$(srcdir)/src/malloc_hook.cc'; fi`
	$(AM_V_at)$(am__mv) src/$(DEPDIR)/low_level_alloc_unittest-malloc_hook.Tpo src/$(DEPDIR)/low_level_alloc_unittest-malloc_hook.Po
#	$(AM_V_CXX)source='src/malloc_hook.cc' object='src/low_level_alloc_unittest-malloc_hook.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(low_level_alloc_unittest_CXXFLAGS) $(CXXFLAGS) -c -o src/low_level_alloc_unittest-malloc_hook.obj `if test -f 'src/malloc_hook.cc'; then $(CYGPATH_W) 'src/malloc_hook.cc'; else $(CYGPATH_W) '$(srcdir)/src/malloc_hook.cc'; fi`

src/tests/low_level_alloc_unittest-low_level_alloc_unittest.o: src/tests/low_level_alloc_unittest.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(low_level_alloc_unittest_CXXFLAGS) $(CXXFLAGS) -MT src/tests/low_level_alloc_unittest-low_level_alloc_unittest.o -MD -MP -MF src/tests/$(DEPDIR)/low_level_alloc_unittest-low_level_alloc_unittest.Tpo -c -o src/tests/low_level_alloc_unittest-low_level_alloc_unittest.o `test -f 'src/tests/low_level_alloc_unittest.cc' || echo '$(srcdir)/'`src/tests/low_level_alloc_unittest.cc
	$(AM_V_at)$(am__mv) src/tests/$(DEPDIR)/low_level_alloc_unittest-low_level_alloc_unittest.Tpo src/tests/$(DEPDIR)/low_level_alloc_unittest-low_level_alloc_unittest.Po
#	$(AM_V_CXX)source='src/tests/low_level_alloc_unittest.cc' object='src/tests/low_level_alloc_unittest-low_level_alloc_unittest.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(low_level_alloc_unittest_CXXFLAGS) $(CXXFLAGS) -c -o src/tests/low_level_alloc_unittest-low_level_alloc_unittest.o `test -f 'src/tests/low_level_alloc_unittest.cc' || echo '$(srcdir)/'`src/tests/low_level_alloc_unittest.cc

src/tests/low_level_alloc_unittest-low_level_alloc_unittest.obj: src/tests/low_level_alloc_unittest.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(low_level_alloc_unittest_CXXFLAGS) $(CXXFLAGS) -MT src/tests/low_level_alloc_unittest-low_level_alloc_unittest.obj -MD -MP -MF src/tests/$(DEPDIR)/low_level_alloc_unittest-low_level_alloc_unittest.Tpo -c -o src/tests/low_level_alloc_unittest-low_level_alloc_unittest.obj `if test -f 'src/tests/low_level_alloc_unittest.cc'; then $(CYGPATH_W) 'src/tests/low_level_alloc_unittest.cc'; else $(CYGPATH_W) '$(srcdir)/src/tests/low_level_alloc_unittest.cc'; fi`
	$(AM_V_at)$(am__mv) src/tests/$(DEPDIR)/low_level_alloc_unittest-low_level_alloc_unittest.Tpo src/tests/$(DEPDIR)/low_level_alloc_unittest-low_level_alloc_unittest.Po
#	$(AM_V_CXX)source='src/tests/low_level_alloc_unittest.cc' object='src/tests/low_level_alloc_unittest-low_level_alloc_unittest.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(low_level_alloc_unittest_CXXFLAGS) $(CXXFLAGS) -c -o src/tests/low_level_alloc_unittest-low_level_alloc_unittest.obj `if test -f 'src/tests/low_level_alloc_unittest.cc'; then $(CYGPATH_W) 'src/tests/low_level_alloc_unittest.cc'; else $(CYGPATH_W) '$(srcdir)/src/tests/low_level_alloc_unittest.cc'; fi`

benchmark/malloc_bench-malloc_bench.o: benchmark/malloc_bench.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(malloc_bench_CXXFLAGS) $(CXXFLAGS) -MT benchmark/malloc_bench-malloc_bench.o -MD -MP -MF benchmark/$(DEPDIR)/malloc_bench-malloc_bench.Tpo -c -o benchmark/malloc_bench-malloc_bench.o `test -f 'benchmark/malloc_bench.cc' || echo '$(srcdir)/'`benchmark/malloc_bench.cc
	$(AM_V_at)$(am__mv) benchmark/$(DEPDIR)/malloc_bench-malloc_bench.Tpo benchmark/$(DEPDIR)/malloc_bench-malloc_bench.Po
#	$(AM_V_CXX)source='benchmark/malloc_bench.cc' object='benchmark/malloc_bench-malloc_bench.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(malloc_bench_CXXFLAGS) $(CXXFLAGS) -c -o benchmark/malloc_bench-malloc_bench.o `test -f 'benchmark/malloc_bench.cc' || echo '$(srcdir)/'`benchmark/malloc_bench.cc

benchmark/malloc_bench-malloc_bench.obj: benchmark/malloc_bench.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(malloc_bench_CXXFLAGS) $(CXXFLAGS) -MT benchmark/malloc_bench-malloc_bench.obj -MD -MP -MF benchmark/$(DEPDIR)/malloc_bench-malloc_bench.Tpo -c -o benchmark/malloc_bench-malloc_bench.obj `if test -f 'benchmark/malloc_bench.cc'; then $(CYGPATH_W) 'benchmark/malloc_bench.cc'; else $(CYGPATH_W) '$(srcdir)/benchmark/malloc_bench.cc'; fi`
	$(AM_V_at)$(am__mv) benchmark/$(DEPDIR)/malloc_bench-malloc_bench.Tpo benchmark/$(DEPDIR)/malloc_bench-malloc_bench.Po
#	$(AM_V_CXX)source='benchmark/malloc_bench.cc' object='benchmark/malloc_bench-malloc_bench.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(malloc_bench_CXXFLAGS) $(CXXFLAGS) -c -o benchmark/malloc_bench-malloc_bench.obj `if test -f 'benchmark/malloc_bench.cc'; then $(CYGPATH_W) 'benchmark/malloc_bench.cc'; else $(CYGPATH_W) '$(srcdir)/benchmark/malloc_bench.cc'; fi`

benchmark/malloc_bench_shared-malloc_bench.o: benchmark/malloc_bench.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(malloc_bench_shared_CXXFLAGS) $(CXXFLAGS) -MT benchmark/malloc_bench_shared-malloc_bench.o -MD -MP -MF benchmark/$(DEPDIR)/malloc_bench_shared-malloc_bench.Tpo -c -o benchmark/malloc_bench_shared-malloc_bench.o `test -f 'benchmark/malloc_bench.cc' || echo '$(srcdir)/'`benchmark/malloc_bench.cc
	$(AM_V_at)$(am__mv) benchmark/$(DEPDIR)/malloc_bench_shared-malloc_bench.Tpo benchmark/$(DEPDIR)/malloc_bench_shared-malloc_bench.Po
#	$(AM_V_CXX)source='benchmark/malloc_bench.cc' object='benchmark/malloc_bench_shared-malloc_bench.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(malloc_bench_shared_CXXFLAGS) $(CXXFLAGS) -c -o benchmark/malloc_bench_shared-malloc_bench.o `test -f 'benchmark/malloc_bench.cc' || echo '$(srcdir)/'`benchmark/malloc_bench.cc

benchmark/malloc_bench_shared-malloc_bench.obj: benchmark/malloc_bench.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(malloc_bench_shared_CXXFLAGS) $(CXXFLAGS) -MT benchmark/malloc_bench_shared-malloc_bench.obj -MD -MP -MF benchmark/$(DEPDIR)/malloc_bench_shared-malloc_bench.Tpo -c -o benchmark/malloc_bench_shared-malloc_bench.obj `if test -f 'benchmark/malloc_bench.cc'; then $(CYGPATH_W) 'benchmark/malloc_bench.cc'; else $(CYGPATH_W) '$(srcdir)/benchmark/malloc_bench.cc'; fi`
	$(AM_V_at)$(am__mv) benchmark/$(DEPDIR)/malloc_bench_shared-malloc_bench.Tpo benchmark/$(DEPDIR)/malloc_bench_shared-malloc_bench.Po
#	$(AM_V_CXX)source='benchmark/malloc_bench.cc' object='benchmark/malloc_bench_shared-malloc_bench.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(malloc_bench_shared_CXXFLAGS) $(CXXFLAGS) -c -o benchmark/malloc_bench_shared-malloc_bench.obj `if test -f 'benchmark/malloc_bench.cc'; then $(CYGPATH_W) 'benchmark/malloc_bench.cc'; else $(CYGPATH_W) '$(srcdir)/benchmark/malloc_bench.cc'; fi`

benchmark/malloc_bench_shared_full-malloc_bench.o: benchmark/malloc_bench.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(malloc_bench_shared_full_CXXFLAGS) $(CXXFLAGS) -MT benchmark/malloc_bench_shared_full-malloc_bench.o -MD -MP -MF benchmark/$(DEPDIR)/malloc_bench_shared_full-malloc_bench.Tpo -c -o benchmark/malloc_bench_shared_full-malloc_bench.o `test -f 'benchmark/malloc_bench.cc' || echo '$(srcdir)/'`benchmark/malloc_bench.cc
	$(AM_V_at)$(am__mv) benchmark/$(DEPDIR)/malloc_bench_shared_full-malloc_bench.Tpo benchmark/$(DEPDIR)/malloc_bench_shared_full-malloc_bench.Po
#	$(AM_V_CXX)source='benchmark/malloc_bench.cc' object='benchmark/malloc_bench_shared_full-malloc_bench.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(malloc_bench_shared_full_CXXFLAGS) $(CXXFLAGS) -c -o benchmark/malloc_bench_shared_full-malloc_bench.o `test -f 'benchmark/malloc_bench.cc' || echo '$(srcdir)/'`benchmark/malloc_bench.cc

benchmark/malloc_bench_shared_full-malloc_bench.obj: benchmark/malloc_bench.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(malloc_bench_shared_full_CXXFLAGS) $(CXXFLAGS) -MT benchmark/malloc_bench_shared_full-malloc_bench.obj -MD -MP -MF benchmark/$(DEPDIR)/malloc_bench_shared_full-malloc_bench.Tpo -c -o benchmark/malloc_bench_shared_full-malloc_bench.obj `if test -f 'benchmark/malloc_bench.cc'; then $(CYGPATH_W) 'benchmark/malloc_bench.cc'; else $(CYGPATH_W) '$(srcdir)/benchmark/malloc_bench.cc'; fi`
	$(AM_V_at)$(am__mv) benchmark/$(DEPDIR)/malloc_bench_shared_full-malloc_bench.Tpo benchmark/$(DEPDIR)/malloc_bench_shared_full-malloc_bench.Po
#	$(AM_V_CXX)source='benchmark/malloc_bench.cc' object='benchmark/malloc_bench_shared_full-malloc_bench.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(malloc_bench_shared_full_CXXFLAGS) $(CXXFLAGS) -c -o benchmark/malloc_bench_shared_full-malloc_bench.obj `if test -f 'benchmark/malloc_bench.cc'; then $(CYGPATH_W) 'benchmark/malloc_bench.cc'; else $(CYGPATH_W) '$(srcdir)/benchmark/malloc_bench.cc'; fi`

src/tests/malloc_extension_debug_test-malloc_extension_test.o: src/tests/malloc_extension_test.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(malloc_extension_debug_test_CXXFLAGS) $(CXXFLAGS) -MT src/tests/malloc_extension_debug_test-malloc_extension_test.o -MD -MP -MF src/tests/$(DEPDIR)/malloc_extension_debug_test-malloc_extension_test.Tpo -c -o src/tests/malloc_extension_debug_test-malloc_extension_test.o `test -f 'src/tests/malloc_extension_test.cc' || echo '$(srcdir)/'`src/tests/malloc_extension_test.cc
	$(AM_V_at)$(am__mv) src/tests/$(DEPDIR)/malloc_extension_debug_test-malloc_extension_test.Tpo src/tests/$(DEPDIR)/malloc_extension_debug_test-malloc_extension_test.Po
#	$(AM_V_CXX)source='src/tests/malloc_extension_test.cc' object='src/tests/malloc_extension_debug_test-malloc_extension_test.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(malloc_extension_debug_test_CXXFLAGS) $(CXXFLAGS) -c -o src/tests/malloc_extension_debug_test-malloc_extension_test.o `test -f 'src/tests/malloc_extension_test.cc' || echo '$(srcdir)/'`src/tests/malloc_extension_test.cc

src/tests/malloc_extension_debug_test-malloc_extension_test.obj: src/tests/malloc_extension_test.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(malloc_extension_debug_test_CXXFLAGS) $(CXXFLAGS) -MT src/tests/malloc_extension_debug_test-malloc_extension_test.obj -MD -MP -MF src/tests/$(DEPDIR)/malloc_extension_debug_test-malloc_extension_test.Tpo -c -o src/tests/malloc_extension_debug_test-malloc_extension_test.obj `if test -f 'src/tests/malloc_extension_test.cc'; then $(CYGPATH_W) 'src/tests/malloc_extension_test.cc'; else $(CYGPATH_W) '$(srcdir)/src/tests/malloc_extension_test.cc'; fi`
	$(AM_V_at)$(am__mv) src/tests/$(DEPDIR)/malloc_extension_debug_test-malloc_extension_test.Tpo src/tests/$(DEPDIR)/malloc_extension_debug_test-malloc_extension_test.Po
#	$(AM_V_CXX)source='src/tests/malloc_extension_test.cc' object='src/tests/malloc_extension_debug_test-malloc_extension_test.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(malloc_extension_debug_test_CXXFLAGS) $(CXXFLAGS) -c -o src/tests/malloc_extension_debug_test-malloc_extension_test.obj `if test -f 'src/tests/malloc_extension_test.cc'; then $(CYGPATH_W) 'src/tests/malloc_extension_test.cc'; else $(CYGPATH_W) '$(srcdir)/src/tests/malloc_extension_test.cc'; fi`

src/tests/malloc_extension_test-malloc_extension_test.o: src/tests/malloc_extension_test.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(malloc_extension_test_CXXFLAGS) $(CXXFLAGS) -MT src/tests/malloc_extension_test-malloc_extension_test.o -MD -MP -MF src/tests/$(DEPDIR)/malloc_extension_test-malloc_extension_test.Tpo -c -o src/tests/malloc_extension_test-malloc_extension_test.o `test -f 'src/tests/malloc_extension_test.cc' || echo '$(srcdir)/'`src/tests/malloc_extension_test.cc
	$(AM_V_at)$(am__mv) src/tests/$(DEPDIR)/malloc_extension_test-malloc_extension_test.Tpo src/tests/$(DEPDIR)/malloc_extension_test-malloc_extension_test.Po
#	$(AM_V_CXX)source='src/tests/malloc_extension_test.cc' object='src/tests/malloc_extension_test-malloc_extension_test.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(malloc_extension_test_CXXFLAGS) $(CXXFLAGS) -c -o src/tests/malloc_extension_test-malloc_extension_test.o `test -f 'src/tests/malloc_extension_test.cc' || echo '$(srcdir)/'`src/tests/malloc_extension_test.cc

src/tests/malloc_extension_test-malloc_extension_test.obj: src/tests/malloc_extension_test.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(malloc_extension_test_CXXFLAGS) $(CXXFLAGS) -MT src/tests/malloc_extension_test-malloc_extension_test.obj -MD -MP -MF src/tests/$(DEPDIR)/malloc_extension_test-malloc_extension_test.Tpo -c -o src/tests/malloc_extension_test-malloc_extension_test.obj `if test -f 'src/tests/malloc_extension_test.cc'; then $(CYGPATH_W) 'src/tests/malloc_extension_test.cc'; else $(CYGPATH_W) '$(srcdir)/src/tests/malloc_extension_test.cc'; fi`
	$(AM_V_at)$(am__mv) src/tests/$(DEPDIR)/malloc_extension_test-malloc_extension_test.Tpo src/tests/$(DEPDIR)/malloc_extension_test-malloc_extension_test.Po
#	$(AM_V_CXX)source='src/tests/malloc_extension_test.cc' object='src/tests/malloc_extension_test-malloc_extension_test.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(malloc_extension_test_CXXFLAGS) $(CXXFLAGS) -c -o src/tests/malloc_extension_test-malloc_extension_test.obj `if test -f 'src/tests/malloc_extension_test.cc'; then $(CYGPATH_W) 'src/tests/malloc_extension_test.cc'; else $(CYGPATH_W) '$(srcdir)/src/tests/malloc_extension_test.cc'; fi`

src/tests/malloc_hook_test-malloc_hook_test.o: src/tests/malloc_hook_test.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(malloc_hook_test_CXXFLAGS) $(CXXFLAGS) -MT src/tests/malloc_hook_test-malloc_hook_test.o -MD -MP -MF src/tests/$(DEPDIR)/malloc_hook_test-malloc_hook_test.Tpo -c -o src/tests/malloc_hook_test-malloc_hook_test.o `test -f 'src/tests/malloc_hook_test.cc' || echo '$(srcdir)/'`src/tests/malloc_hook_test.cc
	$(AM_V_at)$(am__mv) src/tests/$(DEPDIR)/malloc_hook_test-malloc_hook_test.Tpo src/tests/$(DEPDIR)/malloc_hook_test-malloc_hook_test.Po
#	$(AM_V_CXX)source='src/tests/malloc_hook_test.cc' object='src/tests/malloc_hook_test-malloc_hook_test.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(malloc_hook_test_CXXFLAGS) $(CXXFLAGS) -c -o src/tests/malloc_hook_test-malloc_hook_test.o `test -f 'src/tests/malloc_hook_test.cc' || echo '$(srcdir)/'`src/tests/malloc_hook_test.cc

src/tests/malloc_hook_test-malloc_hook_test.obj: src/tests/malloc_hook_test.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(malloc_hook_test_CXXFLAGS) $(CXXFLAGS) -MT src/tests/malloc_hook_test-malloc_hook_test.obj -MD -MP -MF src/tests/$(DEPDIR)/malloc_hook_test-malloc_hook_test.Tpo -c -o src/tests/malloc_hook_test-malloc_hook_test.obj `if test -f 'src/tests/malloc_hook_test.cc'; then $(CYGPATH_W) 'src/tests/malloc_hook_test.cc'; else $(CYGPATH_W) '$(srcdir)/src/tests/malloc_hook_test.cc'; fi`
	$(AM_V_at)$(am__mv) src/tests/$(DEPDIR)/malloc_hook_test-malloc_hook_test.Tpo src/tests/$(DEPDIR)/malloc_hook_test-malloc_hook_test.Po
#	$(AM_V_CXX)source='src/tests/malloc_hook_test.cc' object='src/tests/malloc_hook_test-malloc_hook_test.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(malloc_hook_test_CXXFLAGS) $(CXXFLAGS) -c -o src/tests/malloc_hook_test-malloc_hook_test.obj `if test -f 'src/tests/malloc_hook_test.cc'; then $(CYGPATH_W) 'src/tests/malloc_hook_test.cc'; else $(CYGPATH_W) '$(srcdir)/src/tests/malloc_hook_test.cc'; fi`

src/tests/malloc_hook_test-testutil.o: src/tests/testutil.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(malloc_hook_test_CXXFLAGS) $(CXXFLAGS) -MT src/tests/malloc_hook_test-testutil.o -MD -MP -MF src/tests/$(DEPDIR)/malloc_hook_test-testutil.Tpo -c -o src/tests/malloc_hook_test-testutil.o `test -f 'src/tests/testutil.cc' || echo '$(srcdir)/'`src/tests/testutil.cc
	$(AM_V_at)$(am__mv) src/tests/$(DEPDIR)/malloc_hook_test-testutil.Tpo src/tests/$(DEPDIR)/malloc_hook_test-testutil.Po
#	$(AM_V_CXX)source='src/tests/testutil.cc' object='src/tests/malloc_hook_test-testutil.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(malloc_hook_test_CXXFLAGS) $(CXXFLAGS) -c -o src/tests/malloc_hook_test-testutil.o `test -f 'src/tests/testutil.cc' || echo '$(srcdir)/'`src/tests/testutil.cc

src/tests/malloc_hook_test-testutil.obj: src/tests/testutil.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(malloc_hook_test_CXXFLAGS) $(CXXFLAGS) -MT src/tests/malloc_hook_test-testutil.obj -MD -MP -MF src/tests/$(DEPDIR)/malloc_hook_test-testutil.Tpo -c -o src/tests/malloc_hook_test-testutil.obj `if test -f 'src/tests/testutil.cc'; then $(CYGPATH_W) 'src/tests/testutil.cc'; else $(CYGPATH_W) '$(srcdir)/src/tests/testutil.cc'; fi`
	$(AM_V_at)$(am__mv) src/tests/$(DEPDIR)/malloc_hook_test-testutil.Tpo src/tests/$(DEPDIR)/malloc_hook_test-testutil.Po
#	$(AM_V_CXX)source='src/tests/testutil.cc' object='src/tests/malloc_hook_test-testutil.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(malloc_hook_test_CXXFLAGS) $(CXXFLAGS) -c -o src/tests/malloc_hook_test-testutil.obj `if test -f 'src/tests/testutil.cc'; then $(CYGPATH_W) 'src/tests/testutil.cc'; else $(CYGPATH_W) '$(srcdir)/src/tests/testutil.cc'; fi`

src/tests/markidle_unittest-markidle_unittest.o: src/tests/markidle_unittest.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(markidle_unittest_CXXFLAGS) $(CXXFLAGS) -MT src/tests/markidle_unittest-markidle_unittest.o -MD -MP -MF src/tests/$(DEPDIR)/markidle_unittest-markidle_unittest.Tpo -c -o src/tests/markidle_unittest-markidle_unittest.o `test -f 'src/tests/markidle_unittest.cc' || echo '$(srcdir)/'`src/tests/markidle_unittest.cc
	$(AM_V_at)$(am__mv) src/tests/$(DEPDIR)/markidle_unittest-markidle_unittest.Tpo src/tests/$(DEPDIR)/markidle_unittest-markidle_unittest.Po
#	$(AM_V_CXX)source='src/tests/markidle_unittest.cc' object='src/tests/markidle_unittest-markidle_unittest.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(markidle_unittest_CXXFLAGS) $(CXXFLAGS) -c -o src/tests/markidle_unittest-markidle_unittest.o `test -f 'src/tests/markidle_unittest.cc' || echo '$(srcdir)/'`src/tests/markidle_unittest.cc

src/tests/markidle_unittest-markidle_unittest.obj: src/tests/markidle_unittest.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(markidle_unittest_CXXFLAGS) $(CXXFLAGS) -MT src/tests/markidle_unittest-markidle_unittest.obj -MD -MP -MF src/tests/$(DEPDIR)/markidle_unittest-markidle_unittest.Tpo -c -o src/tests/markidle_unittest-markidle_unittest.obj `if test -f 'src/tests/markidle_unittest.cc'; then $(CYGPATH_W) 'src/tests/markidle_unittest.cc'; else $(CYGPATH_W) '$(srcdir)/src/tests/markidle_unittest.cc'; fi`
	$(AM_V_at)$(am__mv) src/tests/$(DEPDIR)/markidle_unittest-markidle_unittest.Tpo src/tests/$(DEPDIR)/markidle_unittest-markidle_unittest.Po
#	$(AM_V_CXX)source='src/tests/markidle_unittest.cc' object='src/tests/markidle_unittest-markidle_unittest.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(markidle_unittest_CXXFLAGS) $(CXXFLAGS) -c -o src/tests/markidle_unittest-markidle_unittest.obj `if test -f 'src/tests/markidle_unittest.cc'; then $(CYGPATH_W) 'src/tests/markidle_unittest.cc'; else $(CYGPATH_W) '$(srcdir)/src/tests/markidle_unittest.cc'; fi`

src/tests/markidle_unittest-testutil.o: src/tests/testutil.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(markidle_unittest_CXXFLAGS) $(CXXFLAGS) -MT src/tests/markidle_unittest-testutil.o -MD -MP -MF src/tests/$(DEPDIR)/markidle_unittest-testutil.Tpo -c -o src/tests/markidle_unittest-testutil.o `test -f 'src/tests/testutil.cc' || echo '$(srcdir)/'`src/tests/testutil.cc
	$(AM_V_at)$(am__mv) src/tests/$(DEPDIR)/markidle_unittest-testutil.Tpo src/tests/$(DEPDIR)/markidle_unittest-testutil.Po
#	$(AM_V_CXX)source='src/tests/testutil.cc' object='src/tests/markidle_unittest-testutil.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(markidle_unittest_CXXFLAGS) $(CXXFLAGS) -c -o src/tests/markidle_unittest-testutil.o `test -f 'src/tests/testutil.cc' || echo '$(srcdir)/'`src/tests/testutil.cc

src/tests/markidle_unittest-testutil.obj: src/tests/testutil.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(markidle_unittest_CXXFLAGS) $(CXXFLAGS) -MT src/tests/markidle_unittest-testutil.obj -MD -MP -MF src/tests/$(DEPDIR)/markidle_unittest-testutil.Tpo -c -o src/tests/markidle_unittest-testutil.obj `if test -f 'src/tests/testutil.cc'; then $(CYGPATH_W) 'src/tests/testutil.cc'; else $(CYGPATH_W) '$(srcdir)/src/tests/testutil.cc'; fi`
	$(AM_V_at)$(am__mv) src/tests/$(DEPDIR)/markidle_unittest-testutil.Tpo src/tests/$(DEPDIR)/markidle_unittest-testutil.Po
#	$(AM_V_CXX)source='src/tests/testutil.cc' object='src/tests/markidle_unittest-testutil.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(markidle_unittest_CXXFLAGS) $(CXXFLAGS) -c -o src/tests/markidle_unittest-testutil.obj `if test -f 'src/tests/testutil.cc'; then $(CYGPATH_W) 'src/tests/testutil.cc'; else $(CYGPATH_W) '$(srcdir)/src/tests/testutil.cc'; fi`

src/tests/memalign_debug_unittest-memalign_unittest.o: src/tests/memalign_unittest.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(memalign_debug_unittest_CXXFLAGS) $(CXXFLAGS) -MT src/tests/memalign_debug_unittest-memalign_unittest.o -MD -MP -MF src/tests/$(DEPDIR)/memalign_debug_unittest-memalign_unittest.Tpo -c -o src/tests/memalign_debug_unittest-memalign_unittest.o `test -f 'src/tests/memalign_unittest.cc' || echo '$(srcdir)/'`src/tests/memalign_unittest.cc
	$(AM_V_at)$(am__mv) src/tests/$(DEPDIR)/memalign_debug_unittest-memalign_unittest.Tpo src/tests/$(DEPDIR)/memalign_debug_unittest-memalign_unittest.Po
#	$(AM_V_CXX)source='src/tests/memalign_unittest.cc' object='src/tests/memalign_debug_unittest-memalign_unittest.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(memalign_debug_unittest_CXXFLAGS) $(CXXFLAGS) -c -o src/tests/memalign_debug_unittest-memalign_unittest.o `test -f 'src/tests/memalign_unittest.cc' || echo '$(srcdir)/'`src/tests/memalign_unittest.cc

src/tests/memalign_debug_unittest-memalign_unittest.obj: src/tests/memalign_unittest.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(memalign_debug_unittest_CXXFLAGS) $(CXXFLAGS) -MT src/tests/memalign_debug_unittest-memalign_unittest.obj -MD -MP -MF src/tests/$(DEPDIR)/memalign_debug_unittest-memalign_unittest.Tpo -c -o src/tests/memalign_debug_unittest-memalign_unittest.obj `if test -f 'src/tests/memalign_unittest.cc'; then $(CYGPATH_W) 'src/tests/memalign_unittest.cc'; else $(CYGPATH_W) '$(srcdir)/src/tests/memalign_unittest.cc'; fi`
	$(AM_V_at)$(am__mv) src/tests/$(DEPDIR)/memalign_debug_unittest-memalign_unittest.Tpo src/tests/$(DEPDIR)/memalign_debug_unittest-memalign_unittest.Po
#	$(AM_V_CXX)source='src/tests/memalign_unittest.cc' object='src/tests/memalign_debug_unittest-memalign_unittest.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(memalign_debug_unittest_CXXFLAGS) $(CXXFLAGS) -c -o src/tests/memalign_debug_unittest-memalign_unittest.obj `if test -f 'src/tests/memalign_unittest.cc'; then $(CYGPATH_W) 'src/tests/memalign_unittest.cc'; else $(CYGPATH_W) '$(srcdir)/src/tests/memalign_unittest.cc'; fi`

src/tests/memalign_debug_unittest-testutil.o: src/tests/testutil.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(memalign_debug_unittest_CXXFLAGS) $(CXXFLAGS) -MT src/tests/memalign_debug_unittest-testutil.o -MD -MP -MF src/tests/$(DEPDIR)/memalign_debug_unittest-testutil.Tpo -c -o src/tests/memalign_debug_unittest-testutil.o `test -f 'src/tests/testutil.cc' || echo '$(srcdir)/'`src/tests/testutil.cc
	$(AM_V_at)$(am__mv) src/tests/$(DEPDIR)/memalign_debug_unittest-testutil.Tpo src/tests/$(DEPDIR)/memalign_debug_unittest-testutil.Po
#	$(AM_V_CXX)source='src/tests/testutil.cc' object='src/tests/memalign_debug_unittest-testutil.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(memalign_debug_unittest_CXXFLAGS) $(CXXFLAGS) -c -o src/tests/memalign_debug_unittest-testutil.o `test -f 'src/tests/testutil.cc' || echo '$(srcdir)/'`src/tests/testutil.cc

src/tests/memalign_debug_unittest-testutil.obj: src/tests/testutil.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(memalign_debug_unittest_CXXFLAGS) $(CXXFLAGS) -MT src/tests/memalign_debug_unittest-testutil.obj -MD -MP -MF src/tests/$(DEPDIR)/memalign_debug_unittest-testutil.Tpo -c -o src/tests/memalign_debug_unittest-testutil.obj `if test -f 'src/tests/testutil.cc'; then $(CYGPATH_W) 'src/tests/testutil.cc'; else $(CYGPATH_W) '$(srcdir)/src/tests/testutil.cc'; fi`
	$(AM_V_at)$(am__mv) src/tests/$(DEPDIR)/memalign_debug_unittest-testutil.Tpo src/tests/$(DEPDIR)/memalign_debug_unittest-testutil.Po
#	$(AM_V_CXX)source='src/tests/testutil.cc' object='src/tests/memalign_debug_unittest-testutil.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(memalign_debug_unittest_CXXFLAGS) $(CXXFLAGS) -c -o src/tests/memalign_debug_unittest-testutil.obj `if test -f 'src/tests/testutil.cc'; then $(CYGPATH_W) 'src/tests/testutil.cc'; else $(CYGPATH_W) '$(srcdir)/src/tests/testutil.cc'; fi`

src/tests/memalign_unittest-memalign_unittest.o: src/tests/memalign_unittest.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(memalign_unittest_CXXFLAGS) $(CXXFLAGS) -MT src/tests/memalign_unittest-memalign_unittest.o -MD -MP -MF src/tests/$(DEPDIR)/memalign_unittest-memalign_unittest.Tpo -c -o src/tests/memalign_unittest-memalign_unittest.o `test -f 'src/tests/memalign_unittest.cc' || echo '$(srcdir)/'`src/tests/memalign_unittest.cc
	$(AM_V_at)$(am__mv) src/tests/$(DEPDIR)/memalign_unittest-memalign_unittest.Tpo src/tests/$(DEPDIR)/memalign_unittest-memalign_unittest.Po
#	$(AM_V_CXX)source='src/tests/memalign_unittest.cc' object='src/tests/memalign_unittest-memalign_unittest.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(memalign_unittest_CXXFLAGS) $(CXXFLAGS) -c -o src/tests/memalign_unittest-memalign_unittest.o `test -f 'src/tests/memalign_unittest.cc' || echo '$(srcdir)/'`src/tests/memalign_unittest.cc

src/tests/memalign_unittest-memalign_unittest.obj: src/tests/memalign_unittest.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(memalign_unittest_CXXFLAGS) $(CXXFLAGS) -MT src/tests/memalign_unittest-memalign_unittest.obj -MD -MP -MF src/tests/$(DEPDIR)/memalign_unittest-memalign_unittest.Tpo -c -o src/tests/memalign_unittest-memalign_unittest.obj `if test -f 'src/tests/memalign_unittest.cc'; then $(CYGPATH_W) 'src/tests/memalign_unittest.cc'; else $(CYGPATH_W) '$(srcdir)/src/tests/memalign_unittest.cc'; fi`
	$(AM_V_at)$(am__mv) src/tests/$(DEPDIR)/memalign_unittest-memalign_unittest.Tpo src/tests/$(DEPDIR)/memalign_unittest-memalign_unittest.Po
#	$(AM_V_CXX)source='src/tests/memalign_unittest.cc' object='src/tests/memalign_unittest-memalign_unittest.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(memalign_unittest_CXXFLAGS) $(CXXFLAGS) -c -o src/tests/memalign_unittest-memalign_unittest.obj `if test -f 'src/tests/memalign_unittest.cc'; then $(CYGPATH_W) 'src/tests/memalign_unittest.cc'; else $(CYGPATH_W) '$(srcdir)/src/tests/memalign_unittest.cc'; fi`

src/tests/memalign_unittest-testutil.o: src/tests/testutil.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(memalign_unittest_CXXFLAGS) $(CXXFLAGS) -MT src/tests/memalign_unittest-testutil.o -MD -MP -MF src/tests/$(DEPDIR)/memalign_unittest-testutil.Tpo -c -o src/tests/memalign_unittest-testutil.o `test -f 'src/tests/testutil.cc' || echo '$(srcdir)/'`src/tests/testutil.cc
	$(AM_V_at)$(am__mv) src/tests/$(DEPDIR)/memalign_unittest-testutil.Tpo src/tests/$(DEPDIR)/memalign_unittest-testutil.Po
#	$(AM_V_CXX)source='src/tests/testutil.cc' object='src/tests/memalign_unittest-testutil.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(memalign_unittest_CXXFLAGS) $(CXXFLAGS) -c -o src/tests/memalign_unittest-testutil.o `test -f 'src/tests/testutil.cc' || echo '$(srcdir)/'`src/tests/testutil.cc

src/tests/memalign_unittest-testutil.obj: src/tests/testutil.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(memalign_unittest_CXXFLAGS) $(CXXFLAGS) -MT src/tests/memalign_unittest-testutil.obj -MD -MP -MF src/tests/$(DEPDIR)/memalign_unittest-testutil.Tpo -c -o src/tests/memalign_unittest-testutil.obj `if test -f 'src/tests/testutil.cc'; then $(CYGPATH_W) 'src/tests/testutil.cc'; else $(CYGPATH_W) '$(srcdir)/src/tests/testutil.cc'; fi`
	$(AM_V_at)$(am__mv) src/tests/$(DEPDIR)/memalign_unittest-testutil.Tpo src/tests/$(DEPDIR)/memalign_unittest-testutil.Po
#	$(AM_V_CXX)source='src/tests/testutil.cc' object='src/tests/memalign_unittest-testutil.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(memalign_unittest_CXXFLAGS) $(CXXFLAGS) -c -o src/tests/memalign_unittest-testutil.obj `if test -f 'src/tests/testutil.cc'; then $(CYGPATH_W) 'src/tests/testutil.cc'; else $(CYGPATH_W) '$(srcdir)/src/tests/testutil.cc'; fi`

src/tests/packed_cache_test-packed-cache_test.o: src/tests/packed-cache_test.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(packed_cache_test_CXXFLAGS) $(CXXFLAGS) -MT src/tests/packed_cache_test-packed-cache_test.o -MD -MP -MF src/tests/$(DEPDIR)/packed_cache_test-packed-cache_test.Tpo -c -o src/tests/packed_cache_test-packed-cache_test.o `test -f 'src/tests/packed-cache_test.cc' || echo '$(srcdir)/'`src/tests/packed-cache_test.cc
	$(AM_V_at)$(am__mv) src/tests/$(DEPDIR)/packed_cache_test-packed-cache_test.Tpo src/tests/$(DEPDIR)/packed_cache_test-packed-cache_test.Po
#	$(AM_V_CXX)source='src/tests/packed-cache_test.cc' object='src/tests/packed_cache_test-packed-cache_test.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(packed_cache_test_CXXFLAGS) $(CXXFLAGS) -c -o src/tests/packed_cache_test-packed-cache_test.o `test -f 'src/tests/packed-cache_test.cc' || echo '$(srcdir)/'`src/tests/packed-cache_test.cc

src/tests/packed_cache_test-packed-cache_test.obj: src/tests/packed-cache_test.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(packed_cache_test_CXXFLAGS) $(CXXFLAGS) -MT src/tests/packed_cache_test-packed-cache_test.obj -MD -MP -MF src/tests/$(DEPDIR)/packed_cache_test-packed-cache_test.Tpo -c -o src/tests/packed_cache_test-packed-cache_test.obj `if test -f 'src/tests/packed-cache_test.cc'; then $(CYGPATH_W) 'src/tests/packed-cache_test.cc'; else $(CYGPATH_W) '$(srcdir)/src/tests/packed-cache_test.cc'; fi`
	$(AM_V_at)$(am__mv) src/tests/$(DEPDIR)/packed_cache_test-packed-cache_test.Tpo src/tests/$(DEPDIR)/packed_cache_test-packed-cache_test.Po
#	$(AM_V_CXX)source='src/tests/packed-cache_test.cc' object='src/tests/packed_cache_test-packed-cache_test.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(packed_cache_test_CXXFLAGS) $(CXXFLAGS) -c -o src/tests/packed_cache_test-packed-cache_test.obj `if test -f 'src/tests/packed-cache_test.cc'; then $(CYGPATH_W) 'src/tests/packed-cache_test.cc'; else $(CYGPATH_W) '$(srcdir)/src/tests/packed-cache_test.cc'; fi`

src/tests/page_heap_test-page_heap_test.o: src/tests/page_heap_test.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(page_heap_test_CXXFLAGS) $(CXXFLAGS) -MT src/tests/page_heap_test-page_heap_test.o -MD -MP -MF src/tests/$(DEPDIR)/page_heap_test-page_heap_test.Tpo -c -o src/tests/page_heap_test-page_heap_test.o `test -f 'src/tests/page_heap_test.cc' || echo '$(srcdir)/'`src/tests/page_heap_test.cc
	$(AM_V_at)$(am__mv) src/tests/$(DEPDIR)/page_heap_test-page_heap_test.Tpo src/tests/$(DEPDIR)/page_heap_test-page_heap_test.Po
#	$(AM_V_CXX)source='src/tests/page_heap_test.cc' object='src/tests/page_heap_test-page_heap_test.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(page_heap_test_CXXFLAGS) $(CXXFLAGS) -c -o src/tests/page_heap_test-page_heap_test.o `test -f 'src/tests/page_heap_test.cc' || echo '$(srcdir)/'`src/tests/page_heap_test.cc

src/tests/page_heap_test-page_heap_test.obj: src/tests/page_heap_test.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(page_heap_test_CXXFLAGS) $(CXXFLAGS) -MT src/tests/page_heap_test-page_heap_test.obj -MD -MP -MF src/tests/$(DEPDIR)/page_heap_test-page_heap_test.Tpo -c -o src/tests/page_heap_test-page_heap_test.obj `if test -f 'src/tests/page_heap_test.cc'; then $(CYGPATH_W) 'src/tests/page_heap_test.cc'; else $(CYGPATH_W) '$(srcdir)/src/tests/page_heap_test.cc'; fi`
	$(AM_V_at)$(am__mv) src/tests/$(DEPDIR)/page_heap_test-page_heap_test.Tpo src/tests/$(DEPDIR)/page_heap_test-page_heap_test.Po
#	$(AM_V_CXX)source='src/tests/page_heap_test.cc' object='src/tests/page_heap_test-page_heap_test.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(page_heap_test_CXXFLAGS) $(CXXFLAGS) -c -o src/tests/page_heap_test-page_heap_test.obj `if test -f 'src/tests/page_heap_test.cc'; then $(CYGPATH_W) 'src/tests/page_heap_test.cc'; else $(CYGPATH_W) '$(srcdir)/src/tests/page_heap_test.cc'; fi`

src/tests/pagemap_unittest-pagemap_unittest.o: src/tests/pagemap_unittest.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pagemap_unittest_CXXFLAGS) $(CXXFLAGS) -MT src/tests/pagemap_unittest-pagemap_unittest.o -MD -MP -MF src/tests/$(DEPDIR)/pagemap_unittest-pagemap_unittest.Tpo -c -o src/tests/pagemap_unittest-pagemap_unittest.o `test -f 'src/tests/pagemap_unittest.cc' || echo '$(srcdir)/'`src/tests/pagemap_unittest.cc
	$(AM_V_at)$(am__mv) src/tests/$(DEPDIR)/pagemap_unittest-pagemap_unittest.Tpo src/tests/$(DEPDIR)/pagemap_unittest-pagemap_unittest.Po
#	$(AM_V_CXX)source='src/tests/pagemap_unittest.cc' object='src/tests/pagemap_unittest-pagemap_unittest.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pagemap_unittest_CXXFLAGS) $(CXXFLAGS) -c -o src/tests/pagemap_unittest-pagemap_unittest.o `test -f 'src/tests/pagemap_unittest.cc' || echo '$(srcdir)/'`src/tests/pagemap_unittest.cc

src/tests/pagemap_unittest-pagemap_unittest.obj: src/tests/pagemap_unittest.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pagemap_unittest_CXXFLAGS) $(CXXFLAGS) -MT src/tests/pagemap_unittest-pagemap_unittest.obj -MD -MP -MF src/tests/$(DEPDIR)/pagemap_unittest-pagemap_unittest.Tpo -c -o src/tests/pagemap_unittest-pagemap_unittest.obj `if test -f 'src/tests/pagemap_unittest.cc'; then $(CYGPATH_W) 'src/tests/pagemap_unittest.cc'; else $(CYGPATH_W) '$(srcdir)/src/tests/pagemap_unittest.cc'; fi`
	$(AM_V_at)$(am__mv) src/tests/$(DEPDIR)/pagemap_unittest-pagemap_unittest.Tpo src/tests/$(DEPDIR)/pagemap_unittest-pagemap_unittest.Po
#	$(AM_V_CXX)source='src/tests/pagemap_unittest.cc' object='src/tests/pagemap_unittest-pagemap_unittest.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pagemap_unittest_CXXFLAGS) $(CXXFLAGS) -c -o src/tests/pagemap_unittest-pagemap_unittest.obj `if test -f 'src/tests/pagemap_unittest.cc'; then $(CYGPATH_W) 'src/tests/pagemap_unittest.cc'; else $(CYGPATH_W) '$(srcdir)/src/tests/pagemap_unittest.cc'; fi`

src/tests/profile_handler_unittest-profile-handler_unittest.o: src/tests/profile-handler_unittest.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(profile_handler_unittest_CXXFLAGS) $(CXXFLAGS) -MT src/tests/profile_handler_unittest-profile-handler_unittest.o -MD -MP -MF src/tests/$(DEPDIR)/profile_handler_unittest-profile-handler_unittest.Tpo -c -o src/tests/profile_handler_unittest-profile-handler_unittest.o `test -f 'src/tests/profile-handler_unittest.cc' || echo '$(srcdir)/'`src/tests/profile-handler_unittest.cc
	$(AM_V_at)$(am__mv) src/tests/$(DEPDIR)/profile_handler_unittest-profile-handler_unittest.Tpo src/tests/$(DEPDIR)/profile_handler_unittest-profile-handler_unittest.Po
#	$(AM_V_CXX)source='src/tests/profile-handler_unittest.cc' object='src/tests/profile_handler_unittest-profile-handler_unittest.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(profile_handler_unittest_CXXFLAGS) $(CXXFLAGS) -c -o src/tests/profile_handler_unittest-profile-handler_unittest.o `test -f 'src/tests/profile-handler_unittest.cc' || echo '$(srcdir)/'`src/tests/profile-handler_unittest.cc

src/tests/profile_handler_unittest-profile-handler_unittest.obj: src/tests/profile-handler_unittest.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(profile_handler_unittest_CXXFLAGS) $(CXXFLAGS) -MT src/tests/profile_handler_unittest-profile-handler_unittest.obj -MD -MP -MF src/tests/$(DEPDIR)/profile_handler_unittest-profile-handler_unittest.Tpo -c -o src/tests/profile_handler_unittest-profile-handler_unittest.obj `if test -f 'src/tests/profile-handler_unittest.cc'; then $(CYGPATH_W) 'src/tests/profile-handler_unittest.cc'; else $(CYGPATH_W) '$(srcdir)/src/tests/profile-handler_unittest.cc'; fi`
	$(AM_V_at)$(am__mv) src/tests/$(DEPDIR)/profile_handler_unittest-profile-handler_unittest.Tpo src/tests/$(DEPDIR)/profile_handler_unittest-profile-handler_unittest.Po
#	$(AM_V_CXX)source='src/tests/profile-handler_unittest.cc' object='src/tests/profile_handler_unittest-profile-handler_unittest.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(profile_handler_unittest_CXXFLAGS) $(CXXFLAGS) -c -o src/tests/profile_handler_unittest-profile-handler_unittest.obj `if test -f 'src/tests/profile-handler_unittest.cc'; then $(CYGPATH_W) 'src/tests/profile-handler_unittest.cc'; else $(CYGPATH_W) '$(srcdir)/src/tests/profile-handler_unittest.cc'; fi`

src/tests/profiler1_unittest-profiler_unittest.o: src/tests/profiler_unittest.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(profiler1_unittest_CXXFLAGS) $(CXXFLAGS) -MT src/tests/profiler1_unittest-profiler_unittest.o -MD -MP -MF src/tests/$(DEPDIR)/profiler1_unittest-profiler_unittest.Tpo -c -o src/tests/profiler1_unittest-profiler_unittest.o `test -f 'src/tests/profiler_unittest.cc' || echo '$(srcdir)/'`src/tests/profiler_unittest.cc
	$(AM_V_at)$(am__mv) src/tests/$(DEPDIR)/profiler1_unittest-profiler_unittest.Tpo src/tests/$(DEPDIR)/profiler1_unittest-profiler_unittest.Po
#	$(AM_V_CXX)source='src/tests/profiler_unittest.cc' object='src/tests/profiler1_unittest-profiler_unittest.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(profiler1_unittest_CXXFLAGS) $(CXXFLAGS) -c -o src/tests/profiler1_unittest-profiler_unittest.o `test -f 'src/tests/profiler_unittest.cc' || echo '$(srcdir)/'`src/tests/profiler_unittest.cc

src/tests/profiler1_unittest-profiler_unittest.obj: src/tests/profiler_unittest.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(profiler1_unittest_CXXFLAGS) $(CXXFLAGS) -MT src/tests/profiler1_unittest-profiler_unittest.obj -MD -MP -MF src/tests/$(DEPDIR)/profiler1_unittest-profiler_unittest.Tpo -c -o src/tests/profiler1_unittest-profiler_unittest.obj `if test -f 'src/tests/profiler_unittest.cc'; then $(CYGPATH_W) 'src/tests/profiler_unittest.cc'; else $(CYGPATH_W) '$(srcdir)/src/tests/profiler_unittest.cc'; fi`
	$(AM_V_at)$(am__mv) src/tests/$(DEPDIR)/profiler1_unittest-profiler_unittest.Tpo src/tests/$(DEPDIR)/profiler1_unittest-profiler_unittest.Po
#	$(AM_V_CXX)source='src/tests/profiler_unittest.cc' object='src/tests/profiler1_unittest-profiler_unittest.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(profiler1_unittest_CXXFLAGS) $(CXXFLAGS) -c -o src/tests/profiler1_unittest-profiler_unittest.obj `if test -f 'src/tests/profiler_unittest.cc'; then $(CYGPATH_W) 'src/tests/profiler_unittest.cc'; else $(CYGPATH_W) '$(srcdir)/src/tests/profiler_unittest.cc'; fi`

src/tests/profiler1_unittest-testutil.o: src/tests/testutil.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(profiler1_unittest_CXXFLAGS) $(CXXFLAGS) -MT src/tests/profiler1_unittest-testutil.o -MD -MP -MF src/tests/$(DEPDIR)/profiler1_unittest-testutil.Tpo -c -o src/tests/profiler1_unittest-testutil.o `test -f 'src/tests/testutil.cc' || echo '$(srcdir)/'`src/tests/testutil.cc
	$(AM_V_at)$(am__mv) src/tests/$(DEPDIR)/profiler1_unittest-testutil.Tpo src/tests/$(DEPDIR)/profiler1_unittest-testutil.Po
#	$(AM_V_CXX)source='src/tests/testutil.cc' object='src/tests/profiler1_unittest-testutil.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(profiler1_unittest_CXXFLAGS) $(CXXFLAGS) -c -o src/tests/profiler1_unittest-testutil.o `test -f 'src/tests/testutil.cc' || echo '$(srcdir)/'`src/tests/testutil.cc

src/tests/profiler1_unittest-testutil.obj: src/tests/testutil.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(profiler1_unittest_CXXFLAGS) $(CXXFLAGS) -MT src/tests/profiler1_unittest-testutil.obj -MD -MP -MF src/tests/$(DEPDIR)/profiler1_unittest-testutil.Tpo -c -o src/tests/profiler1_unittest-testutil.obj `if test -f 'src/tests/testutil.cc'; then $(CYGPATH_W) 'src/tests/testutil.cc'; else $(CYGPATH_W) '$(srcdir)/src/tests/testutil.cc'; fi`
	$(AM_V_at)$(am__mv) src/tests/$(DEPDIR)/profiler1_unittest-testutil.Tpo src/tests/$(DEPDIR)/profiler1_unittest-testutil.Po
#	$(AM_V_CXX)source='src/tests/testutil.cc' object='src/tests/profiler1_unittest-testutil.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(profiler1_unittest_CXXFLAGS) $(CXXFLAGS) -c -o src/tests/profiler1_unittest-testutil.obj `if test -f 'src/tests/testutil.cc'; then $(CYGPATH_W) 'src/tests/testutil.cc'; else $(CYGPATH_W) '$(srcdir)/src/tests/testutil.cc'; fi`

src/tests/profiler2_unittest-profiler_unittest.o: src/tests/profiler_unittest.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(profiler2_unittest_CXXFLAGS) $(CXXFLAGS) -MT src/tests/profiler2_unittest-profiler_unittest.o -MD -MP -MF src/tests/$(DEPDIR)/profiler2_unittest-profiler_unittest.Tpo -c -o src/tests/profiler2_unittest-profiler_unittest.o `test -f 'src/tests/profiler_unittest.cc' || echo '$(srcdir)/'`src/tests/profiler_unittest.cc
	$(AM_V_at)$(am__mv) src/tests/$(DEPDIR)/profiler2_unittest-profiler_unittest.Tpo src/tests/$(DEPDIR)/profiler2_unittest-profiler_unittest.Po
#	$(AM_V_CXX)source='src/tests/profiler_unittest.cc' object='src/tests/profiler2_unittest-profiler_unittest.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(profiler2_unittest_CXXFLAGS) $(CXXFLAGS) -c -o src/tests/profiler2_unittest-profiler_unittest.o `test -f 'src/tests/profiler_unittest.cc' || echo '$(srcdir)/'`src/tests/profiler_unittest.cc

src/tests/profiler2_unittest-profiler_unittest.obj: src/tests/profiler_unittest.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(profiler2_unittest_CXXFLAGS) $(CXXFLAGS) -MT src/tests/profiler2_unittest-profiler_unittest.obj -MD -MP -MF src/tests/$(DEPDIR)/profiler2_unittest-profiler_unittest.Tpo -c -o src/tests/profiler2_unittest-profiler_unittest.obj `if test -f 'src/tests/profiler_unittest.cc'; then $(CYGPATH_W) 'src/tests/profiler_unittest.cc'; else $(CYGPATH_W) '$(srcdir)/src/tests/profiler_unittest.cc'; fi`
	$(AM_V_at)$(am__mv) src/tests/$(DEPDIR)/profiler2_unittest-profiler_unittest.Tpo src/tests/$(DEPDIR)/profiler2_unittest-profiler_unittest.Po
#	$(AM_V_CXX)source='src/tests/profiler_unittest.cc' object='src/tests/profiler2_unittest-profiler_unittest.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(profiler2_unittest_CXXFLAGS) $(CXXFLAGS) -c -o src/tests/profiler2_unittest-profiler_unittest.obj `if test -f 'src/tests/profiler_unittest.cc'; then $(CYGPATH_W) 'src/tests/profiler_unittest.cc'; else $(CYGPATH_W) '$(srcdir)/src/tests/profiler_unittest.cc'; fi`

src/tests/profiler2_unittest-testutil.o: src/tests/testutil.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(profiler2_unittest_CXXFLAGS) $(CXXFLAGS) -MT src/tests/profiler2_unittest-testutil.o -MD -MP -MF src/tests/$(DEPDIR)/profiler2_unittest-testutil.Tpo -c -o src/tests/profiler2_unittest-testutil.o `test -f 'src/tests/testutil.cc' || echo '$(srcdir)/'`src/tests/testutil.cc
	$(AM_V_at)$(am__mv) src/tests/$(DEPDIR)/profiler2_unittest-testutil.Tpo src/tests/$(DEPDIR)/profiler2_unittest-testutil.Po
#	$(AM_V_CXX)source='src/tests/testutil.cc' object='src/tests/profiler2_unittest-testutil.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(profiler2_unittest_CXXFLAGS) $(CXXFLAGS) -c -o src/tests/profiler2_unittest-testutil.o `test -f 'src/tests/testutil.cc' || echo '$(srcdir)/'`src/tests/testutil.cc

src/tests/profiler2_unittest-testutil.obj: src/tests/testutil.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(profiler2_unittest_CXXFLAGS) $(CXXFLAGS) -MT src/tests/profiler2_unittest-testutil.obj -MD -MP -MF src/tests/$(DEPDIR)/profiler2_unittest-testutil.Tpo -c -o src/tests/profiler2_unittest-testutil.obj `if test -f 'src/tests/testutil.cc'; then $(CYGPATH_W) 'src/tests/testutil.cc'; else $(CYGPATH_W) '$(srcdir)/src/tests/testutil.cc'; fi`
	$(AM_V_at)$(am__mv) src/tests/$(DEPDIR)/profiler2_unittest-testutil.Tpo src/tests/$(DEPDIR)/profiler2_unittest-testutil.Po
#	$(AM_V_CXX)source='src/tests/testutil.cc' object='src/tests/profiler2_unittest-testutil.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(profiler2_unittest_CXXFLAGS) $(CXXFLAGS) -c -o src/tests/profiler2_unittest-testutil.obj `if test -f 'src/tests/testutil.cc'; then $(CYGPATH_W) 'src/tests/testutil.cc'; else $(CYGPATH_W) '$(srcdir)/src/tests/testutil.cc'; fi`

src/tests/profiler3_unittest-profiler_unittest.o: src/tests/profiler_unittest.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(profiler3_unittest_CXXFLAGS) $(CXXFLAGS) -MT src/tests/profiler3_unittest-profiler_unittest.o -MD -MP -MF src/tests/$(DEPDIR)/profiler3_unittest-profiler_unittest.Tpo -c -o src/tests/profiler3_unittest-profiler_unittest.o `test -f 'src/tests/profiler_unittest.cc' || echo '$(srcdir)/'`src/tests/profiler_unittest.cc
	$(AM_V_at)$(am__mv) src/tests/$(DEPDIR)/profiler3_unittest-profiler_unittest.Tpo src/tests/$(DEPDIR)/profiler3_unittest-profiler_unittest.Po
#	$(AM_V_CXX)source='src/tests/profiler_unittest.cc' object='src/tests/profiler3_unittest-profiler_unittest.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(profiler3_unittest_CXXFLAGS) $(CXXFLAGS) -c -o src/tests/profiler3_unittest-profiler_unittest.o `test -f 'src/tests/profiler_unittest.cc' || echo '$(srcdir)/'`src/tests/profiler_unittest.cc

src/tests/profiler3_unittest-profiler_unittest.obj: src/tests/profiler_unittest.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(profiler3_unittest_CXXFLAGS) $(CXXFLAGS) -MT src/tests/profiler3_unittest-profiler_unittest.obj -MD -MP -MF src/tests/$(DEPDIR)/profiler3_unittest-profiler_unittest.Tpo -c -o src/tests/profiler3_unittest-profiler_unittest.obj `if test -f 'src/tests/profiler_unittest.cc'; then $(CYGPATH_W) 'src/tests/profiler_unittest.cc'; else $(CYGPATH_W) '$(srcdir)/src/tests/profiler_unittest.cc'; fi`
	$(AM_V_at)$(am__mv) src/tests/$(DEPDIR)/profiler3_unittest-profiler_unittest.Tpo src/tests/$(DEPDIR)/profiler3_unittest-profiler_unittest.Po
#	$(AM_V_CXX)source='src/tests/profiler_unittest.cc' object='src/tests/profiler3_unittest-profiler_unittest.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(profiler3_unittest_CXXFLAGS) $(CXXFLAGS) -c -o src/tests/profiler3_unittest-profiler_unittest.obj `if test -f 'src/tests/profiler_unittest.cc'; then $(CYGPATH_W) 'src/tests/profiler_unittest.cc'; else $(CYGPATH_W) '$(srcdir)/src/tests/profiler_unittest.cc'; fi`

src/tests/profiler3_unittest-testutil.o: src/tests/testutil.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(profiler3_unittest_CXXFLAGS) $(CXXFLAGS) -MT src/tests/profiler3_unittest-testutil.o -MD -MP -MF src/tests/$(DEPDIR)/profiler3_unittest-testutil.Tpo -c -o src/tests/profiler3_unittest-testutil.o `test -f 'src/tests/testutil.cc' || echo '$(srcdir)/'`src/tests/testutil.cc
	$(AM_V_at)$(am__mv) src/tests/$(DEPDIR)/profiler3_unittest-testutil.Tpo src/tests/$(DEPDIR)/profiler3_unittest-testutil.Po
#	$(AM_V_CXX)source='src/tests/testutil.cc' object='src/tests/profiler3_unittest-testutil.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(profiler3_unittest_CXXFLAGS) $(CXXFLAGS) -c -o src/tests/profiler3_unittest-testutil.o `test -f 'src/tests/testutil.cc' || echo '$(srcdir)/'`src/tests/testutil.cc

src/tests/profiler3_unittest-testutil.obj: src/tests/testutil.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(profiler3_unittest_CXXFLAGS) $(CXXFLAGS) -MT src/tests/profiler3_unittest-testutil.obj -MD -MP -MF src/tests/$(DEPDIR)/profiler3_unittest-testutil.Tpo -c -o src/tests/profiler3_unittest-testutil.obj `if test -f 'src/tests/testutil.cc'; then $(CYGPATH_W) 'src/tests/testutil.cc'; else $(CYGPATH_W) '$(srcdir)/src/tests/testutil.cc'; fi`
	$(AM_V_at)$(am__mv) src/tests/$(DEPDIR)/profiler3_unittest-testutil.Tpo src/tests/$(DEPDIR)/profiler3_unittest-testutil.Po
#	$(AM_V_CXX)source='src/tests/testutil.cc' object='src/tests/profiler3_unittest-testutil.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(profiler3_unittest_CXXFLAGS) $(CXXFLAGS) -c -o src/tests/profiler3_unittest-testutil.obj `if test -f 'src/tests/testutil.cc'; then $(CYGPATH_W) 'src/tests/testutil.cc'; else $(CYGPATH_W) '$(srcdir)/src/tests/testutil.cc'; fi`

src/tests/profiler4_unittest-profiler_unittest.o: src/tests/profiler_unittest.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(profiler4_unittest_CXXFLAGS) $(CXXFLAGS) -MT src/tests/profiler4_unittest-profiler_unittest.o -MD -MP -MF src/tests/$(DEPDIR)/profiler4_unittest-profiler_unittest.Tpo -c -o src/tests/profiler4_unittest-profiler_unittest.o `test -f 'src/tests/profiler_unittest.cc' || echo '$(srcdir)/'`src/tests/profiler_unittest.cc
	$(AM_V_at)$(am__mv) src/tests/$(DEPDIR)/profiler4_unittest-profiler_unittest.Tpo src/tests/$(DEPDIR)/profiler4_unittest-profiler_unittest.Po
#	$(AM_V_CXX)source='src/tests/profiler_unittest.cc' object='src/tests/profiler4_unittest-profiler_unittest.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(profiler4_unittest_CXXFLAGS) $(CXXFLAGS) -c -o src/tests/profiler4_unittest-profiler_unittest.o `test -f 'src/tests/profiler_unittest.cc' || echo '$(srcdir)/'`src/tests/profiler_unittest.cc

src/tests/profiler4_unittest-profiler_unittest.obj: src/tests/profiler_unittest.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(profiler4_unittest_CXXFLAGS) $(CXXFLAGS) -MT src/tests/profiler4_unittest-profiler_unittest.obj -MD -MP -MF src/tests/$(DEPDIR)/profiler4_unittest-profiler_unittest.Tpo -c -o src/tests/profiler4_unittest-profiler_unittest.obj `if test -f 'src/tests/profiler_unittest.cc'; then $(CYGPATH_W) 'src/tests/profiler_unittest.cc'; else $(CYGPATH_W) '$(srcdir)/src/tests/profiler_unittest.cc'; fi`
	$(AM_V_at)$(am__mv) src/tests/$(DEPDIR)/profiler4_unittest-profiler_unittest.Tpo src/tests/$(DEPDIR)/profiler4_unittest-profiler_unittest.Po
#	$(AM_V_CXX)source='src/tests/profiler_unittest.cc' object='src/tests/profiler4_unittest-profiler_unittest.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(profiler4_unittest_CXXFLAGS) $(CXXFLAGS) -c -o src/tests/profiler4_unittest-profiler_unittest.obj `if test -f 'src/tests/profiler_unittest.cc'; then $(CYGPATH_W) 'src/tests/profiler_unittest.cc'; else $(CYGPATH_W) '$(srcdir)/src/tests/profiler_unittest.cc'; fi`

src/tests/profiler4_unittest-testutil.o: src/tests/testutil.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(profiler4_unittest_CXXFLAGS) $(CXXFLAGS) -MT src/tests/profiler4_unittest-testutil.o -MD -MP -MF src/tests/$(DEPDIR)/profiler4_unittest-testutil.Tpo -c -o src/tests/profiler4_unittest-testutil.o `test -f 'src/tests/testutil.cc' || echo '$(srcdir)/'`src/tests/testutil.cc
	$(AM_V_at)$(am__mv) src/tests/$(DEPDIR)/profiler4_unittest-testutil.Tpo src/tests/$(DEPDIR)/profiler4_unittest-testutil.Po
#	$(AM_V_CXX)source='src/tests/testutil.cc' object='src/tests/profiler4_unittest-testutil.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(profiler4_unittest_CXXFLAGS) $(CXXFLAGS) -c -o src/tests/profiler4_unittest-testutil.o `test -f 'src/tests/testutil.cc' || echo '$(srcdir)/'`src/tests/testutil.cc

src/tests/profiler4_unittest-testutil.obj: src/tests/testutil.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(profiler4_unittest_CXXFLAGS) $(CXXFLAGS) -MT src/tests/profiler4_unittest-testutil.obj -MD -MP -MF src/tests/$(DEPDIR)/profiler4_unittest-testutil.Tpo -c -o src/tests/profiler4_unittest-testutil.obj `if test -f 'src/tests/testutil.cc'; then $(CYGPATH_W) 'src/tests/testutil.cc'; else $(CYGPATH_W) '$(srcdir)/src/tests/testutil.cc'; fi`
	$(AM_V_at)$(am__mv) src/tests/$(DEPDIR)/profiler4_unittest-testutil.Tpo src/tests/$(DEPDIR)/profiler4_unittest-testutil.Po
#	$(AM_V_CXX)source='src/tests/testutil.cc' object='src/tests/profiler4_unittest-testutil.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(profiler4_unittest_CXXFLAGS) $(CXXFLAGS) -c -o src/tests/profiler4_unittest-testutil.obj `if test -f 'src/tests/testutil.cc'; then $(CYGPATH_W) 'src/tests/testutil.cc'; else $(CYGPATH_W) '$(srcdir)/src/tests/testutil.cc'; fi`

src/tests/raw_printer_test-raw_printer_test.o: src/tests/raw_printer_test.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(raw_printer_test_CXXFLAGS) $(CXXFLAGS) -MT src/tests/raw_printer_test-raw_printer_test.o -MD -MP -MF src/tests/$(DEPDIR)/raw_printer_test-raw_printer_test.Tpo -c -o src/tests/raw_printer_test-raw_printer_test.o `test -f 'src/tests/raw_printer_test.cc' || echo '$(srcdir)/'`src/tests/raw_printer_test.cc
	$(AM_V_at)$(am__mv) src/tests/$(DEPDIR)/raw_printer_test-raw_printer_test.Tpo src/tests/$(DEPDIR)/raw_printer_test-raw_printer_test.Po
#	$(AM_V_CXX)source='src/tests/raw_printer_test.cc' object='src/tests/raw_printer_test-raw_printer_test.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(raw_printer_test_CXXFLAGS) $(CXXFLAGS) -c -o src/tests/raw_printer_test-raw_printer_test.o `test -f 'src/tests/raw_printer_test.cc' || echo '$(srcdir)/'`src/tests/raw_printer_test.cc

src/tests/raw_printer_test-raw_printer_test.obj: src/tests/raw_printer_test.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(raw_printer_test_CXXFLAGS) $(CXXFLAGS) -MT src/tests/raw_printer_test-raw_printer_test.obj -MD -MP -MF src/tests/$(DEPDIR)/raw_printer_test-raw_printer_test.Tpo -c -o src/tests/raw_printer_test-raw_printer_test.obj `if test -f 'src/tests/raw_printer_test.cc'; then $(CYGPATH_W) 'src/tests/raw_printer_test.cc'; else $(CYGPATH_W) '$(srcdir)/src/tests/raw_printer_test.cc'; fi`
	$(AM_V_at)$(am__mv) src/tests/$(DEPDIR)/raw_printer_test-raw_printer_test.Tpo src/tests/$(DEPDIR)/raw_printer_test-raw_printer_test.Po
#	$(AM_V_CXX)source='src/tests/raw_printer_test.cc' object='src/tests/raw_printer_test-raw_printer_test.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(raw_printer_test_CXXFLAGS) $(CXXFLAGS) -c -o src/tests/raw_printer_test-raw_printer_test.obj `if test -f 'src/tests/raw_printer_test.cc'; then $(CYGPATH_W) 'src/tests/raw_printer_test.cc'; else $(CYGPATH_W) '$(srcdir)/src/tests/raw_printer_test.cc'; fi`

src/tests/realloc_debug_unittest-realloc_unittest.o: src/tests/realloc_unittest.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(realloc_debug_unittest_CXXFLAGS) $(CXXFLAGS) -MT src/tests/realloc_debug_unittest-realloc_unittest.o -MD -MP -MF src/tests/$(DEPDIR)/realloc_debug_unittest-realloc_unittest.Tpo -c -o src/tests/realloc_debug_unittest-realloc_unittest.o `test -f 'src/tests/realloc_unittest.cc' || echo '$(srcdir)/'`src/tests/realloc_unittest.cc
	$(AM_V_at)$(am__mv) src/tests/$(DEPDIR)/realloc_debug_unittest-realloc_unittest.Tpo src/tests/$(DEPDIR)/realloc_debug_unittest-realloc_unittest.Po
#	$(AM_V_CXX)source='src/tests/realloc_unittest.cc' object='src/tests/realloc_debug_unittest-realloc_unittest.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(realloc_debug_unittest_CXXFLAGS) $(CXXFLAGS) -c -o src/tests/realloc_debug_unittest-realloc_unittest.o `test -f 'src/tests/realloc_unittest.cc' || echo '$(srcdir)/'`src/tests/realloc_unittest.cc

src/tests/realloc_debug_unittest-realloc_unittest.obj: src/tests/realloc_unittest.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(realloc_debug_unittest_CXXFLAGS) $(CXXFLAGS) -MT src/tests/realloc_debug_unittest-realloc_unittest.obj -MD -MP -MF src/tests/$(DEPDIR)/realloc_debug_unittest-realloc_unittest.Tpo -c -o src/tests/realloc_debug_unittest-realloc_unittest.obj `if test -f 'src/tests/realloc_unittest.cc'; then $(CYGPATH_W) 'src/tests/realloc_unittest.cc'; else $(CYGPATH_W) '$(srcdir)/src/tests/realloc_unittest.cc'; fi`
	$(AM_V_at)$(am__mv) src/tests/$(DEPDIR)/realloc_debug_unittest-realloc_unittest.Tpo src/tests/$(DEPDIR)/realloc_debug_unittest-realloc_unittest.Po
#	$(AM_V_CXX)source='src/tests/realloc_unittest.cc' object='src/tests/realloc_debug_unittest-realloc_unittest.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(realloc_debug_unittest_CXXFLAGS) $(CXXFLAGS) -c -o src/tests/realloc_debug_unittest-realloc_unittest.obj `if test -f 'src/tests/realloc_unittest.cc'; then $(CYGPATH_W) 'src/tests/realloc_unittest.cc'; else $(CYGPATH_W) '$(srcdir)/src/tests/realloc_unittest.cc'; fi`

src/tests/realloc_unittest-realloc_unittest.o: src/tests/realloc_unittest.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(realloc_unittest_CXXFLAGS) $(CXXFLAGS) -MT src/tests/realloc_unittest-realloc_unittest.o -MD -MP -MF src/tests/$(DEPDIR)/realloc_unittest-realloc_unittest.Tpo -c -o src/tests/realloc_unittest-realloc_unittest.o `test -f 'src/tests/realloc_unittest.cc' || echo '$(srcdir)/'`src/tests/realloc_unittest.cc
	$(AM_V_at)$(am__mv) src/tests/$(DEPDIR)/realloc_unittest-realloc_unittest.Tpo src/tests/$(DEPDIR)/realloc_unittest-realloc_unittest.Po
#	$(AM_V_CXX)source='src/tests/realloc_unittest.cc' object='src/tests/realloc_unittest-realloc_unittest.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(realloc_unittest_CXXFLAGS) $(CXXFLAGS) -c -o src/tests/realloc_unittest-realloc_unittest.o `test -f 'src/tests/realloc_unittest.cc' || echo '$(srcdir)/'`src/tests/realloc_unittest.cc

src/tests/realloc_unittest-realloc_unittest.obj: src/tests/realloc_unittest.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(realloc_unittest_CXXFLAGS) $(CXXFLAGS) -MT src/tests/realloc_unittest-realloc_unittest.obj -MD -MP -MF src/tests/$(DEPDIR)/realloc_unittest-realloc_unittest.Tpo -c -o src/tests/realloc_unittest-realloc_unittest.obj `if test -f 'src/tests/realloc_unittest.cc'; then $(CYGPATH_W) 'src/tests/realloc_unittest.cc'; else $(CYGPATH_W) '$(srcdir)/src/tests/realloc_unittest.cc'; fi`
	$(AM_V_at)$(am__mv) src/tests/$(DEPDIR)/realloc_unittest-realloc_unittest.Tpo src/tests/$(DEPDIR)/realloc_unittest-realloc_unittest.Po
#	$(AM_V_CXX)source='src/tests/realloc_unittest.cc' object='src/tests/realloc_unittest-realloc_unittest.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(realloc_unittest_CXXFLAGS) $(CXXFLAGS) -c -o src/tests/realloc_unittest-realloc_unittest.obj `if test -f 'src/tests/realloc_unittest.cc'; then $(CYGPATH_W) 'src/tests/realloc_unittest.cc'; else $(CYGPATH_W) '$(srcdir)/src/tests/realloc_unittest.cc'; fi`

src/tests/sampler_debug_test-sampler_test.o: src/tests/sampler_test.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(sampler_debug_test_CXXFLAGS) $(CXXFLAGS) -MT src/tests/sampler_debug_test-sampler_test.o -MD -MP -MF src/tests/$(DEPDIR)/sampler_debug_test-sampler_test.Tpo -c -o src/tests/sampler_debug_test-sampler_test.o `test -f 'src/tests/sampler_test.cc' || echo '$(srcdir)/'`src/tests/sampler_test.cc
	$(AM_V_at)$(am__mv) src/tests/$(DEPDIR)/sampler_debug_test-sampler_test.Tpo src/tests/$(DEPDIR)/sampler_debug_test-sampler_test.Po
#	$(AM_V_CXX)source='src/tests/sampler_test.cc' object='src/tests/sampler_debug_test-sampler_test.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(sampler_debug_test_CXXFLAGS) $(CXXFLAGS) -c -o src/tests/sampler_debug_test-sampler_test.o `test -f 'src/tests/sampler_test.cc' || echo '$(srcdir)/'`src/tests/sampler_test.cc

src/tests/sampler_debug_test-sampler_test.obj: src/tests/sampler_test.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(sampler_debug_test_CXXFLAGS) $(CXXFLAGS) -MT src/tests/sampler_debug_test-sampler_test.obj -MD -MP -MF src/tests/$(DEPDIR)/sampler_debug_test-sampler_test.Tpo -c -o src/tests/sampler_debug_test-sampler_test.obj `if test -f 'src/tests/sampler_test.cc'; then $(CYGPATH_W) 'src/tests/sampler_test.cc'; else $(CYGPATH_W) '$(srcdir)/src/tests/sampler_test.cc'; fi`
	$(AM_V_at)$(am__mv) src/tests/$(DEPDIR)/sampler_debug_test-sampler_test.Tpo src/tests/$(DEPDIR)/sampler_debug_test-sampler_test.Po
#	$(AM_V_CXX)source='src/tests/sampler_test.cc' object='src/tests/sampler_debug_test-sampler_test.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(sampler_debug_test_CXXFLAGS) $(CXXFLAGS) -c -o src/tests/sampler_debug_test-sampler_test.obj `if test -f 'src/tests/sampler_test.cc'; then $(CYGPATH_W) 'src/tests/sampler_test.cc'; else $(CYGPATH_W) '$(srcdir)/src/tests/sampler_test.cc'; fi`

src/tests/sampler_test-sampler_test.o: src/tests/sampler_test.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(sampler_test_CXXFLAGS) $(CXXFLAGS) -MT src/tests/sampler_test-sampler_test.o -MD -MP -MF src/tests/$(DEPDIR)/sampler_test-sampler_test.Tpo -c -o src/tests/sampler_test-sampler_test.o `test -f 'src/tests/sampler_test.cc' || echo '$(srcdir)/'`src/tests/sampler_test.cc
	$(AM_V_at)$(am__mv) src/tests/$(DEPDIR)/sampler_test-sampler_test.Tpo src/tests/$(DEPDIR)/sampler_test-sampler_test.Po
#	$(AM_V_CXX)source='src/tests/sampler_test.cc' object='src/tests/sampler_test-sampler_test.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(sampler_test_CXXFLAGS) $(CXXFLAGS) -c -o src/tests/sampler_test-sampler_test.o `test -f 'src/tests/sampler_test.cc' || echo '$(srcdir)/'`src/tests/sampler_test.cc

src/tests/sampler_test-sampler_test.obj: src/tests/sampler_test.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(sampler_test_CXXFLAGS) $(CXXFLAGS) -MT src/tests/sampler_test-sampler_test.obj -MD -MP -MF src/tests/$(DEPDIR)/sampler_test-sampler_test.Tpo -c -o src/tests/sampler_test-sampler_test.obj `if test -f 'src/tests/sampler_test.cc'; then $(CYGPATH_W) 'src/tests/sampler_test.cc'; else $(CYGPATH_W) '$(srcdir)/src/tests/sampler_test.cc'; fi`
	$(AM_V_at)$(am__mv) src/tests/$(DEPDIR)/sampler_test-sampler_test.Tpo src/tests/$(DEPDIR)/sampler_test-sampler_test.Po
#	$(AM_V_CXX)source='src/tests/sampler_test.cc' object='src/tests/sampler_test-sampler_test.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(sampler_test_CXXFLAGS) $(CXXFLAGS) -c -o src/tests/sampler_test-sampler_test.obj `if test -f 'src/tests/sampler_test.cc'; then $(CYGPATH_W) 'src/tests/sampler_test.cc'; else $(CYGPATH_W) '$(srcdir)/src/tests/sampler_test.cc'; fi`

src/tests/sampling_debug_test-sampling_test.o: src/tests/sampling_test.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(sampling_debug_test_CXXFLAGS) $(CXXFLAGS) -MT src/tests/sampling_debug_test-sampling_test.o -MD -MP -MF src/tests/$(DEPDIR)/sampling_debug_test-sampling_test.Tpo -c -o src/tests/sampling_debug_test-sampling_test.o `test -f 'src/tests/sampling_test.cc' || echo '$(srcdir)/'`src/tests/sampling_test.cc
	$(AM_V_at)$(am__mv) src/tests/$(DEPDIR)/sampling_debug_test-sampling_test.Tpo src/tests/$(DEPDIR)/sampling_debug_test-sampling_test.Po
#	$(AM_V_CXX)source='src/tests/sampling_test.cc' object='src/tests/sampling_debug_test-sampling_test.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(sampling_debug_test_CXXFLAGS) $(CXXFLAGS) -c -o src/tests/sampling_debug_test-sampling_test.o `test -f 'src/tests/sampling_test.cc' || echo '$(srcdir)/'`src/tests/sampling_test.cc

src/tests/sampling_debug_test-sampling_test.obj: src/tests/sampling_test.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(sampling_debug_test_CXXFLAGS) $(CXXFLAGS) -MT src/tests/sampling_debug_test-sampling_test.obj -MD -MP -MF src/tests/$(DEPDIR)/sampling_debug_test-sampling_test.Tpo -c -o src/tests/sampling_debug_test-sampling_test.obj `if test -f 'src/tests/sampling_test.cc'; then $(CYGPATH_W) 'src/tests/sampling_test.cc'; else $(CYGPATH_W) '$(srcdir)/src/tests/sampling_test.cc'; fi`
	$(AM_V_at)$(am__mv) src/tests/$(DEPDIR)/sampling_debug_test-sampling_test.Tpo src/tests/$(DEPDIR)/sampling_debug_test-sampling_test.Po
#	$(AM_V_CXX)source='src/tests/sampling_test.cc' object='src/tests/sampling_debug_test-sampling_test.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(sampling_debug_test_CXXFLAGS) $(CXXFLAGS) -c -o src/tests/sampling_debug_test-sampling_test.obj `if test -f 'src/tests/sampling_test.cc'; then $(CYGPATH_W) 'src/tests/sampling_test.cc'; else $(CYGPATH_W) '$(srcdir)/src/tests/sampling_test.cc'; fi`

src/tests/sampling_test-sampling_test.o: src/tests/sampling_test.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(sampling_test_CXXFLAGS) $(CXXFLAGS) -MT src/tests/sampling_test-sampling_test.o -MD -MP -MF src/tests/$(DEPDIR)/sampling_test-sampling_test.Tpo -c -o src/tests/sampling_test-sampling_test.o `test -f 'src/tests/sampling_test.cc' || echo '$(srcdir)/'`src/tests/sampling_test.cc
	$(AM_V_at)$(am__mv) src/tests/$(DEPDIR)/sampling_test-sampling_test.Tpo src/tests/$(DEPDIR)/sampling_test-sampling_test.Po
#	$(AM_V_CXX)source='src/tests/sampling_test.cc' object='src/tests/sampling_test-sampling_test.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(sampling_test_CXXFLAGS) $(CXXFLAGS) -c -o src/tests/sampling_test-sampling_test.o `test -f 'src/tests/sampling_test.cc' || echo '$(srcdir)/'`src/tests/sampling_test.cc

src/tests/sampling_test-sampling_test.obj: src/tests/sampling_test.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(sampling_test_CXXFLAGS) $(CXXFLAGS) -MT src/tests/sampling_test-sampling_test.obj -MD -MP -MF src/tests/$(DEPDIR)/sampling_test-sampling_test.Tpo -c -o src/tests/sampling_test-sampling_test.obj `if test -f 'src/tests/sampling_test.cc'; then $(CYGPATH_W) 'src/tests/sampling_test.cc'; else $(CYGPATH_W) '$(srcdir)/src/tests/sampling_test.cc'; fi`
	$(AM_V_at)$(am__mv) src/tests/$(DEPDIR)/sampling_test-sampling_test.Tpo src/tests/$(DEPDIR)/sampling_test-sampling_test.Po
#	$(AM_V_CXX)source='src/tests/sampling_test.cc' object='src/tests/sampling_test-sampling_test.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(sampling_test_CXXFLAGS) $(CXXFLAGS) -c -o src/tests/sampling_test-sampling_test.obj `if test -f 'src/tests/sampling_test.cc'; then $(CYGPATH_W) 'src/tests/sampling_test.cc'; else $(CYGPATH_W) '$(srcdir)/src/tests/sampling_test.cc'; fi`

src/tests/stack_trace_table_test-stack_trace_table_test.o: src/tests/stack_trace_table_test.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(stack_trace_table_test_CXXFLAGS) $(CXXFLAGS) -MT src/tests/stack_trace_table_test-stack_trace_table_test.o -MD -MP -MF src/tests/$(DEPDIR)/stack_trace_table_test-stack_trace_table_test.Tpo -c -o src/tests/stack_trace_table_test-stack_trace_table_test.o `test -f 'src/tests/stack_trace_table_test.cc' || echo '$(srcdir)/'`src/tests/stack_trace_table_test.cc
	$(AM_V_at)$(am__mv) src/tests/$(DEPDIR)/stack_trace_table_test-stack_trace_table_test.Tpo src/tests/$(DEPDIR)/stack_trace_table_test-stack_trace_table_test.Po
#	$(AM_V_CXX)source='src/tests/stack_trace_table_test.cc' object='src/tests/stack_trace_table_test-stack_trace_table_test.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(stack_trace_table_test_CXXFLAGS) $(CXXFLAGS) -c -o src/tests/stack_trace_table_test-stack_trace_table_test.o `test -f 'src/tests/stack_trace_table_test.cc' || echo '$(srcdir)/'`src/tests/stack_trace_table_test.cc

src/tests/stack_trace_table_test-stack_trace_table_test.obj: src/tests/stack_trace_table_test.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(stack_trace_table_test_CXXFLAGS) $(CXXFLAGS) -MT src/tests/stack_trace_table_test-stack_trace_table_test.obj -MD -MP -MF src/tests/$(DEPDIR)/stack_trace_table_test-stack_trace_table_test.Tpo -c -o src/tests/stack_trace_table_test-stack_trace_table_test.obj `if test -f 'src/tests/stack_trace_table_test.cc'; then $(CYGPATH_W) 'src/tests/stack_trace_table_test.cc'; else $(CYGPATH_W) '$(srcdir)/src/tests/stack_trace_table_test.cc'; fi`
	$(AM_V_at)$(am__mv) src/tests/$(DEPDIR)/stack_trace_table_test-stack_trace_table_test.Tpo src/tests/$(DEPDIR)/stack_trace_table_test-stack_trace_table_test.Po
#	$(AM_V_CXX)source='src/tests/stack_trace_table_test.cc' object='src/tests/stack_trace_table_test-stack_trace_table_test.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(stack_trace_table_test_CXXFLAGS) $(CXXFLAGS) -c -o src/tests/stack_trace_table_test-stack_trace_table_test.obj `if test -f 'src/tests/stack_trace_table_test.cc'; then $(CYGPATH_W) 'src/tests/stack_trace_table_test.cc'; else $(CYGPATH_W) '$(srcdir)/src/tests/stack_trace_table_test.cc'; fi`

src/tests/system_alloc_unittest-system-alloc_unittest.o: src/tests/system-alloc_unittest.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(system_alloc_unittest_CXXFLAGS) $(CXXFLAGS) -MT src/tests/system_alloc_unittest-system-alloc_unittest.o -MD -MP -MF src/tests/$(DEPDIR)/system_alloc_unittest-system-alloc_unittest.Tpo -c -o src/tests/system_alloc_unittest-system-alloc_unittest.o `test -f 'src/tests/system-alloc_unittest.cc' || echo '$(srcdir)/'`src/tests/system-alloc_unittest.cc
	$(AM_V_at)$(am__mv) src/tests/$(DEPDIR)/system_alloc_unittest-system-alloc_unittest.Tpo src/tests/$(DEPDIR)/system_alloc_unittest-system-alloc_unittest.Po
#	$(AM_V_CXX)source='src/tests/system-alloc_unittest.cc' object='src/tests/system_alloc_unittest-system-alloc_unittest.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(system_alloc_unittest_CXXFLAGS) $(CXXFLAGS) -c -o src/tests/system_alloc_unittest-system-alloc_unittest.o `test -f 'src/tests/system-alloc_unittest.cc' || echo '$(srcdir)/'`src/tests/system-alloc_unittest.cc

src/tests/system_alloc_unittest-system-alloc_unittest.obj: src/tests/system-alloc_unittest.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(system_alloc_unittest_CXXFLAGS) $(CXXFLAGS) -MT src/tests/system_alloc_unittest-system-alloc_unittest.obj -MD -MP -MF src/tests/$(DEPDIR)/system_alloc_unittest-system-alloc_unittest.Tpo -c -o src/tests/system_alloc_unittest-system-alloc_unittest.obj `if test -f 'src/tests/system-alloc_unittest.cc'; then $(CYGPATH_W) 'src/tests/system-alloc_unittest.cc'; else $(CYGPATH_W) '$(srcdir)/src/tests/system-alloc_unittest.cc'; fi`
	$(AM_V_at)$(am__mv) src/tests/$(DEPDIR)/system_alloc_unittest-system-alloc_unittest.Tpo src/tests/$(DEPDIR)/system_alloc_unittest-system-alloc_unittest.Po
#	$(AM_V_CXX)source='src/tests/system-alloc_unittest.cc' object='src/tests/system_alloc_unittest-system-alloc_unittest.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(system_alloc_unittest_CXXFLAGS) $(CXXFLAGS) -c -o src/tests/system_alloc_unittest-system-alloc_unittest.obj `if test -f 'src/tests/system-alloc_unittest.cc'; then $(CYGPATH_W) 'src/tests/system-alloc_unittest.cc'; else $(CYGPATH_W) '$(srcdir)/src/tests/system-alloc_unittest.cc'; fi`

src/tests/tcm_min_asserts_unittest-tcmalloc_unittest.o: src/tests/tcmalloc_unittest.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tcm_min_asserts_unittest_CXXFLAGS) $(CXXFLAGS) -MT src/tests/tcm_min_asserts_unittest-tcmalloc_unittest.o -MD -MP -MF src/tests/$(DEPDIR)/tcm_min_asserts_unittest-tcmalloc_unittest.Tpo -c -o src/tests/tcm_min_asserts_unittest-tcmalloc_unittest.o `test -f 'src/tests/tcmalloc_unittest.cc' || echo '$(srcdir)/'`src/tests/tcmalloc_unittest.cc
	$(AM_V_at)$(am__mv) src/tests/$(DEPDIR)/tcm_min_asserts_unittest-tcmalloc_unittest.Tpo src/tests/$(DEPDIR)/tcm_min_asserts_unittest-tcmalloc_unittest.Po
#	$(AM_V_CXX)source='src/tests/tcmalloc_unittest.cc' object='src/tests/tcm_min_asserts_unittest-tcmalloc_unittest.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tcm_min_asserts_unittest_CXXFLAGS) $(CXXFLAGS) -c -o src/tests/tcm_min_asserts_unittest-tcmalloc_unittest.o `test -f 'src/tests/tcmalloc_unittest.cc' || echo '$(srcdir)/'`src/tests/tcmalloc_unittest.cc

src/tests/tcm_min_asserts_unittest-tcmalloc_unittest.obj: src/tests/tcmalloc_unittest.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tcm_min_asserts_unittest_CXXFLAGS) $(CXXFLAGS) -MT src/tests/tcm_min_asserts_unittest-tcmalloc_unittest.obj -MD -MP -MF src/tests/$(DEPDIR)/tcm_min_asserts_unittest-tcmalloc_unittest.Tpo -c -o src/tests/tcm_min_asserts_unittest-tcmalloc_unittest.obj `if test -f 'src/tests/tcmalloc_unittest.cc'; then $(CYGPATH_W) 'src/tests/tcmalloc_unittest.cc'; else $(CYGPATH_W) '$(srcdir)/src/tests/tcmalloc_unittest.cc'; fi`
	$(AM_V_at)$(am__mv) src/tests/$(DEPDIR)/tcm_min_asserts_unittest-tcmalloc_unittest.Tpo src/tests/$(DEPDIR)/tcm_min_asserts_unittest-tcmalloc_unittest.Po
#	$(AM_V_CXX)source='src/tests/tcmalloc_unittest.cc' object='src/tests/tcm_min_asserts_unittest-tcmalloc_unittest.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tcm_min_asserts_unittest_CXXFLAGS) $(CXXFLAGS) -c -o src/tests/tcm_min_asserts_unittest-tcmalloc_unittest.obj `if test -f 'src/tests/tcmalloc_unittest.cc'; then $(CYGPATH_W) 'src/tests/tcmalloc_unittest.cc'; else $(CYGPATH_W) '$(srcdir)/src/tests/tcmalloc_unittest.cc'; fi`

src/tests/tcm_min_asserts_unittest-testutil.o: src/tests/testutil.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tcm_min_asserts_unittest_CXXFLAGS) $(CXXFLAGS) -MT src/tests/tcm_min_asserts_unittest-testutil.o -MD -MP -MF src/tests/$(DEPDIR)/tcm_min_asserts_unittest-testutil.Tpo -c -o src/tests/tcm_min_asserts_unittest-testutil.o `test -f 'src/tests/testutil.cc' || echo '$(srcdir)/'`src/tests/testutil.cc
	$(AM_V_at)$(am__mv) src/tests/$(DEPDIR)/tcm_min_asserts_unittest-testutil.Tpo src/tests/$(DEPDIR)/tcm_min_asserts_unittest-testutil.Po
#	$(AM_V_CXX)source='src/tests/testutil.cc' object='src/tests/tcm_min_asserts_unittest-testutil.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tcm_min_asserts_unittest_CXXFLAGS) $(CXXFLAGS) -c -o src/tests/tcm_min_asserts_unittest-testutil.o `test -f 'src/tests/testutil.cc' || echo '$(srcdir)/'`src/tests/testutil.cc

src/tests/tcm_min_asserts_unittest-testutil.obj: src/tests/testutil.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tcm_min_asserts_unittest_CXXFLAGS) $(CXXFLAGS) -MT src/tests/tcm_min_asserts_unittest-testutil.obj -MD -MP -MF src/tests/$(DEPDIR)/tcm_min_asserts_unittest-testutil.Tpo -c -o src/tests/tcm_min_asserts_unittest-testutil.obj `if test -f 'src/tests/testutil.cc'; then $(CYGPATH_W) 'src/tests/testutil.cc'; else $(CYGPATH_W) '$(srcdir)/src/tests/testutil.cc'; fi`
	$(AM_V_at)$(am__mv) src/tests/$(DEPDIR)/tcm_min_asserts_unittest-testutil.Tpo src/tests/$(DEPDIR)/tcm_min_asserts_unittest-testutil.Po
#	$(AM_V_CXX)source='src/tests/testutil.cc' object='src/tests/tcm_min_asserts_unittest-testutil.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tcm_min_asserts_unittest_CXXFLAGS) $(CXXFLAGS) -c -o src/tests/tcm_min_asserts_unittest-testutil.obj `if test -f 'src/tests/testutil.cc'; then $(CYGPATH_W) 'src/tests/testutil.cc'; else $(CYGPATH_W) '$(srcdir)/src/tests/testutil.cc'; fi`

src/tcm_min_asserts_unittest-common.o: src/common.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tcm_min_asserts_unittest_CXXFLAGS) $(CXXFLAGS) -MT src/tcm_min_asserts_unittest-common.o -MD -MP -MF src/$(DEPDIR)/tcm_min_asserts_unittest-common.Tpo -c -o src/tcm_min_asserts_unittest-common.o `test -f 'src/common.cc' || echo '$(srcdir)/'`src/common.cc
	$(AM_V_at)$(am__mv) src/$(DEPDIR)/tcm_min_asserts_unittest-common.Tpo src/$(DEPDIR)/tcm_min_asserts_unittest-common.Po
#	$(AM_V_CXX)source='src/common.cc' object='src/tcm_min_asserts_unittest-common.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tcm_min_asserts_unittest_CXXFLAGS) $(CXXFLAGS) -c -o src/tcm_min_asserts_unittest-common.o `test -f 'src/common.cc' || echo '$(srcdir)/'`src/common.cc

src/tcm_min_asserts_unittest-common.obj: src/common.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tcm_min_asserts_unittest_CXXFLAGS) $(CXXFLAGS) -MT src/tcm_min_asserts_unittest-common.obj -MD -MP -MF src/$(DEPDIR)/tcm_min_asserts_unittest-common.Tpo -c -o src/tcm_min_asserts_unittest-common.obj `if test -f 'src/common.cc'; then $(CYGPATH_W) 'src/common.cc'; else $(CYGPATH_W) '$(srcdir)/src/common.cc'; fi`
	$(AM_V_at)$(am__mv) src/$(DEPDIR)/tcm_min_asserts_unittest-common.Tpo src/$(DEPDIR)/tcm_min_asserts_unittest-common.Po
#	$(AM_V_CXX)source='src/common.cc' object='src/tcm_min_asserts_unittest-common.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tcm_min_asserts_unittest_CXXFLAGS) $(CXXFLAGS) -c -o src/tcm_min_asserts_unittest-common.obj `if test -f 'src/common.cc'; then $(CYGPATH_W) 'src/common.cc'; else $(CYGPATH_W) '$(srcdir)/src/common.cc'; fi`

src/tcm_min_asserts_unittest-internal_logging.o: src/internal_logging.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tcm_min_asserts_unittest_CXXFLAGS) $(CXXFLAGS) -MT src/tcm_min_asserts_unittest-internal_logging.o -MD -MP -MF src/$(DEPDIR)/tcm_min_asserts_unittest-internal_logging.Tpo -c -o src/tcm_min_asserts_unittest-internal_logging.o `test -f 'src/internal_logging.cc' || echo '$(srcdir)/'`src/internal_logging.cc
	$(AM_V_at)$(am__mv) src/$(DEPDIR)/tcm_min_asserts_unittest-internal_logging.Tpo src/$(DEPDIR)/tcm_min_asserts_unittest-internal_logging.Po
#	$(AM_V_CXX)source='src/internal_logging.cc' object='src/tcm_min_asserts_unittest-internal_logging.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tcm_min_asserts_unittest_CXXFLAGS) $(CXXFLAGS) -c -o src/tcm_min_asserts_unittest-internal_logging.o `test -f 'src/internal_logging.cc' || echo '$(srcdir)/'`src/internal_logging.cc

src/tcm_min_asserts_unittest-internal_logging.obj: src/internal_logging.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tcm_min_asserts_unittest_CXXFLAGS) $(CXXFLAGS) -MT src/tcm_min_asserts_unittest-internal_logging.obj -MD -MP -MF src/$(DEPDIR)/tcm_min_asserts_unittest-internal_logging.Tpo -c -o src/tcm_min_asserts_unittest-internal_logging.obj `if test -f 'src/internal_logging.cc'; then $(CYGPATH_W) 'src/internal_logging.cc'; else $(CYGPATH_W) '$(srcdir)/src/internal_logging.cc'; fi`
	$(AM_V_at)$(am__mv) src/$(DEPDIR)/tcm_min_asserts_unittest-internal_logging.Tpo src/$(DEPDIR)/tcm_min_asserts_unittest-internal_logging.Po
#	$(AM_V_CXX)source='src/internal_logging.cc' object='src/tcm_min_asserts_unittest-internal_logging.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tcm_min_asserts_unittest_CXXFLAGS) $(CXXFLAGS) -c -o src/tcm_min_asserts_unittest-internal_logging.obj `if test -f 'src/internal_logging.cc'; then $(CYGPATH_W) 'src/internal_logging.cc'; else $(CYGPATH_W) '$(srcdir)/src/internal_logging.cc'; fi`

src/tcm_min_asserts_unittest-system-alloc.o: src/system-alloc.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tcm_min_asserts_unittest_CXXFLAGS) $(CXXFLAGS) -MT src/tcm_min_asserts_unittest-system-alloc.o -MD -MP -MF src/$(DEPDIR)/tcm_min_asserts_unittest-system-alloc.Tpo -c -o src/tcm_min_asserts_unittest-system-alloc.o `test -f 'src/system-alloc.cc' || echo '$(srcdir)/'`src/system-alloc.cc
	$(AM_V_at)$(am__mv) src/$(DEPDIR)/tcm_min_asserts_unittest-system-alloc.Tpo src/$(DEPDIR)/tcm_min_asserts_unittest-system-alloc.Po
#	$(AM_V_CXX)source='src/system-alloc.cc' object='src/tcm_min_asserts_unittest-system-alloc.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tcm_min_asserts_unittest_CXXFLAGS) $(CXXFLAGS) -c -o src/tcm_min_asserts_unittest-system-alloc.o `test -f 'src/system-alloc.cc' || echo '$(srcdir)/'`src/system-alloc.cc

src/tcm_min_asserts_unittest-system-alloc.obj: src/system-alloc.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tcm_min_asserts_unittest_CXXFLAGS) $(CXXFLAGS) -MT src/tcm_min_asserts_unittest-system-alloc.obj -MD -MP -MF src/$(DEPDIR)/tcm_min_asserts_unittest-system-alloc.Tpo -c -o src/tcm_min_asserts_unittest-system-alloc.obj `if test -f 'src/system-alloc.cc'; then $(CYGPATH_W) 'src/system-alloc.cc'; else $(CYGPATH_W) '$(srcdir)/src/system-alloc.cc'; fi`
	$(AM_V_at)$(am__mv) src/$(DEPDIR)/tcm_min_asserts_unittest-system-alloc.Tpo src/$(DEPDIR)/tcm_min_asserts_unittest-system-alloc.Po
#	$(AM_V_CXX)source='src/system-alloc.cc' object='src/tcm_min_asserts_unittest-system-alloc.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tcm_min_asserts_unittest_CXXFLAGS) $(CXXFLAGS) -c -o src/tcm_min_asserts_unittest-system-alloc.obj `if test -f 'src/system-alloc.cc'; then $(CYGPATH_W) 'src/system-alloc.cc'; else $(CYGPATH_W) '$(srcdir)/src/system-alloc.cc'; fi`

src/tcm_min_asserts_unittest-memfs_malloc.o: src/memfs_malloc.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tcm_min_asserts_unittest_CXXFLAGS) $(CXXFLAGS) -MT src/tcm_min_asserts_unittest-memfs_malloc.o -MD -MP -MF src/$(DEPDIR)/tcm_min_asserts_unittest-memfs_malloc.Tpo -c -o src/tcm_min_asserts_unittest-memfs_malloc.o `test -f 'src/memfs_malloc.cc' || echo '$(srcdir)/'`src/memfs_malloc.cc
	$(AM_V_at)$(am__mv) src/$(DEPDIR)/tcm_min_asserts_unittest-memfs_malloc.Tpo src/$(DEPDIR)/tcm_min_asserts_unittest-memfs_malloc.Po
#	$(AM_V_CXX)source='src/memfs_malloc.cc' object='src/tcm_min_asserts_unittest-memfs_malloc.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tcm_min_asserts_unittest_CXXFLAGS) $(CXXFLAGS) -c -o src/tcm_min_asserts_unittest-memfs_malloc.o `test -f 'src/memfs_malloc.cc' || echo '$(srcdir)/'`src/memfs_malloc.cc

src/tcm_min_asserts_unittest-memfs_malloc.obj: src/memfs_malloc.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tcm_min_asserts_unittest_CXXFLAGS) $(CXXFLAGS) -MT src/tcm_min_asserts_unittest-memfs_malloc.obj -MD -MP -MF src/$(DEPDIR)/tcm_min_asserts_unittest-memfs_malloc.Tpo -c -o src/tcm_min_asserts_unittest-memfs_malloc.obj `if test -f 'src/memfs_malloc.cc'; then $(CYGPATH_W) 'src/memfs_malloc.cc'; else $(CYGPATH_W) '$(srcdir)/src/memfs_malloc.cc'; fi`
	$(AM_V_at)$(am__mv) src/$(DEPDIR)/tcm_min_asserts_unittest-memfs_malloc.Tpo src/$(DEPDIR)/tcm_min_asserts_unittest-memfs_malloc.Po
#	$(AM_V_CXX)source='src/memfs_malloc.cc' object='src/tcm_min_asserts_unittest-memfs_malloc.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tcm_min_asserts_unittest_CXXFLAGS) $(CXXFLAGS) -c -o src/tcm_min_asserts_unittest-memfs_malloc.obj `if test -f 'src/memfs_malloc.cc'; then $(CYGPATH_W) 'src/memfs_malloc.cc'; else $(CYGPATH_W) '$(srcdir)/src/memfs_malloc.cc'; fi`

src/tcm_min_asserts_unittest-central_freelist.o: src/central_freelist.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tcm_min_asserts_unittest_CXXFLAGS) $(CXXFLAGS) -MT src/tcm_min_asserts_unittest-central_freelist.o -MD -MP -MF src/$(DEPDIR)/tcm_min_asserts_unittest-central_freelist.Tpo -c -o src/tcm_min_asserts_unittest-central_freelist.o `test -f 'src/central_freelist.cc' || echo '$(srcdir)/'`src/central_freelist.cc
	$(AM_V_at)$(am__mv) src/$(DEPDIR)/tcm_min_asserts_unittest-central_freelist.Tpo src/$(DEPDIR)/tcm_min_asserts_unittest-central_freelist.Po
#	$(AM_V_CXX)source='src/central_freelist.cc' object='src/tcm_min_asserts_unittest-central_freelist.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tcm_min_asserts_unittest_CXXFLAGS) $(CXXFLAGS) -c -o src/tcm_min_asserts_unittest-central_freelist.o `test -f 'src/central_freelist.cc' || echo '$(srcdir)/'`src/central_freelist.cc

src/tcm_min_asserts_unittest-central_freelist.obj: src/central_freelist.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tcm_min_asserts_unittest_CXXFLAGS) $(CXXFLAGS) -MT src/tcm_min_asserts_unittest-central_freelist.obj -MD -MP -MF src/$(DEPDIR)/tcm_min_asserts_unittest-central_freelist.Tpo -c -o src/tcm_min_asserts_unittest-central_freelist.obj `if test -f 'src/central_freelist.cc'; then $(CYGPATH_W) 'src/central_freelist.cc'; else $(CYGPATH_W) '$(srcdir)/src/central_freelist.cc'; fi`
	$(AM_V_at)$(am__mv) src/$(DEPDIR)/tcm_min_asserts_unittest-central_freelist.Tpo src/$(DEPDIR)/tcm_min_asserts_unittest-central_freelist.Po
#	$(AM_V_CXX)source='src/central_freelist.cc' object='src/tcm_min_asserts_unittest-central_freelist.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tcm_min_asserts_unittest_CXXFLAGS) $(CXXFLAGS) -c -o src/tcm_min_asserts_unittest-central_freelist.obj `if test -f 'src/central_freelist.cc'; then $(CYGPATH_W) 'src/central_freelist.cc'; else $(CYGPATH_W) '$(srcdir)/src/central_freelist.cc'; fi`

src/tcm_min_asserts_unittest-page_heap.o: src/page_heap.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tcm_min_asserts_unittest_CXXFLAGS) $(CXXFLAGS) -MT src/tcm_min_asserts_unittest-page_heap.o -MD -MP -MF src/$(DEPDIR)/tcm_min_asserts_unittest-page_heap.Tpo -c -o src/tcm_min_asserts_unittest-page_heap.o `test -f 'src/page_heap.cc' || echo '$(srcdir)/'`src/page_heap.cc
	$(AM_V_at)$(am__mv) src/$(DEPDIR)/tcm_min_asserts_unittest-page_heap.Tpo src/$(DEPDIR)/tcm_min_asserts_unittest-page_heap.Po
#	$(AM_V_CXX)source='src/page_heap.cc' object='src/tcm_min_asserts_unittest-page_heap.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tcm_min_asserts_unittest_CXXFLAGS) $(CXXFLAGS) -c -o src/tcm_min_asserts_unittest-page_heap.o `test -f 'src/page_heap.cc' || echo '$(srcdir)/'`src/page_heap.cc

src/tcm_min_asserts_unittest-page_heap.obj: src/page_heap.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tcm_min_asserts_unittest_CXXFLAGS) $(CXXFLAGS) -MT src/tcm_min_asserts_unittest-page_heap.obj -MD -MP -MF src/$(DEPDIR)/tcm_min_asserts_unittest-page_heap.Tpo -c -o src/tcm_min_asserts_unittest-page_heap.obj `if test -f 'src/page_heap.cc'; then $(CYGPATH_W) 'src/page_heap.cc'; else $(CYGPATH_W) '$(srcdir)/src/page_heap.cc'; fi`
	$(AM_V_at)$(am__mv) src/$(DEPDIR)/tcm_min_asserts_unittest-page_heap.Tpo src/$(DEPDIR)/tcm_min_asserts_unittest-page_heap.Po
#	$(AM_V_CXX)source='src/page_heap.cc' object='src/tcm_min_asserts_unittest-page_heap.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tcm_min_asserts_unittest_CXXFLAGS) $(CXXFLAGS) -c -o src/tcm_min_asserts_unittest-page_heap.obj `if test -f 'src/page_heap.cc'; then $(CYGPATH_W) 'src/page_heap.cc'; else $(CYGPATH_W) '$(srcdir)/src/page_heap.cc'; fi`

src/tcm_min_asserts_unittest-sampler.o: src/sampler.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tcm_min_asserts_unittest_CXXFLAGS) $(CXXFLAGS) -MT src/tcm_min_asserts_unittest-sampler.o -MD -MP -MF src/$(DEPDIR)/tcm_min_asserts_unittest-sampler.Tpo -c -o src/tcm_min_asserts_unittest-sampler.o `test -f 'src/sampler.cc' || echo '$(srcdir)/'`src/sampler.cc
	$(AM_V_at)$(am__mv) src/$(DEPDIR)/tcm_min_asserts_unittest-sampler.Tpo src/$(DEPDIR)/tcm_min_asserts_unittest-sampler.Po
#	$(AM_V_CXX)source='src/sampler.cc' object='src/tcm_min_asserts_unittest-sampler.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tcm_min_asserts_unittest_CXXFLAGS) $(CXXFLAGS) -c -o src/tcm_min_asserts_unittest-sampler.o `test -f 'src/sampler.cc' || echo '$(srcdir)/'`src/sampler.cc

src/tcm_min_asserts_unittest-sampler.obj: src/sampler.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tcm_min_asserts_unittest_CXXFLAGS) $(CXXFLAGS) -MT src/tcm_min_asserts_unittest-sampler.obj -MD -MP -MF src/$(DEPDIR)/tcm_min_asserts_unittest-sampler.Tpo -c -o src/tcm_min_asserts_unittest-sampler.obj `if test -f 'src/sampler.cc'; then $(CYGPATH_W) 'src/sampler.cc'; else $(CYGPATH_W) '$(srcdir)/src/sampler.cc'; fi`
	$(AM_V_at)$(am__mv) src/$(DEPDIR)/tcm_min_asserts_unittest-sampler.Tpo src/$(DEPDIR)/tcm_min_asserts_unittest-sampler.Po
#	$(AM_V_CXX)source='src/sampler.cc' object='src/tcm_min_asserts_unittest-sampler.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tcm_min_asserts_unittest_CXXFLAGS) $(CXXFLAGS) -c -o src/tcm_min_asserts_unittest-sampler.obj `if test -f 'src/sampler.cc'; then $(CYGPATH_W) 'src/sampler.cc'; else $(CYGPATH_W) '$(srcdir)/src/sampler.cc'; fi`

src/tcm_min_asserts_unittest-span.o: src/span.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tcm_min_asserts_unittest_CXXFLAGS) $(CXXFLAGS) -MT src/tcm_min_asserts_unittest-span.o -MD -MP -MF src/$(DEPDIR)/tcm_min_asserts_unittest-span.Tpo -c -o src/tcm_min_asserts_unittest-span.o `test -f 'src/span.cc' || echo '$(srcdir)/'`src/span.cc
	$(AM_V_at)$(am__mv) src/$(DEPDIR)/tcm_min_asserts_unittest-span.Tpo src/$(DEPDIR)/tcm_min_asserts_unittest-span.Po
#	$(AM_V_CXX)source='src/span.cc' object='src/tcm_min_asserts_unittest-span.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tcm_min_asserts_unittest_CXXFLAGS) $(CXXFLAGS) -c -o src/tcm_min_asserts_unittest-span.o `test -f 'src/span.cc' || echo '$(srcdir)/'`src/span.cc

src/tcm_min_asserts_unittest-span.obj: src/span.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tcm_min_asserts_unittest_CXXFLAGS) $(CXXFLAGS) -MT src/tcm_min_asserts_unittest-span.obj -MD -MP -MF src/$(DEPDIR)/tcm_min_asserts_unittest-span.Tpo -c -o src/tcm_min_asserts_unittest-span.obj `if test -f 'src/span.cc'; then $(CYGPATH_W) 'src/span.cc'; else $(CYGPATH_W) '$(srcdir)/src/span.cc'; fi`
	$(AM_V_at)$(am__mv) src/$(DEPDIR)/tcm_min_asserts_unittest-span.Tpo src/$(DEPDIR)/tcm_min_asserts_unittest-span.Po
#	$(AM_V_CXX)source='src/span.cc' object='src/tcm_min_asserts_unittest-span.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tcm_min_asserts_unittest_CXXFLAGS) $(CXXFLAGS) -c -o src/tcm_min_asserts_unittest-span.obj `if test -f 'src/span.cc'; then $(CYGPATH_W) 'src/span.cc'; else $(CYGPATH_W) '$(srcdir)/src/span.cc'; fi`

src/tcm_min_asserts_unittest-stack_trace_table.o: src/stack_trace_table.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tcm_min_asserts_unittest_CXXFLAGS) $(CXXFLAGS) -MT src/tcm_min_asserts_unittest-stack_trace_table.o -MD -MP -MF src/$(DEPDIR)/tcm_min_asserts_unittest-stack_trace_table.Tpo -c -o src/tcm_min_asserts_unittest-stack_trace_table.o `test -f 'src/stack_trace_table.cc' || echo '$(srcdir)/'`src/stack_trace_table.cc
	$(AM_V_at)$(am__mv) src/$(DEPDIR)/tcm_min_asserts_unittest-stack_trace_table.Tpo src/$(DEPDIR)/tcm_min_asserts_unittest-stack_trace_table.Po
#	$(AM_V_CXX)source='src/stack_trace_table.cc' object='src/tcm_min_asserts_unittest-stack_trace_table.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tcm_min_asserts_unittest_CXXFLAGS) $(CXXFLAGS) -c -o src/tcm_min_asserts_unittest-stack_trace_table.o `test -f 'src/stack_trace_table.cc' || echo '$(srcdir)/'`src/stack_trace_table.cc

src/tcm_min_asserts_unittest-stack_trace_table.obj: src/stack_trace_table.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tcm_min_asserts_unittest_CXXFLAGS) $(CXXFLAGS) -MT src/tcm_min_asserts_unittest-stack_trace_table.obj -MD -MP -MF src/$(DEPDIR)/tcm_min_asserts_unittest-stack_trace_table.Tpo -c -o src/tcm_min_asserts_unittest-stack_trace_table.obj `if test -f 'src/stack_trace_table.cc'; then $(CYGPATH_W) 'src/stack_trace_table.cc'; else $(CYGPATH_W) '$(srcdir)/src/stack_trace_table.cc'; fi`
	$(AM_V_at)$(am__mv) src/$(DEPDIR)/tcm_min_asserts_unittest-stack_trace_table.Tpo src/$(DEPDIR)/tcm_min_asserts_unittest-stack_trace_table.Po
#	$(AM_V_CXX)source='src/stack_trace_table.cc' object='src/tcm_min_asserts_unittest-stack_trace_table.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tcm_min_asserts_unittest_CXXFLAGS) $(CXXFLAGS) -c -o src/tcm_min_asserts_unittest-stack_trace_table.obj `if test -f 'src/stack_trace_table.cc'; then $(CYGPATH_W) 'src/stack_trace_table.cc'; else $(CYGPATH_W) '$(srcdir)/src/stack_trace_table.cc'; fi`

src/tcm_min_asserts_unittest-static_vars.o: src/static_vars.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tcm_min_asserts_unittest_CXXFLAGS) $(CXXFLAGS) -MT src/tcm_min_asserts_unittest-static_vars.o -MD -MP -MF src/$(DEPDIR)/tcm_min_asserts_unittest-static_vars.Tpo -c -o src/tcm_min_asserts_unittest-static_vars.o `test -f 'src/static_vars.cc' || echo '$(srcdir)/'`src/static_vars.cc
	$(AM_V_at)$(am__mv) src/$(DEPDIR)/tcm_min_asserts_unittest-static_vars.Tpo src/$(DEPDIR)/tcm_min_asserts_unittest-static_vars.Po
#	$(AM_V_CXX)source='src/static_vars.cc' object='src/tcm_min_asserts_unittest-static_vars.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tcm_min_asserts_unittest_CXXFLAGS) $(CXXFLAGS) -c -o src/tcm_min_asserts_unittest-static_vars.o `test -f 'src/static_vars.cc' || echo '$(srcdir)/'`src/static_vars.cc

src/tcm_min_asserts_unittest-static_vars.obj: src/static_vars.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tcm_min_asserts_unittest_CXXFLAGS) $(CXXFLAGS) -MT src/tcm_min_asserts_unittest-static_vars.obj -MD -MP -MF src/$(DEPDIR)/tcm_min_asserts_unittest-static_vars.Tpo -c -o src/tcm_min_asserts_unittest-static_vars.obj `if test -f 'src/static_vars.cc'; then $(CYGPATH_W) 'src/static_vars.cc'; else $(CYGPATH_W) '$(srcdir)/src/static_vars.cc'; fi`
	$(AM_V_at)$(am__mv) src/$(DEPDIR)/tcm_min_asserts_unittest-static_vars.Tpo src/$(DEPDIR)/tcm_min_asserts_unittest-static_vars.Po
#	$(AM_V_CXX)source='src/static_vars.cc' object='src/tcm_min_asserts_unittest-static_vars.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tcm_min_asserts_unittest_CXXFLAGS) $(CXXFLAGS) -c -o src/tcm_min_asserts_unittest-static_vars.obj `if test -f 'src/static_vars.cc'; then $(CYGPATH_W) 'src/static_vars.cc'; else $(CYGPATH_W) '$(srcdir)/src/static_vars.cc'; fi`

src/tcm_min_asserts_unittest-symbolize.o: src/symbolize.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tcm_min_asserts_unittest_CXXFLAGS) $(CXXFLAGS) -MT src/tcm_min_asserts_unittest-symbolize.o -MD -MP -MF src/$(DEPDIR)/tcm_min_asserts_unittest-symbolize.Tpo -c -o src/tcm_min_asserts_unittest-symbolize.o `test -f 'src/symbolize.cc' || echo '$(srcdir)/'`src/symbolize.cc
	$(AM_V_at)$(am__mv) src/$(DEPDIR)/tcm_min_asserts_unittest-symbolize.Tpo src/$(DEPDIR)/tcm_min_asserts_unittest-symbolize.Po
#	$(AM_V_CXX)source='src/symbolize.cc' object='src/tcm_min_asserts_unittest-symbolize.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tcm_min_asserts_unittest_CXXFLAGS) $(CXXFLAGS) -c -o src/tcm_min_asserts_unittest-symbolize.o `test -f 'src/symbolize.cc' || echo '$(srcdir)/'`src/symbolize.cc

src/tcm_min_asserts_unittest-symbolize.obj: src/symbolize.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tcm_min_asserts_unittest_CXXFLAGS) $(CXXFLAGS) -MT src/tcm_min_asserts_unittest-symbolize.obj -MD -MP -MF src/$(DEPDIR)/tcm_min_asserts_unittest-symbolize.Tpo -c -o src/tcm_min_asserts_unittest-symbolize.obj `if test -f 'src/symbolize.cc'; then $(CYGPATH_W) 'src/symbolize.cc'; else $(CYGPATH_W) '$(srcdir)/src/symbolize.cc'; fi`
	$(AM_V_at)$(am__mv) src/$(DEPDIR)/tcm_min_asserts_unittest-symbolize.Tpo src/$(DEPDIR)/tcm_min_asserts_unittest-symbolize.Po
#	$(AM_V_CXX)source='src/symbolize.cc' object='src/tcm_min_asserts_unittest-symbolize.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tcm_min_asserts_unittest_CXXFLAGS) $(CXXFLAGS) -c -o src/tcm_min_asserts_unittest-symbolize.obj `if test -f 'src/symbolize.cc'; then $(CYGPATH_W) 'src/symbolize.cc'; else $(CYGPATH_W) '$(srcdir)/src/symbolize.cc'; fi`

src/tcm_min_asserts_unittest-thread_cache.o: src/thread_cache.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tcm_min_asserts_unittest_CXXFLAGS) $(CXXFLAGS) -MT src/tcm_min_asserts_unittest-thread_cache.o -MD -MP -MF src/$(DEPDIR)/tcm_min_asserts_unittest-thread_cache.Tpo -c -o src/tcm_min_asserts_unittest-thread_cache.o `test -f 'src/thread_cache.cc' || echo '$(srcdir)/'`src/thread_cache.cc
	$(AM_V_at)$(am__mv) src/$(DEPDIR)/tcm_min_asserts_unittest-thread_cache.Tpo src/$(DEPDIR)/tcm_min_asserts_unittest-thread_cache.Po
#	$(AM_V_CXX)source='src/thread_cache.cc' object='src/tcm_min_asserts_unittest-thread_cache.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tcm_min_asserts_unittest_CXXFLAGS) $(CXXFLAGS) -c -o src/tcm_min_asserts_unittest-thread_cache.o `test -f 'src/thread_cache.cc' || echo '$(srcdir)/'`src/thread_cache.cc

src/tcm_min_asserts_unittest-thread_cache.obj: src/thread_cache.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tcm_min_asserts_unittest_CXXFLAGS) $(CXXFLAGS) -MT src/tcm_min_asserts_unittest-thread_cache.obj -MD -MP -MF src/$(DEPDIR)/tcm_min_asserts_unittest-thread_cache.Tpo -c -o src/tcm_min_asserts_unittest-thread_cache.obj `if test -f 'src/thread_cache.cc'; then $(CYGPATH_W) 'src/thread_cache.cc'; else $(CYGPATH_W) '$(srcdir)/src/thread_cache.cc'; fi`
	$(AM_V_at)$(am__mv) src/$(DEPDIR)/tcm_min_asserts_unittest-thread_cache.Tpo src/$(DEPDIR)/tcm_min_asserts_unittest-thread_cache.Po
#	$(AM_V_CXX)source='src/thread_cache.cc' object='src/tcm_min_asserts_unittest-thread_cache.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tcm_min_asserts_unittest_CXXFLAGS) $(CXXFLAGS) -c -o src/tcm_min_asserts_unittest-thread_cache.obj `if test -f 'src/thread_cache.cc'; then $(CYGPATH_W) 'src/thread_cache.cc'; else $(CYGPATH_W) '$(srcdir)/src/thread_cache.cc'; fi`

src/tcm_min_asserts_unittest-malloc_hook.o: src/malloc_hook.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tcm_min_asserts_unittest_CXXFLAGS) $(CXXFLAGS) -MT src/tcm_min_asserts_unittest-malloc_hook.o -MD -MP -MF src/$(DEPDIR)/tcm_min_asserts_unittest-malloc_hook.Tpo -c -o src/tcm_min_asserts_unittest-malloc_hook.o `test -f 'src/malloc_hook.cc' || echo '$(srcdir)/'`src/malloc_hook.cc
	$(AM_V_at)$(am__mv) src/$(DEPDIR)/tcm_min_asserts_unittest-malloc_hook.Tpo src/$(DEPDIR)/tcm_min_asserts_unittest-malloc_hook.Po
#	$(AM_V_CXX)source='src/malloc_hook.cc' object='src/tcm_min_asserts_unittest-malloc_hook.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tcm_min_asserts_unittest_CXXFLAGS) $(CXXFLAGS) -c -o src/tcm_min_asserts_unittest-malloc_hook.o `test -f 'src/malloc_hook.cc' || echo '$(srcdir)/'`src/malloc_hook.cc

src/tcm_min_asserts_unittest-malloc_hook.obj: src/malloc_hook.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tcm_min_asserts_unittest_CXXFLAGS) $(CXXFLAGS) -MT src/tcm_min_asserts_unittest-malloc_hook.obj -MD -MP -MF src/$(DEPDIR)/tcm_min_asserts_unittest-malloc_hook.Tpo -c -o src/tcm_min_asserts_unittest-malloc_hook.obj `if test -f 'src/malloc_hook.cc'; then $(CYGPATH_W) 'src/malloc_hook.cc'; else $(CYGPATH_W) '$(srcdir)/src/malloc_hook.cc'; fi`
	$(AM_V_at)$(am__mv) src/$(DEPDIR)/tcm_min_asserts_unittest-malloc_hook.Tpo src/$(DEPDIR)/tcm_min_asserts_unittest-malloc_hook.Po
#	$(AM_V_CXX)source='src/malloc_hook.cc' object='src/tcm_min_asserts_unittest-malloc_hook.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tcm_min_asserts_unittest_CXXFLAGS) $(CXXFLAGS) -c -o src/tcm_min_asserts_unittest-malloc_hook.obj `if test -f 'src/malloc_hook.cc'; then $(CYGPATH_W) 'src/malloc_hook.cc'; else $(CYGPATH_W) '$(srcdir)/src/malloc_hook.cc'; fi`

src/tcm_min_asserts_unittest-malloc_extension.o: src/malloc_extension.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tcm_min_asserts_unittest_CXXFLAGS) $(CXXFLAGS) -MT src/tcm_min_asserts_unittest-malloc_extension.o -MD -MP -MF src/$(DEPDIR)/tcm_min_asserts_unittest-malloc_extension.Tpo -c -o src/tcm_min_asserts_unittest-malloc_extension.o `test -f 'src/malloc_extension.cc' || echo '$(srcdir)/'`src/malloc_extension.cc
	$(AM_V_at)$(am__mv) src/$(DEPDIR)/tcm_min_asserts_unittest-malloc_extension.Tpo src/$(DEPDIR)/tcm_min_asserts_unittest-malloc_extension.Po
#	$(AM_V_CXX)source='src/malloc_extension.cc' object='src/tcm_min_asserts_unittest-malloc_extension.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tcm_min_asserts_unittest_CXXFLAGS) $(CXXFLAGS) -c -o src/tcm_min_asserts_unittest-malloc_extension.o `test -f 'src/malloc_extension.cc' || echo '$(srcdir)/'`src/malloc_extension.cc

src/tcm_min_asserts_unittest-malloc_extension.obj: src/malloc_extension.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tcm_min_asserts_unittest_CXXFLAGS) $(CXXFLAGS) -MT src/tcm_min_asserts_unittest-malloc_extension.obj -MD -MP -MF src/$(DEPDIR)/tcm_min_asserts_unittest-malloc_extension.Tpo -c -o src/tcm_min_asserts_unittest-malloc_extension.obj `if test -f 'src/malloc_extension.cc'; then $(CYGPATH_W) 'src/malloc_extension.cc'; else $(CYGPATH_W) '$(srcdir)/src/malloc_extension.cc'; fi`
	$(AM_V_at)$(am__mv) src/$(DEPDIR)/tcm_min_asserts_unittest-malloc_extension.Tpo src/$(DEPDIR)/tcm_min_asserts_unittest-malloc_extension.Po
#	$(AM_V_CXX)source='src/malloc_extension.cc' object='src/tcm_min_asserts_unittest-malloc_extension.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tcm_min_asserts_unittest_CXXFLAGS) $(CXXFLAGS) -c -o src/tcm_min_asserts_unittest-malloc_extension.obj `if test -f 'src/malloc_extension.cc'; then $(CYGPATH_W) 'src/malloc_extension.cc'; else $(CYGPATH_W) '$(srcdir)/src/malloc_extension.cc'; fi`

src/tcm_min_asserts_unittest-tcmalloc.o: src/tcmalloc.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tcm_min_asserts_unittest_CXXFLAGS) $(CXXFLAGS) -MT src/tcm_min_asserts_unittest-tcmalloc.o -MD -MP -MF src/$(DEPDIR)/tcm_min_asserts_unittest-tcmalloc.Tpo -c -o src/tcm_min_asserts_unittest-tcmalloc.o `test -f 'src/tcmalloc.cc' || echo '$(srcdir)/'`src/tcmalloc.cc
	$(AM_V_at)$(am__mv) src/$(DEPDIR)/tcm_min_asserts_unittest-tcmalloc.Tpo src/$(DEPDIR)/tcm_min_asserts_unittest-tcmalloc.Po
#	$(AM_V_CXX)source='src/tcmalloc.cc' object='src/tcm_min_asserts_unittest-tcmalloc.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tcm_min_asserts_unittest_CXXFLAGS) $(CXXFLAGS) -c -o src/tcm_min_asserts_unittest-tcmalloc.o `test -f 'src/tcmalloc.cc' || echo '$(srcdir)/'`src/tcmalloc.cc

src/tcm_min_asserts_unittest-tcmalloc.obj: src/tcmalloc.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tcm_min_asserts_unittest_CXXFLAGS) $(CXXFLAGS) -MT src/tcm_min_asserts_unittest-tcmalloc.obj -MD -MP -MF src/$(DEPDIR)/tcm_min_asserts_unittest-tcmalloc.Tpo -c -o src/tcm_min_asserts_unittest-tcmalloc.obj `if test -f 'src/tcmalloc.cc'; then $(CYGPATH_W) 'src/tcmalloc.cc'; else $(CYGPATH_W) '$(srcdir)/src/tcmalloc.cc'; fi`
	$(AM_V_at)$(am__mv) src/$(DEPDIR)/tcm_min_asserts_unittest-tcmalloc.Tpo src/$(DEPDIR)/tcm_min_asserts_unittest-tcmalloc.Po
#	$(AM_V_CXX)source='src/tcmalloc.cc' object='src/tcm_min_asserts_unittest-tcmalloc.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tcm_min_asserts_unittest_CXXFLAGS) $(CXXFLAGS) -c -o src/tcm_min_asserts_unittest-tcmalloc.obj `if test -f 'src/tcmalloc.cc'; then $(CYGPATH_W) 'src/tcmalloc.cc'; else $(CYGPATH_W) '$(srcdir)/src/tcmalloc.cc'; fi`

src/tests/tcmalloc_and_profiler_unittest-tcmalloc_unittest.o: src/tests/tcmalloc_unittest.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tcmalloc_and_profiler_unittest_CXXFLAGS) $(CXXFLAGS) -MT src/tests/tcmalloc_and_profiler_unittest-tcmalloc_unittest.o -MD -MP -MF src/tests/$(DEPDIR)/tcmalloc_and_profiler_unittest-tcmalloc_unittest.Tpo -c -o src/tests/tcmalloc_and_profiler_unittest-tcmalloc_unittest.o `test -f 'src/tests/tcmalloc_unittest.cc' || echo '$(srcdir)/'`src/tests/tcmalloc_unittest.cc
	$(AM_V_at)$(am__mv) src/tests/$(DEPDIR)/tcmalloc_and_profiler_unittest-tcmalloc_unittest.Tpo src/tests/$(DEPDIR)/tcmalloc_and_profiler_unittest-tcmalloc_unittest.Po
#	$(AM_V_CXX)source='src/tests/tcmalloc_unittest.cc' object='src/tests/tcmalloc_and_profiler_unittest-tcmalloc_unittest.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tcmalloc_and_profiler_unittest_CXXFLAGS) $(CXXFLAGS) -c -o src/tests/tcmalloc_and_profiler_unittest-tcmalloc_unittest.o `test -f 'src/tests/tcmalloc_unittest.cc' || echo '$(srcdir)/'`src/tests/tcmalloc_unittest.cc

src/tests/tcmalloc_and_profiler_unittest-tcmalloc_unittest.obj: src/tests/tcmalloc_unittest.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tcmalloc_and_profiler_unittest_CXXFLAGS) $(CXXFLAGS) -MT src/tests/tcmalloc_and_profiler_unittest-tcmalloc_unittest.obj -MD -MP -MF src/tests/$(DEPDIR)/tcmalloc_and_profiler_unittest-tcmalloc_unittest.Tpo -c -o src/tests/tcmalloc_and_profiler_unittest-tcmalloc_unittest.obj `if test -f 'src/tests/tcmalloc_unittest.cc'; then $(CYGPATH_W) 'src/tests/tcmalloc_unittest.cc'; else $(CYGPATH_W) '$(srcdir)/src/tests/tcmalloc_unittest.cc'; fi`
	$(AM_V_at)$(am__mv) src/tests/$(DEPDIR)/tcmalloc_and_profiler_unittest-tcmalloc_unittest.Tpo src/tests/$(DEPDIR)/tcmalloc_and_profiler_unittest-tcmalloc_unittest.Po
#	$(AM_V_CXX)source='src/tests/tcmalloc_unittest.cc' object='src/tests/tcmalloc_and_profiler_unittest-tcmalloc_unittest.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tcmalloc_and_profiler_unittest_CXXFLAGS) $(CXXFLAGS) -c -o src/tests/tcmalloc_and_profiler_unittest-tcmalloc_unittest.obj `if test -f 'src/tests/tcmalloc_unittest.cc'; then $(CYGPATH_W) 'src/tests/tcmalloc_unittest.cc'; else $(CYGPATH_W) '$(srcdir)/src/tests/tcmalloc_unittest.cc'; fi`

src/tests/tcmalloc_and_profiler_unittest-testutil.o: src/tests/testutil.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tcmalloc_and_profiler_unittest_CXXFLAGS) $(CXXFLAGS) -MT src/tests/tcmalloc_and_profiler_unittest-testutil.o -MD -MP -MF src/tests/$(DEPDIR)/tcmalloc_and_profiler_unittest-testutil.Tpo -c -o src/tests/tcmalloc_and_profiler_unittest-testutil.o `test -f 'src/tests/testutil.cc' || echo '$(srcdir)/'`src/tests/testutil.cc
	$(AM_V_at)$(am__mv) src/tests/$(DEPDIR)/tcmalloc_and_profiler_unittest-testutil.Tpo src/tests/$(DEPDIR)/tcmalloc_and_profiler_unittest-testutil.Po
#	$(AM_V_CXX)source='src/tests/testutil.cc' object='src/tests/tcmalloc_and_profiler_unittest-testutil.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tcmalloc_and_profiler_unittest_CXXFLAGS) $(CXXFLAGS) -c -o src/tests/tcmalloc_and_profiler_unittest-testutil.o `test -f 'src/tests/testutil.cc' || echo '$(srcdir)/'`src/tests/testutil.cc

src/tests/tcmalloc_and_profiler_unittest-testutil.obj: src/tests/testutil.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tcmalloc_and_profiler_unittest_CXXFLAGS) $(CXXFLAGS) -MT src/tests/tcmalloc_and_profiler_unittest-testutil.obj -MD -MP -MF src/tests/$(DEPDIR)/tcmalloc_and_profiler_unittest-testutil.Tpo -c -o src/tests/tcmalloc_and_profiler_unittest-testutil.obj `if test -f 'src/tests/testutil.cc'; then $(CYGPATH_W) 'src/tests/testutil.cc'; else $(CYGPATH_W) '$(srcdir)/src/tests/testutil.cc'; fi`
	$(AM_V_at)$(am__mv) src/tests/$(DEPDIR)/tcmalloc_and_profiler_unittest-testutil.Tpo src/tests/$(DEPDIR)/tcmalloc_and_profiler_unittest-testutil.Po
#	$(AM_V_CXX)source='src/tests/testutil.cc' object='src/tests/tcmalloc_and_profiler_unittest-testutil.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tcmalloc_and_profiler_unittest_CXXFLAGS) $(CXXFLAGS) -c -o src/tests/tcmalloc_and_profiler_unittest-testutil.obj `if test -f 'src/tests/testutil.cc'; then $(CYGPATH_W) 'src/tests/testutil.cc'; else $(CYGPATH_W) '$(srcdir)/src/tests/testutil.cc'; fi`

src/tests/tcmalloc_both_unittest-tcmalloc_unittest.o: src/tests/tcmalloc_unittest.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tcmalloc_both_unittest_CXXFLAGS) $(CXXFLAGS) -MT src/tests/tcmalloc_both_unittest-tcmalloc_unittest.o -MD -MP -MF src/tests/$(DEPDIR)/tcmalloc_both_unittest-tcmalloc_unittest.Tpo -c -o src/tests/tcmalloc_both_unittest-tcmalloc_unittest.o `test -f 'src/tests/tcmalloc_unittest.cc' || echo '$(srcdir)/'`src/tests/tcmalloc_unittest.cc
	$(AM_V_at)$(am__mv) src/tests/$(DEPDIR)/tcmalloc_both_unittest-tcmalloc_unittest.Tpo src/tests/$(DEPDIR)/tcmalloc_both_unittest-tcmalloc_unittest.Po
#	$(AM_V_CXX)source='src/tests/tcmalloc_unittest.cc' object='src/tests/tcmalloc_both_unittest-tcmalloc_unittest.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tcmalloc_both_unittest_CXXFLAGS) $(CXXFLAGS) -c -o src/tests/tcmalloc_both_unittest-tcmalloc_unittest.o `test -f 'src/tests/tcmalloc_unittest.cc' || echo '$(srcdir)/'`src/tests/tcmalloc_unittest.cc

src/tests/tcmalloc_both_unittest-tcmalloc_unittest.obj: src/tests/tcmalloc_unittest.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tcmalloc_both_unittest_CXXFLAGS) $(CXXFLAGS) -MT src/tests/tcmalloc_both_unittest-tcmalloc_unittest.obj -MD -MP -MF src/tests/$(DEPDIR)/tcmalloc_both_unittest-tcmalloc_unittest.Tpo -c -o src/tests/tcmalloc_both_unittest-tcmalloc_unittest.obj `if test -f 'src/tests/tcmalloc_unittest.cc'; then $(CYGPATH_W) 'src/tests/tcmalloc_unittest.cc'; else $(CYGPATH_W) '$(srcdir)/src/tests/tcmalloc_unittest.cc'; fi`
	$(AM_V_at)$(am__mv) src/tests/$(DEPDIR)/tcmalloc_both_unittest-tcmalloc_unittest.Tpo src/tests/$(DEPDIR)/tcmalloc_both_unittest-tcmalloc_unittest.Po
#	$(AM_V_CXX)source='src/tests/tcmalloc_unittest.cc' object='src/tests/tcmalloc_both_unittest-tcmalloc_unittest.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tcmalloc_both_unittest_CXXFLAGS) $(CXXFLAGS) -c -o src/tests/tcmalloc_both_unittest-tcmalloc_unittest.obj `if test -f 'src/tests/tcmalloc_unittest.cc'; then $(CYGPATH_W) 'src/tests/tcmalloc_unittest.cc'; else $(CYGPATH_W) '$(srcdir)/src/tests/tcmalloc_unittest.cc'; fi`

src/tests/tcmalloc_both_unittest-testutil.o: src/tests/testutil.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tcmalloc_both_unittest_CXXFLAGS) $(CXXFLAGS) -MT src/tests/tcmalloc_both_unittest-testutil.o -MD -MP -MF src/tests/$(DEPDIR)/tcmalloc_both_unittest-testutil.Tpo -c -o src/tests/tcmalloc_both_unittest-testutil.o `test -f 'src/tests/testutil.cc' || echo '$(srcdir)/'`src/tests/testutil.cc
	$(AM_V_at)$(am__mv) src/tests/$(DEPDIR)/tcmalloc_both_unittest-testutil.Tpo src/tests/$(DEPDIR)/tcmalloc_both_unittest-testutil.Po
#	$(AM_V_CXX)source='src/tests/testutil.cc' object='src/tests/tcmalloc_both_unittest-testutil.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tcmalloc_both_unittest_CXXFLAGS) $(CXXFLAGS) -c -o src/tests/tcmalloc_both_unittest-testutil.o `test -f 'src/tests/testutil.cc' || echo '$(srcdir)/'`src/tests/testutil.cc

src/tests/tcmalloc_both_unittest-testutil.obj: src/tests/testutil.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tcmalloc_both_unittest_CXXFLAGS) $(CXXFLAGS) -MT src/tests/tcmalloc_both_unittest-testutil.obj -MD -MP -MF src/tests/$(DEPDIR)/tcmalloc_both_unittest-testutil.Tpo -c -o src/tests/tcmalloc_both_unittest-testutil.obj `if test -f 'src/tests/testutil.cc'; then $(CYGPATH_W) 'src/tests/testutil.cc'; else $(CYGPATH_W) '$(srcdir)/src/tests/testutil.cc'; fi`
	$(AM_V_at)$(am__mv) src/tests/$(DEPDIR)/tcmalloc_both_unittest-testutil.Tpo src/tests/$(DEPDIR)/tcmalloc_both_unittest-testutil.Po
#	$(AM_V_CXX)source='src/tests/testutil.cc' object='src/tests/tcmalloc_both_unittest-testutil.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tcmalloc_both_unittest_CXXFLAGS) $(CXXFLAGS) -c -o src/tests/tcmalloc_both_unittest-testutil.obj `if test -f 'src/tests/testutil.cc'; then $(CYGPATH_W) 'src/tests/testutil.cc'; else $(CYGPATH_W) '$(srcdir)/src/tests/testutil.cc'; fi`

src/tests/tcmalloc_debug_unittest-tcmalloc_unittest.o: src/tests/tcmalloc_unittest.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tcmalloc_debug_unittest_CXXFLAGS) $(CXXFLAGS) -MT src/tests/tcmalloc_debug_unittest-tcmalloc_unittest.o -MD -MP -MF src/tests/$(DEPDIR)/tcmalloc_debug_unittest-tcmalloc_unittest.Tpo -c -o src/tests/tcmalloc_debug_unittest-tcmalloc_unittest.o `test -f 'src/tests/tcmalloc_unittest.cc' || echo '$(srcdir)/'`src/tests/tcmalloc_unittest.cc
	$(AM_V_at)$(am__mv) src/tests/$(DEPDIR)/tcmalloc_debug_unittest-tcmalloc_unittest.Tpo src/tests/$(DEPDIR)/tcmalloc_debug_unittest-tcmalloc_unittest.Po
#	$(AM_V_CXX)source='src/tests/tcmalloc_unittest.cc' object='src/tests/tcmalloc_debug_unittest-tcmalloc_unittest.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tcmalloc_debug_unittest_CXXFLAGS) $(CXXFLAGS) -c -o src/tests/tcmalloc_debug_unittest-tcmalloc_unittest.o `test -f 'src/tests/tcmalloc_unittest.cc' || echo '$(srcdir)/'`src/tests/tcmalloc_unittest.cc

src/tests/tcmalloc_debug_unittest-tcmalloc_unittest.obj: src/tests/tcmalloc_unittest.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tcmalloc_debug_unittest_CXXFLAGS) $(CXXFLAGS) -MT src/tests/tcmalloc_debug_unittest-tcmalloc_unittest.obj -MD -MP -MF src/tests/$(DEPDIR)/tcmalloc_debug_unittest-tcmalloc_unittest.Tpo -c -o src/tests/tcmalloc_debug_unittest-tcmalloc_unittest.obj `if test -f 'src/tests/tcmalloc_unittest.cc'; then $(CYGPATH_W) 'src/tests/tcmalloc_unittest.cc'; else $(CYGPATH_W) '$(srcdir)/src/tests/tcmalloc_unittest.cc'; fi`
	$(AM_V_at)$(am__mv) src/tests/$(DEPDIR)/tcmalloc_debug_unittest-tcmalloc_unittest.Tpo src/tests/$(DEPDIR)/tcmalloc_debug_unittest-tcmalloc_unittest.Po
#	$(AM_V_CXX)source='src/tests/tcmalloc_unittest.cc' object='src/tests/tcmalloc_debug_unittest-tcmalloc_unittest.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tcmalloc_debug_unittest_CXXFLAGS) $(CXXFLAGS) -c -o src/tests/tcmalloc_debug_unittest-tcmalloc_unittest.obj `if test -f 'src/tests/tcmalloc_unittest.cc'; then $(CYGPATH_W) 'src/tests/tcmalloc_unittest.cc'; else $(CYGPATH_W) '$(srcdir)/src/tests/tcmalloc_unittest.cc'; fi`

src/tests/tcmalloc_debug_unittest-testutil.o: src/tests/testutil.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tcmalloc_debug_unittest_CXXFLAGS) $(CXXFLAGS) -MT src/tests/tcmalloc_debug_unittest-testutil.o -MD -MP -MF src/tests/$(DEPDIR)/tcmalloc_debug_unittest-testutil.Tpo -c -o src/tests/tcmalloc_debug_unittest-testutil.o `test -f 'src/tests/testutil.cc' || echo '$(srcdir)/'`src/tests/testutil.cc
	$(AM_V_at)$(am__mv) src/tests/$(DEPDIR)/tcmalloc_debug_unittest-testutil.Tpo src/tests/$(DEPDIR)/tcmalloc_debug_unittest-testutil.Po
#	$(AM_V_CXX)source='src/tests/testutil.cc' object='src/tests/tcmalloc_debug_unittest-testutil.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tcmalloc_debug_unittest_CXXFLAGS) $(CXXFLAGS) -c -o src/tests/tcmalloc_debug_unittest-testutil.o `test -f 'src/tests/testutil.cc' || echo '$(srcdir)/'`src/tests/testutil.cc

src/tests/tcmalloc_debug_unittest-testutil.obj: src/tests/testutil.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tcmalloc_debug_unittest_CXXFLAGS) $(CXXFLAGS) -MT src/tests/tcmalloc_debug_unittest-testutil.obj -MD -MP -MF src/tests/$(DEPDIR)/tcmalloc_debug_unittest-testutil.Tpo -c -o src/tests/tcmalloc_debug_unittest-testutil.obj `if test -f 'src/tests/testutil.cc'; then $(CYGPATH_W) 'src/tests/testutil.cc'; else $(CYGPATH_W) '$(srcdir)/src/tests/testutil.cc'; fi`
	$(AM_V_at)$(am__mv) src/tests/$(DEPDIR)/tcmalloc_debug_unittest-testutil.Tpo src/tests/$(DEPDIR)/tcmalloc_debug_unittest-testutil.Po
#	$(AM_V_CXX)source='src/tests/testutil.cc' object='src/tests/tcmalloc_debug_unittest-testutil.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tcmalloc_debug_unittest_CXXFLAGS) $(CXXFLAGS) -c -o src/tests/tcmalloc_debug_unittest-testutil.obj `if test -f 'src/tests/testutil.cc'; then $(CYGPATH_W) 'src/tests/testutil.cc'; else $(CYGPATH_W) '$(srcdir)/src/tests/testutil.cc'; fi`

src/tests/tcmalloc_large_heap_fragmentation_unittest-large_heap_fragmentation_unittest.o: src/tests/large_heap_fragmentation_unittest.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tcmalloc_large_heap_fragmentation_unittest_CXXFLAGS) $(CXXFLAGS) -MT src/tests/tcmalloc_large_heap_fragmentation_unittest-large_heap_fragmentation_unittest.o -MD -MP -MF src/tests/$(DEPDIR)/tcmalloc_large_heap_fragmentation_unittest-large_heap_fragmentation_unittest.Tpo -c -o src/tests/tcmalloc_large_heap_fragmentation_unittest-large_heap_fragmentation_unittest.o `test -f 'src/tests/large_heap_fragmentation_unittest.cc' || echo '$(srcdir)/'`src/tests/large_heap_fragmentation_unittest.cc
	$(AM_V_at)$(am__mv) src/tests/$(DEPDIR)/tcmalloc_large_heap_fragmentation_unittest-large_heap_fragmentation_unittest.Tpo src/tests/$(DEPDIR)/tcmalloc_large_heap_fragmentation_unittest-large_heap_fragmentation_unittest.Po
#	$(AM_V_CXX)source='src/tests/large_heap_fragmentation_unittest.cc' object='src/tests/tcmalloc_large_heap_fragmentation_unittest-large_heap_fragmentation_unittest.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tcmalloc_large_heap_fragmentation_unittest_CXXFLAGS) $(CXXFLAGS) -c -o src/tests/tcmalloc_large_heap_fragmentation_unittest-large_heap_fragmentation_unittest.o `test -f 'src/tests/large_heap_fragmentation_unittest.cc' || echo '$(srcdir)/'`src/tests/large_heap_fragmentation_unittest.cc

src/tests/tcmalloc_large_heap_fragmentation_unittest-large_heap_fragmentation_unittest.obj: src/tests/large_heap_fragmentation_unittest.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tcmalloc_large_heap_fragmentation_unittest_CXXFLAGS) $(CXXFLAGS) -MT src/tests/tcmalloc_large_heap_fragmentation_unittest-large_heap_fragmentation_unittest.obj -MD -MP -MF src/tests/$(DEPDIR)/tcmalloc_large_heap_fragmentation_unittest-large_heap_fragmentation_unittest.Tpo -c -o src/tests/tcmalloc_large_heap_fragmentation_unittest-large_heap_fragmentation_unittest.obj `if test -f 'src/tests/large_heap_fragmentation_unittest.cc'; then $(CYGPATH_W) 'src/tests/large_heap_fragmentation_unittest.cc'; else $(CYGPATH_W) '$(srcdir)/src/tests/large_heap_fragmentation_unittest.cc'; fi`
	$(AM_V_at)$(am__mv) src/tests/$(DEPDIR)/tcmalloc_large_heap_fragmentation_unittest-large_heap_fragmentation_unittest.Tpo src/tests/$(DEPDIR)/tcmalloc_large_heap_fragmentation_unittest-large_heap_fragmentation_unittest.Po
#	$(AM_V_CXX)source='src/tests/large_heap_fragmentation_unittest.cc' object='src/tests/tcmalloc_large_heap_fragmentation_unittest-large_heap_fragmentation_unittest.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tcmalloc_large_heap_fragmentation_unittest_CXXFLAGS) $(CXXFLAGS) -c -o src/tests/tcmalloc_large_heap_fragmentation_unittest-large_heap_fragmentation_unittest.obj `if test -f 'src/tests/large_heap_fragmentation_unittest.cc'; then $(CYGPATH_W) 'src/tests/large_heap_fragmentation_unittest.cc'; else $(CYGPATH_W) '$(srcdir)/src/tests/large_heap_fragmentation_unittest.cc'; fi`

src/tests/tcmalloc_large_unittest-tcmalloc_large_unittest.o: src/tests/tcmalloc_large_unittest.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tcmalloc_large_unittest_CXXFLAGS) $(CXXFLAGS) -MT src/tests/tcmalloc_large_unittest-tcmalloc_large_unittest.o -MD -MP -MF src/tests/$(DEPDIR)/tcmalloc_large_unittest-tcmalloc_large_unittest.Tpo -c -o src/tests/tcmalloc_large_unittest-tcmalloc_large_unittest.o `test -f 'src/tests/tcmalloc_large_unittest.cc' || echo '$(srcdir)/'`src/tests/tcmalloc_large_unittest.cc
	$(AM_V_at)$(am__mv) src/tests/$(DEPDIR)/tcmalloc_large_unittest-tcmalloc_large_unittest.Tpo src/tests/$(DEPDIR)/tcmalloc_large_unittest-tcmalloc_large_unittest.Po
#	$(AM_V_CXX)source='src/tests/tcmalloc_large_unittest.cc' object='src/tests/tcmalloc_large_unittest-tcmalloc_large_unittest.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tcmalloc_large_unittest_CXXFLAGS) $(CXXFLAGS) -c -o src/tests/tcmalloc_large_unittest-tcmalloc_large_unittest.o `test -f 'src/tests/tcmalloc_large_unittest.cc' || echo '$(srcdir)/'`src/tests/tcmalloc_large_unittest.cc

src/tests/tcmalloc_large_unittest-tcmalloc_large_unittest.obj: src/tests/tcmalloc_large_unittest.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tcmalloc_large_unittest_CXXFLAGS) $(CXXFLAGS) -MT src/tests/tcmalloc_large_unittest-tcmalloc_large_unittest.obj -MD -MP -MF src/tests/$(DEPDIR)/tcmalloc_large_unittest-tcmalloc_large_unittest.Tpo -c -o src/tests/tcmalloc_large_unittest-tcmalloc_large_unittest.obj `if test -f 'src/tests/tcmalloc_large_unittest.cc'; then $(CYGPATH_W) 'src/tests/tcmalloc_large_unittest.cc'; else $(CYGPATH_W) '$(srcdir)/src/tests/tcmalloc_large_unittest.cc'; fi`
	$(AM_V_at)$(am__mv) src/tests/$(DEPDIR)/tcmalloc_large_unittest-tcmalloc_large_unittest.Tpo src/tests/$(DEPDIR)/tcmalloc_large_unittest-tcmalloc_large_unittest.Po
#	$(AM_V_CXX)source='src/tests/tcmalloc_large_unittest.cc' object='src/tests/tcmalloc_large_unittest-tcmalloc_large_unittest.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tcmalloc_large_unittest_CXXFLAGS) $(CXXFLAGS) -c -o src/tests/tcmalloc_large_unittest-tcmalloc_large_unittest.obj `if test -f 'src/tests/tcmalloc_large_unittest.cc'; then $(CYGPATH_W) 'src/tests/tcmalloc_large_unittest.cc'; else $(CYGPATH_W) '$(srcdir)/src/tests/tcmalloc_large_unittest.cc'; fi`

src/tests/tcmalloc_minimal_debug_unittest-tcmalloc_unittest.o: src/tests/tcmalloc_unittest.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tcmalloc_minimal_debug_unittest_CXXFLAGS) $(CXXFLAGS) -MT src/tests/tcmalloc_minimal_debug_unittest-tcmalloc_unittest.o -MD -MP -MF src/tests/$(DEPDIR)/tcmalloc_minimal_debug_unittest-tcmalloc_unittest.Tpo -c -o src/tests/tcmalloc_minimal_debug_unittest-tcmalloc_unittest.o `test -f 'src/tests/tcmalloc_unittest.cc' || echo '$(srcdir)/'`src/tests/tcmalloc_unittest.cc
	$(AM_V_at)$(am__mv) src/tests/$(DEPDIR)/tcmalloc_minimal_debug_unittest-tcmalloc_unittest.Tpo src/tests/$(DEPDIR)/tcmalloc_minimal_debug_unittest-tcmalloc_unittest.Po
#	$(AM_V_CXX)source='src/tests/tcmalloc_unittest.cc' object='src/tests/tcmalloc_minimal_debug_unittest-tcmalloc_unittest.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tcmalloc_minimal_debug_unittest_CXXFLAGS) $(CXXFLAGS) -c -o src/tests/tcmalloc_minimal_debug_unittest-tcmalloc_unittest.o `test -f 'src/tests/tcmalloc_unittest.cc' || echo '$(srcdir)/'`src/tests/tcmalloc_unittest.cc

src/tests/tcmalloc_minimal_debug_unittest-tcmalloc_unittest.obj: src/tests/tcmalloc_unittest.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tcmalloc_minimal_debug_unittest_CXXFLAGS) $(CXXFLAGS) -MT src/tests/tcmalloc_minimal_debug_unittest-tcmalloc_unittest.obj -MD -MP -MF src/tests/$(DEPDIR)/tcmalloc_minimal_debug_unittest-tcmalloc_unittest.Tpo -c -o src/tests/tcmalloc_minimal_debug_unittest-tcmalloc_unittest.obj `if test -f 'src/tests/tcmalloc_unittest.cc'; then $(CYGPATH_W) 'src/tests/tcmalloc_unittest.cc'; else $(CYGPATH_W) '$(srcdir)/src/tests/tcmalloc_unittest.cc'; fi`
	$(AM_V_at)$(am__mv) src/tests/$(DEPDIR)/tcmalloc_minimal_debug_unittest-tcmalloc_unittest.Tpo src/tests/$(DEPDIR)/tcmalloc_minimal_debug_unittest-tcmalloc_unittest.Po
#	$(AM_V_CXX)source='src/tests/tcmalloc_unittest.cc' object='src/tests/tcmalloc_minimal_debug_unittest-tcmalloc_unittest.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tcmalloc_minimal_debug_unittest_CXXFLAGS) $(CXXFLAGS) -c -o src/tests/tcmalloc_minimal_debug_unittest-tcmalloc_unittest.obj `if test -f 'src/tests/tcmalloc_unittest.cc'; then $(CYGPATH_W) 'src/tests/tcmalloc_unittest.cc'; else $(CYGPATH_W) '$(srcdir)/src/tests/tcmalloc_unittest.cc'; fi`

src/tests/tcmalloc_minimal_debug_unittest-testutil.o: src/tests/testutil.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tcmalloc_minimal_debug_unittest_CXXFLAGS) $(CXXFLAGS) -MT src/tests/tcmalloc_minimal_debug_unittest-testutil.o -MD -MP -MF src/tests/$(DEPDIR)/tcmalloc_minimal_debug_unittest-testutil.Tpo -c -o src/tests/tcmalloc_minimal_debug_unittest-testutil.o `test -f 'src/tests/testutil.cc' || echo '$(srcdir)/'`src/tests/testutil.cc
	$(AM_V_at)$(am__mv) src/tests/$(DEPDIR)/tcmalloc_minimal_debug_unittest-testutil.Tpo src/tests/$(DEPDIR)/tcmalloc_minimal_debug_unittest-testutil.Po
#	$(AM_V_CXX)source='src/tests/testutil.cc' object='src/tests/tcmalloc_minimal_debug_unittest-testutil.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tcmalloc_minimal_debug_unittest_CXXFLAGS) $(CXXFLAGS) -c -o src/tests/tcmalloc_minimal_debug_unittest-testutil.o `test -f 'src/tests/testutil.cc' || echo '$(srcdir)/'`src/tests/testutil.cc

src/tests/tcmalloc_minimal_debug_unittest-testutil.obj: src/tests/testutil.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tcmalloc_minimal_debug_unittest_CXXFLAGS) $(CXXFLAGS) -MT src/tests/tcmalloc_minimal_debug_unittest-testutil.obj -MD -MP -MF src/tests/$(DEPDIR)/tcmalloc_minimal_debug_unittest-testutil.Tpo -c -o src/tests/tcmalloc_minimal_debug_unittest-testutil.obj `if test -f 'src/tests/testutil.cc'; then $(CYGPATH_W) 'src/tests/testutil.cc'; else $(CYGPATH_W) '$(srcdir)/src/tests/testutil.cc'; fi`
	$(AM_V_at)$(am__mv) src/tests/$(DEPDIR)/tcmalloc_minimal_debug_unittest-testutil.Tpo src/tests/$(DEPDIR)/tcmalloc_minimal_debug_unittest-testutil.Po
#	$(AM_V_CXX)source='src/tests/testutil.cc' object='src/tests/tcmalloc_minimal_debug_unittest-testutil.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tcmalloc_minimal_debug_unittest_CXXFLAGS) $(CXXFLAGS) -c -o src/tests/tcmalloc_minimal_debug_unittest-testutil.obj `if test -f 'src/tests/testutil.cc'; then $(CYGPATH_W) 'src/tests/testutil.cc'; else $(CYGPATH_W) '$(srcdir)/src/tests/testutil.cc'; fi`

src/tests/tcmalloc_minimal_large_heap_fragmentation_unittest-large_heap_fragmentation_unittest.o: src/tests/large_heap_fragmentation_unittest.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tcmalloc_minimal_large_heap_fragmentation_unittest_CXXFLAGS) $(CXXFLAGS) -MT src/tests/tcmalloc_minimal_large_heap_fragmentation_unittest-large_heap_fragmentation_unittest.o -MD -MP -MF src/tests/$(DEPDIR)/tcmalloc_minimal_large_heap_fragmentation_unittest-large_heap_fragmentation_unittest.Tpo -c -o src/tests/tcmalloc_minimal_large_heap_fragmentation_unittest-large_heap_fragmentation_unittest.o `test -f 'src/tests/large_heap_fragmentation_unittest.cc' || echo '$(srcdir)/'`src/tests/large_heap_fragmentation_unittest.cc
	$(AM_V_at)$(am__mv) src/tests/$(DEPDIR)/tcmalloc_minimal_large_heap_fragmentation_unittest-large_heap_fragmentation_unittest.Tpo src/tests/$(DEPDIR)/tcmalloc_minimal_large_heap_fragmentation_unittest-large_heap_fragmentation_unittest.Po
#	$(AM_V_CXX)source='src/tests/large_heap_fragmentation_unittest.cc' object='src/tests/tcmalloc_minimal_large_heap_fragmentation_unittest-large_heap_fragmentation_unittest.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tcmalloc_minimal_large_heap_fragmentation_unittest_CXXFLAGS) $(CXXFLAGS) -c -o src/tests/tcmalloc_minimal_large_heap_fragmentation_unittest-large_heap_fragmentation_unittest.o `test -f 'src/tests/large_heap_fragmentation_unittest.cc' || echo '$(srcdir)/'`src/tests/large_heap_fragmentation_unittest.cc

src/tests/tcmalloc_minimal_large_heap_fragmentation_unittest-large_heap_fragmentation_unittest.obj: src/tests/large_heap_fragmentation_unittest.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tcmalloc_minimal_large_heap_fragmentation_unittest_CXXFLAGS) $(CXXFLAGS) -MT src/tests/tcmalloc_minimal_large_heap_fragmentation_unittest-large_heap_fragmentation_unittest.obj -MD -MP -MF src/tests/$(DEPDIR)/tcmalloc_minimal_large_heap_fragmentation_unittest-large_heap_fragmentation_unittest.Tpo -c -o src/tests/tcmalloc_minimal_large_heap_fragmentation_unittest-large_heap_fragmentation_unittest.obj `if test -f 'src/tests/large_heap_fragmentation_unittest.cc'; then $(CYGPATH_W) 'src/tests/large_heap_fragmentation_unittest.cc'; else $(CYGPATH_W) '$(srcdir)/src/tests/large_heap_fragmentation_unittest.cc'; fi`
	$(AM_V_at)$(am__mv) src/tests/$(DEPDIR)/tcmalloc_minimal_large_heap_fragmentation_unittest-large_heap_fragmentation_unittest.Tpo src/tests/$(DEPDIR)/tcmalloc_minimal_large_heap_fragmentation_unittest-large_heap_fragmentation_unittest.Po
#	$(AM_V_CXX)source='src/tests/large_heap_fragmentation_unittest.cc' object='src/tests/tcmalloc_minimal_large_heap_fragmentation_unittest-large_heap_fragmentation_unittest.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tcmalloc_minimal_large_heap_fragmentation_unittest_CXXFLAGS) $(CXXFLAGS) -c -o src/tests/tcmalloc_minimal_large_heap_fragmentation_unittest-large_heap_fragmentation_unittest.obj `if test -f 'src/tests/large_heap_fragmentation_unittest.cc'; then $(CYGPATH_W) 'src/tests/large_heap_fragmentation_unittest.cc'; else $(CYGPATH_W) '$(srcdir)/src/tests/large_heap_fragmentation_unittest.cc'; fi`

src/tests/tcmalloc_minimal_large_unittest-tcmalloc_large_unittest.o: src/tests/tcmalloc_large_unittest.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tcmalloc_minimal_large_unittest_CXXFLAGS) $(CXXFLAGS) -MT src/tests/tcmalloc_minimal_large_unittest-tcmalloc_large_unittest.o -MD -MP -MF src/tests/$(DEPDIR)/tcmalloc_minimal_large_unittest-tcmalloc_large_unittest.Tpo -c -o src/tests/tcmalloc_minimal_large_unittest-tcmalloc_large_unittest.o `test -f 'src/tests/tcmalloc_large_unittest.cc' || echo '$(srcdir)/'`src/tests/tcmalloc_large_unittest.cc
	$(AM_V_at)$(am__mv) src/tests/$(DEPDIR)/tcmalloc_minimal_large_unittest-tcmalloc_large_unittest.Tpo src/tests/$(DEPDIR)/tcmalloc_minimal_large_unittest-tcmalloc_large_unittest.Po
#	$(AM_V_CXX)source='src/tests/tcmalloc_large_unittest.cc' object='src/tests/tcmalloc_minimal_large_unittest-tcmalloc_large_unittest.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tcmalloc_minimal_large_unittest_CXXFLAGS) $(CXXFLAGS) -c -o src/tests/tcmalloc_minimal_large_unittest-tcmalloc_large_unittest.o `test -f 'src/tests/tcmalloc_large_unittest.cc' || echo '$(srcdir)/'`src/tests/tcmalloc_large_unittest.cc

src/tests/tcmalloc_minimal_large_unittest-tcmalloc_large_unittest.obj: src/tests/tcmalloc_large_unittest.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tcmalloc_minimal_large_unittest_CXXFLAGS) $(CXXFLAGS) -MT src/tests/tcmalloc_minimal_large_unittest-tcmalloc_large_unittest.obj -MD -MP -MF src/tests/$(DEPDIR)/tcmalloc_minimal_large_unittest-tcmalloc_large_unittest.Tpo -c -o src/tests/tcmalloc_minimal_large_unittest-tcmalloc_large_unittest.obj `if test -f 'src/tests/tcmalloc_large_unittest.cc'; then $(CYGPATH_W) 'src/tests/tcmalloc_large_unittest.cc'; else $(CYGPATH_W) '$(srcdir)/src/tests/tcmalloc_large_unittest.cc'; fi`
	$(AM_V_at)$(am__mv) src/tests/$(DEPDIR)/tcmalloc_minimal_large_unittest-tcmalloc_large_unittest.Tpo src/tests/$(DEPDIR)/tcmalloc_minimal_large_unittest-tcmalloc_large_unittest.Po
#	$(AM_V_CXX)source='src/tests/tcmalloc_large_unittest.cc' object='src/tests/tcmalloc_minimal_large_unittest-tcmalloc_large_unittest.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tcmalloc_minimal_large_unittest_CXXFLAGS) $(CXXFLAGS) -c -o src/tests/tcmalloc_minimal_large_unittest-tcmalloc_large_unittest.obj `if test -f 'src/tests/tcmalloc_large_unittest.cc'; then $(CYGPATH_W) 'src/tests/tcmalloc_large_unittest.cc'; else $(CYGPATH_W) '$(srcdir)/src/tests/tcmalloc_large_unittest.cc'; fi`

src/tests/tcmalloc_minimal_unittest-tcmalloc_unittest.o: src/tests/tcmalloc_unittest.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tcmalloc_minimal_unittest_CXXFLAGS) $(CXXFLAGS) -MT src/tests/tcmalloc_minimal_unittest-tcmalloc_unittest.o -MD -MP -MF src/tests/$(DEPDIR)/tcmalloc_minimal_unittest-tcmalloc_unittest.Tpo -c -o src/tests/tcmalloc_minimal_unittest-tcmalloc_unittest.o `test -f 'src/tests/tcmalloc_unittest.cc' || echo '$(srcdir)/'`src/tests/tcmalloc_unittest.cc
	$(AM_V_at)$(am__mv) src/tests/$(DEPDIR)/tcmalloc_minimal_unittest-tcmalloc_unittest.Tpo src/tests/$(DEPDIR)/tcmalloc_minimal_unittest-tcmalloc_unittest.Po
#	$(AM_V_CXX)source='src/tests/tcmalloc_unittest.cc' object='src/tests/tcmalloc_minimal_unittest-tcmalloc_unittest.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tcmalloc_minimal_unittest_CXXFLAGS) $(CXXFLAGS) -c -o src/tests/tcmalloc_minimal_unittest-tcmalloc_unittest.o `test -f 'src/tests/tcmalloc_unittest.cc' || echo '$(srcdir)/'`src/tests/tcmalloc_unittest.cc

src/tests/tcmalloc_minimal_unittest-tcmalloc_unittest.obj: src/tests/tcmalloc_unittest.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tcmalloc_minimal_unittest_CXXFLAGS) $(CXXFLAGS) -MT src/tests/tcmalloc_minimal_unittest-tcmalloc_unittest.obj -MD -MP -MF src/tests/$(DEPDIR)/tcmalloc_minimal_unittest-tcmalloc_unittest.Tpo -c -o src/tests/tcmalloc_minimal_unittest-tcmalloc_unittest.obj `if test -f 'src/tests/tcmalloc_unittest.cc'; then $(CYGPATH_W) 'src/tests/tcmalloc_unittest.cc'; else $(CYGPATH_W) '$(srcdir)/src/tests/tcmalloc_unittest.cc'; fi`
	$(AM_V_at)$(am__mv) src/tests/$(DEPDIR)/tcmalloc_minimal_unittest-tcmalloc_unittest.Tpo src/tests/$(DEPDIR)/tcmalloc_minimal_unittest-tcmalloc_unittest.Po
#	$(AM_V_CXX)source='src/tests/tcmalloc_unittest.cc' object='src/tests/tcmalloc_minimal_unittest-tcmalloc_unittest.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tcmalloc_minimal_unittest_CXXFLAGS) $(CXXFLAGS) -c -o src/tests/tcmalloc_minimal_unittest-tcmalloc_unittest.obj `if test -f 'src/tests/tcmalloc_unittest.cc'; then $(CYGPATH_W) 'src/tests/tcmalloc_unittest.cc'; else $(CYGPATH_W) '$(srcdir)/src/tests/tcmalloc_unittest.cc'; fi`

src/tests/tcmalloc_minimal_unittest-testutil.o: src/tests/testutil.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tcmalloc_minimal_unittest_CXXFLAGS) $(CXXFLAGS) -MT src/tests/tcmalloc_minimal_unittest-testutil.o -MD -MP -MF src/tests/$(DEPDIR)/tcmalloc_minimal_unittest-testutil.Tpo -c -o src/tests/tcmalloc_minimal_unittest-testutil.o `test -f 'src/tests/testutil.cc' || echo '$(srcdir)/'`src/tests/testutil.cc
	$(AM_V_at)$(am__mv) src/tests/$(DEPDIR)/tcmalloc_minimal_unittest-testutil.Tpo src/tests/$(DEPDIR)/tcmalloc_minimal_unittest-testutil.Po
#	$(AM_V_CXX)source='src/tests/testutil.cc' object='src/tests/tcmalloc_minimal_unittest-testutil.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tcmalloc_minimal_unittest_CXXFLAGS) $(CXXFLAGS) -c -o src/tests/tcmalloc_minimal_unittest-testutil.o `test -f 'src/tests/testutil.cc' || echo '$(srcdir)/'`src/tests/testutil.cc

src/tests/tcmalloc_minimal_unittest-testutil.obj: src/tests/testutil.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tcmalloc_minimal_unittest_CXXFLAGS) $(CXXFLAGS) -MT src/tests/tcmalloc_minimal_unittest-testutil.obj -MD -MP -MF src/tests/$(DEPDIR)/tcmalloc_minimal_unittest-testutil.Tpo -c -o src/tests/tcmalloc_minimal_unittest-testutil.obj `if test -f 'src/tests/testutil.cc'; then $(CYGPATH_W) 'src/tests/testutil.cc'; else $(CYGPATH_W) '$(srcdir)/src/tests/testutil.cc'; fi`
	$(AM_V_at)$(am__mv) src/tests/$(DEPDIR)/tcmalloc_minimal_unittest-testutil.Tpo src/tests/$(DEPDIR)/tcmalloc_minimal_unittest-testutil.Po
#	$(AM_V_CXX)source='src/tests/testutil.cc' object='src/tests/tcmalloc_minimal_unittest-testutil.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tcmalloc_minimal_unittest_CXXFLAGS) $(CXXFLAGS) -c -o src/tests/tcmalloc_minimal_unittest-testutil.obj `if test -f 'src/tests/testutil.cc'; then $(CYGPATH_W) 'src/tests/testutil.cc'; else $(CYGPATH_W) '$(srcdir)/src/tests/testutil.cc'; fi`

src/tests/tcmalloc_unittest-tcmalloc_unittest.o: src/tests/tcmalloc_unittest.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tcmalloc_unittest_CXXFLAGS) $(CXXFLAGS) -MT src/tests/tcmalloc_unittest-tcmalloc_unittest.o -MD -MP -MF src/tests/$(DEPDIR)/tcmalloc_unittest-tcmalloc_unittest.Tpo -c -o src/tests/tcmalloc_unittest-tcmalloc_unittest.o `test -f 'src/tests/tcmalloc_unittest.cc' || echo '$(srcdir)/'`src/tests/tcmalloc_unittest.cc
	$(AM_V_at)$(am__mv) src/tests/$(DEPDIR)/tcmalloc_unittest-tcmalloc_unittest.Tpo src/tests/$(DEPDIR)/tcmalloc_unittest-tcmalloc_unittest.Po
#	$(AM_V_CXX)source='src/tests/tcmalloc_unittest.cc' object='src/tests/tcmalloc_unittest-tcmalloc_unittest.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tcmalloc_unittest_CXXFLAGS) $(CXXFLAGS) -c -o src/tests/tcmalloc_unittest-tcmalloc_unittest.o `test -f 'src/tests/tcmalloc_unittest.cc' || echo '$(srcdir)/'`src/tests/tcmalloc_unittest.cc

src/tests/tcmalloc_unittest-tcmalloc_unittest.obj: src/tests/tcmalloc_unittest.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tcmalloc_unittest_CXXFLAGS) $(CXXFLAGS) -MT src/tests/tcmalloc_unittest-tcmalloc_unittest.obj -MD -MP -MF src/tests/$(DEPDIR)/tcmalloc_unittest-tcmalloc_unittest.Tpo -c -o src/tests/tcmalloc_unittest-tcmalloc_unittest.obj `if test -f 'src/tests/tcmalloc_unittest.cc'; then $(CYGPATH_W) 'src/tests/tcmalloc_unittest.cc'; else $(CYGPATH_W) '$(srcdir)/src/tests/tcmalloc_unittest.cc'; fi`
	$(AM_V_at)$(am__mv) src/tests/$(DEPDIR)/tcmalloc_unittest-tcmalloc_unittest.Tpo src/tests/$(DEPDIR)/tcmalloc_unittest-tcmalloc_unittest.Po
#	$(AM_V_CXX)source='src/tests/tcmalloc_unittest.cc' object='src/tests/tcmalloc_unittest-tcmalloc_unittest.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tcmalloc_unittest_CXXFLAGS) $(CXXFLAGS) -c -o src/tests/tcmalloc_unittest-tcmalloc_unittest.obj `if test -f 'src/tests/tcmalloc_unittest.cc'; then $(CYGPATH_W) 'src/tests/tcmalloc_unittest.cc'; else $(CYGPATH_W) '$(srcdir)/src/tests/tcmalloc_unittest.cc'; fi`

src/tests/tcmalloc_unittest-testutil.o: src/tests/testutil.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tcmalloc_unittest_CXXFLAGS) $(CXXFLAGS) -MT src/tests/tcmalloc_unittest-testutil.o -MD -MP -MF src/tests/$(DEPDIR)/tcmalloc_unittest-testutil.Tpo -c -o src/tests/tcmalloc_unittest-testutil.o `test -f 'src/tests/testutil.cc' || echo '$(srcdir)/'`src/tests/testutil.cc
	$(AM_V_at)$(am__mv) src/tests/$(DEPDIR)/tcmalloc_unittest-testutil.Tpo src/tests/$(DEPDIR)/tcmalloc_unittest-testutil.Po
#	$(AM_V_CXX)source='src/tests/testutil.cc' object='src/tests/tcmalloc_unittest-testutil.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tcmalloc_unittest_CXXFLAGS) $(CXXFLAGS) -c -o src/tests/tcmalloc_unittest-testutil.o `test -f 'src/tests/testutil.cc' || echo '$(srcdir)/'`src/tests/testutil.cc

src/tests/tcmalloc_unittest-testutil.obj: src/tests/testutil.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tcmalloc_unittest_CXXFLAGS) $(CXXFLAGS) -MT src/tests/tcmalloc_unittest-testutil.obj -MD -MP -MF src/tests/$(DEPDIR)/tcmalloc_unittest-testutil.Tpo -c -o src/tests/tcmalloc_unittest-testutil.obj `if test -f 'src/tests/testutil.cc'; then $(CYGPATH_W) 'src/tests/testutil.cc'; else $(CYGPATH_W) '$(srcdir)/src/tests/testutil.cc'; fi`
	$(AM_V_at)$(am__mv) src/tests/$(DEPDIR)/tcmalloc_unittest-testutil.Tpo src/tests/$(DEPDIR)/tcmalloc_unittest-testutil.Po
#	$(AM_V_CXX)source='src/tests/testutil.cc' object='src/tests/tcmalloc_unittest-testutil.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tcmalloc_unittest_CXXFLAGS) $(CXXFLAGS) -c -o src/tests/tcmalloc_unittest-testutil.obj `if test -f 'src/tests/testutil.cc'; then $(CYGPATH_W) 'src/tests/testutil.cc'; else $(CYGPATH_W) '$(srcdir)/src/tests/testutil.cc'; fi`

src/tests/thread_dealloc_unittest-thread_dealloc_unittest.o: src/tests/thread_dealloc_unittest.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(thread_dealloc_unittest_CXXFLAGS) $(CXXFLAGS) -MT src/tests/thread_dealloc_unittest-thread_dealloc_unittest.o -MD -MP -MF src/tests/$(DEPDIR)/thread_dealloc_unittest-thread_dealloc_unittest.Tpo -c -o src/tests/thread_dealloc_unittest-thread_dealloc_unittest.o `test -f 'src/tests/thread_dealloc_unittest.cc' || echo '$(srcdir)/'`src/tests/thread_dealloc_unittest.cc
	$(AM_V_at)$(am__mv) src/tests/$(DEPDIR)/thread_dealloc_unittest-thread_dealloc_unittest.Tpo src/tests/$(DEPDIR)/thread_dealloc_unittest-thread_dealloc_unittest.Po
#	$(AM_V_CXX)source='src/tests/thread_dealloc_unittest.cc' object='src/tests/thread_dealloc_unittest-thread_dealloc_unittest.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(thread_dealloc_unittest_CXXFLAGS) $(CXXFLAGS) -c -o src/tests/thread_dealloc_unittest-thread_dealloc_unittest.o `test -f 'src/tests/thread_dealloc_unittest.cc' || echo '$(srcdir)/'`src/tests/thread_dealloc_unittest.cc

src/tests/thread_dealloc_unittest-thread_dealloc_unittest.obj: src/tests/thread_dealloc_unittest.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(thread_dealloc_unittest_CXXFLAGS) $(CXXFLAGS) -MT src/tests/thread_dealloc_unittest-thread_dealloc_unittest.obj -MD -MP -MF src/tests/$(DEPDIR)/thread_dealloc_unittest-thread_dealloc_unittest.Tpo -c -o src/tests/thread_dealloc_unittest-thread_dealloc_unittest.obj `if test -f 'src/tests/thread_dealloc_unittest.cc'; then $(CYGPATH_W) 'src/tests/thread_dealloc_unittest.cc'; else $(CYGPATH_W) '$(srcdir)/src/tests/thread_dealloc_unittest.cc'; fi`
	$(AM_V_at)$(am__mv) src/tests/$(DEPDIR)/thread_dealloc_unittest-thread_dealloc_unittest.Tpo src/tests/$(DEPDIR)/thread_dealloc_unittest-thread_dealloc_unittest.Po
#	$(AM_V_CXX)source='src/tests/thread_dealloc_unittest.cc' object='src/tests/thread_dealloc_unittest-thread_dealloc_unittest.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(thread_dealloc_unittest_CXXFLAGS) $(CXXFLAGS) -c -o src/tests/thread_dealloc_unittest-thread_dealloc_unittest.obj `if test -f 'src/tests/thread_dealloc_unittest.cc'; then $(CYGPATH_W) 'src/tests/thread_dealloc_unittest.cc'; else $(CYGPATH_W) '$(srcdir)/src/tests/thread_dealloc_unittest.cc'; fi`

src/tests/thread_dealloc_unittest-testutil.o: src/tests/testutil.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(thread_dealloc_unittest_CXXFLAGS) $(CXXFLAGS) -MT src/tests/thread_dealloc_unittest-testutil.o -MD -MP -MF src/tests/$(DEPDIR)/thread_dealloc_unittest-testutil.Tpo -c -o src/tests/thread_dealloc_unittest-testutil.o `test -f 'src/tests/testutil.cc' || echo '$(srcdir)/'`src/tests/testutil.cc
	$(AM_V_at)$(am__mv) src/tests/$(DEPDIR)/thread_dealloc_unittest-testutil.Tpo src/tests/$(DEPDIR)/thread_dealloc_unittest-testutil.Po
#	$(AM_V_CXX)source='src/tests/testutil.cc' object='src/tests/thread_dealloc_unittest-testutil.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(thread_dealloc_unittest_CXXFLAGS) $(CXXFLAGS) -c -o src/tests/thread_dealloc_unittest-testutil.o `test -f 'src/tests/testutil.cc' || echo '$(srcdir)/'`src/tests/testutil.cc

src/tests/thread_dealloc_unittest-testutil.obj: src/tests/testutil.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(thread_dealloc_unittest_CXXFLAGS) $(CXXFLAGS) -MT src/tests/thread_dealloc_unittest-testutil.obj -MD -MP -MF src/tests/$(DEPDIR)/thread_dealloc_unittest-testutil.Tpo -c -o src/tests/thread_dealloc_unittest-testutil.obj `if test -f 'src/tests/testutil.cc'; then $(CYGPATH_W) 'src/tests/testutil.cc'; else $(CYGPATH_W) '$(srcdir)/src/tests/testutil.cc'; fi`
	$(AM_V_at)$(am__mv) src/tests/$(DEPDIR)/thread_dealloc_unittest-testutil.Tpo src/tests/$(DEPDIR)/thread_dealloc_unittest-testutil.Po
#	$(AM_V_CXX)source='src/tests/testutil.cc' object='src/tests/thread_dealloc_unittest-testutil.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(thread_dealloc_unittest_CXXFLAGS) $(CXXFLAGS) -c -o src/tests/thread_dealloc_unittest-testutil.obj `if test -f 'src/tests/testutil.cc'; then $(CYGPATH_W) 'src/tests/testutil.cc'; else $(CYGPATH_W) '$(srcdir)/src/tests/testutil.cc'; fi`

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs
	-rm -rf benchmark/.libs benchmark/_libs
	-rm -rf src/.libs src/_libs
	-rm -rf src/base/.libs src/base/_libs
	-rm -rf src/windows/.libs src/windows/_libs

distclean-libtool:
	-rm -f libtool config.lt
install-man1: $(dist_man_MANS)
	@$(NORMAL_INSTALL)
	@list1=''; \
	list2='$(dist_man_MANS)'; \
	test -n "$(man1dir)" \
	  && test -n "`echo $$list1$$list2`" \
	  || exit 0; \
	echo " $(MKDIR_P) '$(DESTDIR)$(man1dir)'"; \
	$(MKDIR_P) "$(DESTDIR)$(man1dir)" || exit 1; \
	{ for i in $$list1; do echo "$$i"; done;  \
	if test -n "$$list2"; then \
	  for i in $$list2; do echo "$$i"; done \
	    | sed -n '/\.1[a-z]*$$/p'; \
	fi; \
	} | while read p; do \
	  if test -f $$p; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; echo "$$p"; \
	done | \
	sed -e 'n;s,.*/,,;p;h;s,.*\.,,;s,^[^1][0-9a-z]*$$,1,;x' \
	      -e 's,\.[0-9a-z]*$$,,;$(transform);G;s,\n,.,' | \
	sed 'N;N;s,\n, ,g' | { \
	list=; while read file base inst; do \
	  if test "$$base" = "$$inst"; then list="$$list $$file"; else \
	    echo " $(INSTALL_DATA) '$$file' '$(DESTDIR)$(man1dir)/$$inst'"; \
	    $(INSTALL_DATA) "$$file" "$(DESTDIR)$(man1dir)/$$inst" || exit $$?; \
	  fi; \
	done; \
	for i in $$list; do echo "$$i"; done | $(am__base_list) | \
	while read files; do \
	  test -z "$$files" || { \
	    echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(man1dir)'"; \
	    $(INSTALL_DATA) $$files "$(DESTDIR)$(man1dir)" || exit $$?; }; \
	done; }

uninstall-man1:
	@$(NORMAL_UNINSTALL)
	@list=''; test -n "$(man1dir)" || exit 0; \
	files=`{ for i in $$list; do echo "$$i"; done; \
	l2='$(dist_man_MANS)'; for i in $$l2; do echo "$$i"; done | \
	  sed -n '/\.1[a-z]*$$/p'; \
	} | sed -e 's,.*/,,;h;s,.*\.,,;s,^[^1][0-9a-z]*$$,1,;x' \
	      -e 's,\.[0-9a-z]*$$,,;$(transform);G;s,\n,.,'`; \
	dir='$(DESTDIR)$(man1dir)'; $(am__uninstall_files_from_dir)
install-dist_docDATA: $(dist_doc_DATA)
	@$(NORMAL_INSTALL)
	@list='$(dist_doc_DATA)'; test -n "$(docdir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(docdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(docdir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(docdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(docdir)" || exit $$?; \
	done

uninstall-dist_docDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(dist_doc_DATA)'; test -n "$(docdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(docdir)'; $(am__uninstall_files_from_dir)
install-pkgconfigDATA: $(pkgconfig_DATA)
	@$(NORMAL_INSTALL)
	@list='$(pkgconfig_DATA)'; test -n "$(pkgconfigdir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(pkgconfigdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(pkgconfigdir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(pkgconfigdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(pkgconfigdir)" || exit $$?; \
	done

uninstall-pkgconfigDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(pkgconfig_DATA)'; test -n "$(pkgconfigdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(pkgconfigdir)'; $(am__uninstall_files_from_dir)
install-googleincludeHEADERS: $(googleinclude_HEADERS)
	@$(NORMAL_INSTALL)
	@list='$(googleinclude_HEADERS)'; test -n "$(googleincludedir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(googleincludedir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(googleincludedir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_HEADER) $$files '$(DESTDIR)$(googleincludedir)'"; \
	  $(INSTALL_HEADER) $$files "$(DESTDIR)$(googleincludedir)" || exit $$?; \
	done

uninstall-googleincludeHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(googleinclude_HEADERS)'; test -n "$(googleincludedir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(googleincludedir)'; $(am__uninstall_files_from_dir)
install-nodist_perftoolsincludeHEADERS: $(nodist_perftoolsinclude_HEADERS)
	@$(NORMAL_INSTALL)
	@list='$(nodist_perftoolsinclude_HEADERS)'; test -n "$(perftoolsincludedir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(perftoolsincludedir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(perftoolsincludedir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_HEADER) $$files '$(DESTDIR)$(perftoolsincludedir)'"; \
	  $(INSTALL_HEADER) $$files "$(DESTDIR)$(perftoolsincludedir)" || exit $$?; \
	done

uninstall-nodist_perftoolsincludeHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(nodist_perftoolsinclude_HEADERS)'; test -n "$(perftoolsincludedir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(perftoolsincludedir)'; $(am__uninstall_files_from_dir)
install-perftoolsincludeHEADERS: $(perftoolsinclude_HEADERS)
	@$(NORMAL_INSTALL)
	@list='$(perftoolsinclude_HEADERS)'; test -n "$(perftoolsincludedir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(perftoolsincludedir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(perftoolsincludedir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_HEADER) $$files '$(DESTDIR)$(perftoolsincludedir)'"; \
	  $(INSTALL_HEADER) $$files "$(DESTDIR)$(perftoolsincludedir)" || exit $$?; \
	done

uninstall-perftoolsincludeHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(perftoolsinclude_HEADERS)'; test -n "$(perftoolsincludedir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(perftoolsincludedir)'; $(am__uninstall_files_from_dir)

ID: $(am__tagged_files)
	$(am__define_uniq_tagged_files); mkid -fID $$unique
tags: tags-am
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-am

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscope: cscope.files
	test ! -s cscope.files \
	  || $(CSCOPE) -b -q $(AM_CSCOPEFLAGS) $(CSCOPEFLAGS) -i cscope.files $(CSCOPE_ARGS)
clean-cscope:
	-rm -f cscope.files
cscope.files: clean-cscope cscopelist
cscopelist: cscopelist-am

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags
	-rm -f cscope.out cscope.in.out cscope.po.out cscope.files

# Recover from deleted '.trs' file; this should ensure that
# "rm -f foo.log; make foo.trs" re-run 'foo.test', and re-create
# both 'foo.log' and 'foo.trs'.  Break the recipe in two subshells
# to avoid problems with "make -n".
.log.trs:
	rm -f $< $@
	$(MAKE) $(AM_MAKEFLAGS) $<

# Leading 'am--fnord' is there to ensure the list of targets does not
# expand to empty, as could happen e.g. with make check TESTS=''.
am--fnord $(TEST_LOGS) $(TEST_LOGS:.log=.trs): $(am__force_recheck)
am--force-recheck:
	@:

$(TEST_SUITE_LOG): $(TEST_LOGS)
	@$(am__set_TESTS_bases); \
	am__f_ok () { test -f "$$1" && test -r "$$1"; }; \
	redo_bases=`for i in $$bases; do \
	              am__f_ok $$i.trs && am__f_ok $$i.log || echo $$i; \
	            done`; \
	if test -n "$$redo_bases"; then \
	  redo_logs=`for i in $$redo_bases; do echo $$i.log; done`; \
	  redo_results=`for i in $$redo_bases; do echo $$i.trs; done`; \
	  if $(am__make_dryrun); then :; else \
	    rm -f $$redo_logs && rm -f $$redo_results || exit 1; \
	  fi; \
	fi; \
	if test -n "$$am__remaking_logs"; then \
	  echo "fatal: making $(TEST_SUITE_LOG): possible infinite" \
	       "recursion detected" >&2; \
	elif test -n "$$redo_logs"; then \
	  am__remaking_logs=yes $(MAKE) $(AM_MAKEFLAGS) $$redo_logs; \
	fi; \
	if $(am__make_dryrun); then :; else \
	  st=0;  \
	  errmsg="fatal: making $(TEST_SUITE_LOG): failed to create"; \
	  for i in $$redo_bases; do \
	    test -f $$i.trs && test -r $$i.trs \
	      || { echo "$$errmsg $$i.trs" >&2; st=1; }; \
	    test -f $$i.log && test -r $$i.log \
	      || { echo "$$errmsg $$i.log" >&2; st=1; }; \
	  done; \
	  test $$st -eq 0 || exit 1; \
	fi
	@$(am__sh_e_setup); $(am__tty_colors); $(am__set_TESTS_bases); \
	ws='[ 	]'; \
	results=`for b in $$bases; do echo $$b.trs; done`; \
	test -n "$$results" || results=/dev/null; \
	all=`  grep "^$$ws*:test-result:"           $$results | wc -l`; \
	pass=` grep "^$$ws*:test-result:$$ws*PASS"  $$results | wc -l`; \
	fail=` grep "^$$ws*:test-result:$$ws*FAIL"  $$results | wc -l`; \
	skip=` grep "^$$ws*:test-result:$$ws*SKIP"  $$results | wc -l`; \
	xfail=`grep "^$$ws*:test-result:$$ws*XFAIL" $$results | wc -l`; \
	xpass=`grep "^$$ws*:test-result:$$ws*XPASS" $$results | wc -l`; \
	error=`grep "^$$ws*:test-result:$$ws*ERROR" $$results | wc -l`; \
	if test `expr $$fail + $$xpass + $$error` -eq 0; then \
	  success=true; \
	else \
	  success=false; \
	fi; \
	br='==================='; br=$$br$$br$$br$$br; \
	result_count () \
	{ \
	    if test x"$$1" = x"--maybe-color"; then \
	      maybe_colorize=yes; \
	    elif test x"$$1" = x"--no-color"; then \
	      maybe_colorize=no; \
	    else \
	      echo "$@: invalid 'result_count' usage" >&2; exit 4; \
	    fi; \
	    shift; \
	    desc=$$1 count=$$2; \
	    if test $$maybe_colorize = yes && test $$count -gt 0; then \
	      color_start=$$3 color_end=$$std; \
	    else \
	      color_start= color_end=; \
	    fi; \
	    echo "$${color_start}# $$desc $$count$${color_end}"; \
	}; \
	create_testsuite_report () \
	{ \
	  result_count $$1 "TOTAL:" $$all   "$$brg"; \
	  result_count $$1 "PASS: " $$pass  "$$grn"; \
	  result_count $$1 "SKIP: " $$skip  "$$blu"; \
	  result_count $$1 "XFAIL:" $$xfail "$$lgn"; \
	  result_count $$1 "FAIL: " $$fail  "$$red"; \
	  result_count $$1 "XPASS:" $$xpass "$$red"; \
	  result_count $$1 "ERROR:" $$error "$$mgn"; \
	}; \
	{								\
	  echo "$(PACKAGE_STRING): $(subdir)/$(TEST_SUITE_LOG)" |	\
	    $(am__rst_title);						\
	  create_testsuite_report --no-color;				\
	  echo;								\
	  echo ".. contents:: :depth: 2";				\
	  echo;								\
	  for b in $$bases; do echo $$b; done				\
	    | $(am__create_global_log);					\
	} >$(TEST_SUITE_LOG).tmp || exit 1;				\
	mv $(TEST_SUITE_LOG).tmp $(TEST_SUITE_LOG);			\
	if $$success; then						\
	  col="$$grn";							\
	 else								\
	  col="$$red";							\
	  test x"$$VERBOSE" = x || cat $(TEST_SUITE_LOG);		\
	fi;								\
	echo "$${col}$$br$${std}"; 					\
	echo "$${col}Testsuite summary for $(PACKAGE_STRING)$${std}";	\
	echo "$${col}$$br$${std}"; 					\
	create_testsuite_report --maybe-color;				\
	echo "$$col$$br$$std";						\
	if $$success; then :; else					\
	  echo "$${col}See $(subdir)/$(TEST_SUITE_LOG)$${std}";		\
	  if test -n "$(PACKAGE_BUGREPORT)"; then			\
	    echo "$${col}Please report to $(PACKAGE_BUGREPORT)$${std}";	\
	  fi;								\
	  echo "$$col$$br$$std";					\
	fi;								\
	$$success || exit 1

check-TESTS: $(check_SCRIPTS)
	@list='$(RECHECK_LOGS)';           test -z "$$list" || rm -f $$list
	@list='$(RECHECK_LOGS:.log=.trs)'; test -z "$$list" || rm -f $$list
	@test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)
	@set +e; $(am__set_TESTS_bases); \
	log_list=`for i in $$bases; do echo $$i.log; done`; \
	trs_list=`for i in $$bases; do echo $$i.trs; done`; \
	log_list=`echo $$log_list`; trs_list=`echo $$trs_list`; \
	$(MAKE) $(AM_MAKEFLAGS) $(TEST_SUITE_LOG) TEST_LOGS="$$log_list"; \
	exit $$?;
recheck: all $(check_SCRIPTS)
	@test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)
	@set +e; $(am__set_TESTS_bases); \
	bases=`for i in $$bases; do echo $$i; done \
	         | $(am__list_recheck_tests)` || exit 1; \
	log_list=`for i in $$bases; do echo $$i.log; done`; \
	log_list=`echo $$log_list`; \
	$(MAKE) $(AM_MAKEFLAGS) $(TEST_SUITE_LOG) \
	        am__force_recheck=am--force-recheck \
	        TEST_LOGS="$$log_list"; \
	exit $$?
low_level_alloc_unittest.log: low_level_alloc_unittest$(EXEEXT)
	@p='low_level_alloc_unittest$(EXEEXT)'; \
	b='low_level_alloc_unittest'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
atomicops_unittest.log: atomicops_unittest$(EXEEXT)
	@p='atomicops_unittest$(EXEEXT)'; \
	b='atomicops_unittest'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
stacktrace_unittest.log: stacktrace_unittest$(EXEEXT)
	@p='stacktrace_unittest$(EXEEXT)'; \
	b='stacktrace_unittest'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tcmalloc_minimal_unittest.log: tcmalloc_minimal_unittest$(EXEEXT)
	@p='tcmalloc_minimal_unittest$(EXEEXT)'; \
	b='tcmalloc_minimal_unittest'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tcm_min_asserts_unittest.log: tcm_min_asserts_unittest$(EXEEXT)
	@p='tcm_min_asserts_unittest$(EXEEXT)'; \
	b='tcm_min_asserts_unittest'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tcmalloc_minimal_large_unittest.log: tcmalloc_minimal_large_unittest$(EXEEXT)
	@p='tcmalloc_minimal_large_unittest$(EXEEXT)'; \
	b='tcmalloc_minimal_large_unittest'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tcmalloc_minimal_large_heap_fragmentation_unittest.log: tcmalloc_minimal_large_heap_fragmentation_unittest$(EXEEXT)
	@p='tcmalloc_minimal_large_heap_fragmentation_unittest$(EXEEXT)'; \
	b='tcmalloc_minimal_large_heap_fragmentation_unittest'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
maybe_threads_unittest.sh.log: maybe_threads_unittest.sh$(EXEEXT)
	@p='maybe_threads_unittest.sh$(EXEEXT)'; \
	b='maybe_threads_unittest.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
addressmap_unittest.log: addressmap_unittest$(EXEEXT)
	@p='addressmap_unittest$(EXEEXT)'; \
	b='addressmap_unittest'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
system_alloc_unittest.log: system_alloc_unittest$(EXEEXT)
	@p='system_alloc_unittest$(EXEEXT)'; \
	b='system_alloc_unittest'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
packed_cache_test.log: packed_cache_test$(EXEEXT)
	@p='packed_cache_test$(EXEEXT)'; \
	b='packed_cache_test'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
frag_unittest.log: frag_unittest$(EXEEXT)
	@p='frag_unittest$(EXEEXT)'; \
	b='frag_unittest'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
markidle_unittest.log: markidle_unittest$(EXEEXT)
	@p='markidle_unittest$(EXEEXT)'; \
	b='markidle_unittest'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
current_allocated_bytes_test.log: current_allocated_bytes_test$(EXEEXT)
	@p='current_allocated_bytes_test$(EXEEXT)'; \
	b='current_allocated_bytes_test'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
malloc_hook_test.log: malloc_hook_test$(EXEEXT)
	@p='malloc_hook_test$(EXEEXT)'; \
	b='malloc_hook_test'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
malloc_extension_test.log: malloc_extension_test$(EXEEXT)
	@p='malloc_extension_test$(EXEEXT)'; \
	b='malloc_extension_test'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
malloc_extension_c_test.log: malloc_extension_c_test$(EXEEXT)
	@p='malloc_extension_c_test$(EXEEXT)'; \
	b='malloc_extension_c_test'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
memalign_unittest.log: memalign_unittest$(EXEEXT)
	@p='memalign_unittest$(EXEEXT)'; \
	b='memalign_unittest'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
page_heap_test.log: page_heap_test$(EXEEXT)
	@p='page_heap_test$(EXEEXT)'; \
	b='page_heap_test'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
pagemap_unittest.log: pagemap_unittest$(EXEEXT)
	@p='pagemap_unittest$(EXEEXT)'; \
	b='pagemap_unittest'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
realloc_unittest.log: realloc_unittest$(EXEEXT)
	@p='realloc_unittest$(EXEEXT)'; \
	b='realloc_unittest'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
stack_trace_table_test.log: stack_trace_table_test$(EXEEXT)
	@p='stack_trace_table_test$(EXEEXT)'; \
	b='stack_trace_table_test'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
thread_dealloc_unittest.log: thread_dealloc_unittest$(EXEEXT)
	@p='thread_dealloc_unittest$(EXEEXT)'; \
	b='thread_dealloc_unittest'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tcmalloc_minimal_debug_unittest.log: tcmalloc_minimal_debug_unittest$(EXEEXT)
	@p='tcmalloc_minimal_debug_unittest$(EXEEXT)'; \
	b='tcmalloc_minimal_debug_unittest'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
malloc_extension_debug_test.log: malloc_extension_debug_test$(EXEEXT)
	@p='malloc_extension_debug_test$(EXEEXT)'; \
	b='malloc_extension_debug_test'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
memalign_debug_unittest.log: memalign_debug_unittest$(EXEEXT)
	@p='memalign_debug_unittest$(EXEEXT)'; \
	b='memalign_debug_unittest'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
realloc_debug_unittest.log: realloc_debug_unittest$(EXEEXT)
	@p='realloc_debug_unittest$(EXEEXT)'; \
	b='realloc_debug_unittest'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
debugallocation_test.sh.log: debugallocation_test.sh$(EXEEXT)
	@p='debugallocation_test.sh$(EXEEXT)'; \
	b='debugallocation_test.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tcmalloc_unittest.sh.log: tcmalloc_unittest.sh$(EXEEXT)
	@p='tcmalloc_unittest.sh$(EXEEXT)'; \
	b='tcmalloc_unittest.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tcmalloc_both_unittest.log: tcmalloc_both_unittest$(EXEEXT)
	@p='tcmalloc_both_unittest$(EXEEXT)'; \
	b='tcmalloc_both_unittest'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tcmalloc_large_unittest.log: tcmalloc_large_unittest$(EXEEXT)
	@p='tcmalloc_large_unittest$(EXEEXT)'; \
	b='tcmalloc_large_unittest'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tcmalloc_large_heap_fragmentation_unittest.log: tcmalloc_large_heap_fragmentation_unittest$(EXEEXT)
	@p='tcmalloc_large_heap_fragmentation_unittest$(EXEEXT)'; \
	b='tcmalloc_large_heap_fragmentation_unittest'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
raw_printer_test.log: raw_printer_test$(EXEEXT)
	@p='raw_printer_test$(EXEEXT)'; \
	b='raw_printer_test'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
sampler_test.log: sampler_test$(EXEEXT)
	@p='sampler_test$(EXEEXT)'; \
	b='sampler_test'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
sampling_test.sh.log: sampling_test.sh$(EXEEXT)
	@p='sampling_test.sh$(EXEEXT)'; \
	b='sampling_test.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
heap-profiler_unittest.sh.log: heap-profiler_unittest.sh$(EXEEXT)
	@p='heap-profiler_unittest.sh$(EXEEXT)'; \
	b='heap-profiler_unittest.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
simple_compat_test.log: simple_compat_test$(EXEEXT)
	@p='simple_compat_test$(EXEEXT)'; \
	b='simple_compat_test'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
heap-checker_unittest.sh.log: heap-checker_unittest.sh$(EXEEXT)
	@p='heap-checker_unittest.sh$(EXEEXT)'; \
	b='heap-checker_unittest.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
heap-checker-death_unittest.sh.log: heap-checker-death_unittest.sh$(EXEEXT)
	@p='heap-checker-death_unittest.sh$(EXEEXT)'; \
	b='heap-checker-death_unittest.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tcmalloc_debug_unittest.log: tcmalloc_debug_unittest$(EXEEXT)
	@p='tcmalloc_debug_unittest$(EXEEXT)'; \
	b='tcmalloc_debug_unittest'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
sampler_debug_test.log: sampler_debug_test$(EXEEXT)
	@p='sampler_debug_test$(EXEEXT)'; \
	b='sampler_debug_test'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
sampling_debug_test.sh.log: sampling_debug_test.sh$(EXEEXT)
	@p='sampling_debug_test.sh$(EXEEXT)'; \
	b='sampling_debug_test.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
heap-profiler_debug_unittest.sh.log: heap-profiler_debug_unittest.sh$(EXEEXT)
	@p='heap-profiler_debug_unittest.sh$(EXEEXT)'; \
	b='heap-profiler_debug_unittest.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
heap-checker_debug_unittest.sh.log: heap-checker_debug_unittest.sh$(EXEEXT)
	@p='heap-checker_debug_unittest.sh$(EXEEXT)'; \
	b='heap-checker_debug_unittest.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
getpc_test.log: getpc_test$(EXEEXT)
	@p='getpc_test$(EXEEXT)'; \
	b='getpc_test'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
profiledata_unittest.log: profiledata_unittest$(EXEEXT)
	@p='profiledata_unittest$(EXEEXT)'; \
	b='profiledata_unittest'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
profile_handler_unittest.log: profile_handler_unittest$(EXEEXT)
	@p='profile_handler_unittest$(EXEEXT)'; \
	b='profile_handler_unittest'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
profiler_unittest.sh.log: profiler_unittest.sh$(EXEEXT)
	@p='profiler_unittest.sh$(EXEEXT)'; \
	b='profiler_unittest.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tcmalloc_and_profiler_unittest.log: tcmalloc_and_profiler_unittest$(EXEEXT)
	@p='tcmalloc_and_profiler_unittest$(EXEEXT)'; \
	b='tcmalloc_and_profiler_unittest'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
.test.log:
	@p='$<'; \
	$(am__set_b); \
	$(am__check_pre) $(TEST_LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_TEST_LOG_DRIVER_FLAGS) $(TEST_LOG_DRIVER_FLAGS) -- $(TEST_LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
#.test$(EXEEXT).log:
#	@p='$<'; \
#	$(am__set_b); \
#	$(am__check_pre) $(TEST_LOG_DRIVER) --test-name "$$f" \
#	--log-file $$b.log --trs-file $$b.trs \
#	$(am__common_driver_flags) $(AM_TEST_LOG_DRIVER_FLAGS) $(TEST_LOG_DRIVER_FLAGS) -- $(TEST_LOG_COMPILE) \
#	"$$tst" $(AM_TESTS_FD_REDIRECT)

distdir: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) distdir-am

distdir-am: $(DISTFILES)
	$(am__remove_distdir)
	test -d "$(distdir)" || mkdir "$(distdir)"
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
	$(MAKE) $(AM_MAKEFLAGS) \
	  top_distdir="$(top_distdir)" distdir="$(distdir)" \
	  dist-hook
	-test -n "$(am__skip_mode_fix)" \
	|| find "$(distdir)" -type d ! -perm -755 \
		-exec chmod u+rwx,go+rx {} \; -o \
	  ! -type d ! -perm -444 -links 1 -exec chmod a+r {} \; -o \
	  ! -type d ! -perm -400 -exec chmod a+r {} \; -o \
	  ! -type d ! -perm -444 -exec $(install_sh) -c -m a+r {} {} \; \
	|| chmod -R a+r "$(distdir)"
dist-gzip: distdir
	tardir=$(distdir) && $(am__tar) | eval GZIP= gzip $(GZIP_ENV) -c >$(distdir).tar.gz
	$(am__post_remove_distdir)

dist-bzip2: distdir
	tardir=$(distdir) && $(am__tar) | BZIP2=$${BZIP2--9} bzip2 -c >$(distdir).tar.bz2
	$(am__post_remove_distdir)

dist-lzip: distdir
	tardir=$(distdir) && $(am__tar) | lzip -c $${LZIP_OPT--9} >$(distdir).tar.lz
	$(am__post_remove_distdir)

dist-xz: distdir
	tardir=$(distdir) && $(am__tar) | XZ_OPT=$${XZ_OPT--e} xz -c >$(distdir).tar.xz
	$(am__post_remove_distdir)

dist-tarZ: distdir
	@echo WARNING: "Support for distribution archives compressed with" \
		       "legacy program 'compress' is deprecated." >&2
	@echo WARNING: "It will be removed altogether in Automake 2.0" >&2
	tardir=$(distdir) && $(am__tar) | compress -c >$(distdir).tar.Z
	$(am__post_remove_distdir)

dist-shar: distdir
	@echo WARNING: "Support for shar distribution archives is" \
	               "deprecated." >&2
	@echo WARNING: "It will be removed altogether in Automake 2.0" >&2
	shar $(distdir) | eval GZIP= gzip $(GZIP_ENV) -c >$(distdir).shar.gz
	$(am__post_remove_distdir)
dist-zip: distdir
	-rm -f $(distdir).zip
	zip -rq $(distdir).zip $(distdir)
	$(am__post_remove_distdir)

dist dist-all:
	$(MAKE) $(AM_MAKEFLAGS) $(DIST_TARGETS) am__post_remove_distdir='@:'
	$(am__post_remove_distdir)

# This target untars the dist file and tries a VPATH configuration.  Then
# it guarantees that the distribution is self-contained by making another
# tarfile.
distcheck: dist
	case '$(DIST_ARCHIVES)' in \
	*.tar.gz*) \
	  eval GZIP= gzip $(GZIP_ENV) -dc $(distdir).tar.gz | $(am__untar) ;;\
	*.tar.bz2*) \
	  bzip2 -dc $(distdir).tar.bz2 | $(am__untar) ;;\
	*.tar.lz*) \
	  lzip -dc $(distdir).tar.lz | $(am__untar) ;;\
	*.tar.xz*) \
	  xz -dc $(distdir).tar.xz | $(am__untar) ;;\
	*.tar.Z*) \
	  uncompress -c $(distdir).tar.Z | $(am__untar) ;;\
	*.shar.gz*) \
	  eval GZIP= gzip $(GZIP_ENV) -dc $(distdir).shar.gz | unshar ;;\
	*.zip*) \
	  unzip $(distdir).zip ;;\
	esac
	chmod -R a-w $(distdir)
	chmod u+w $(distdir)
	mkdir $(distdir)/_build $(distdir)/_build/sub $(distdir)/_inst
	chmod a-w $(distdir)
	test -d $(distdir)/_build || exit 0; \
	dc_install_base=`$(am__cd) $(distdir)/_inst && pwd | sed -e 's,^[^:\\/]:[\\/],/,'` \
	  && dc_destdir="$${TMPDIR-/tmp}/am-dc-$$$$/" \
	  && am__cwd=`pwd` \
	  && $(am__cd) $(distdir)/_build/sub \
	  && ../../configure \
	    $(AM_DISTCHECK_CONFIGURE_FLAGS) \
	    $(DISTCHECK_CONFIGURE_FLAGS) \
	    --srcdir=../.. --prefix="$$dc_install_base" \
	  && $(MAKE) $(AM_MAKEFLAGS) \
	  && $(MAKE) $(AM_MAKEFLAGS) dvi \
	  && $(MAKE) $(AM_MAKEFLAGS) check \
	  && $(MAKE) $(AM_MAKEFLAGS) install \
	  && $(MAKE) $(AM_MAKEFLAGS) installcheck \
	  && $(MAKE) $(AM_MAKEFLAGS) uninstall \
	  && $(MAKE) $(AM_MAKEFLAGS) distuninstallcheck_dir="$$dc_install_base" \
	        distuninstallcheck \
	  && chmod -R a-w "$$dc_install_base" \
	  && ({ \
	       (cd ../.. && umask 077 && mkdir "$$dc_destdir") \
	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR="$$dc_destdir" install \
	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR="$$dc_destdir" uninstall \
	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR="$$dc_destdir" \
	            distuninstallcheck_dir="$$dc_destdir" distuninstallcheck; \
	      } || { rm -rf "$$dc_destdir"; exit 1; }) \
	  && rm -rf "$$dc_destdir" \
	  && $(MAKE) $(AM_MAKEFLAGS) dist \
	  && rm -rf $(DIST_ARCHIVES) \
	  && $(MAKE) $(AM_MAKEFLAGS) distcleancheck \
	  && cd "$$am__cwd" \
	  || exit 1
	$(am__post_remove_distdir)
	@(echo "$(distdir) archives ready for distribution: "; \
	  list='$(DIST_ARCHIVES)'; for i in $$list; do echo $$i; done) | \
	  sed -e 1h -e 1s/./=/g -e 1p -e 1x -e '$$p' -e '$$x'
distuninstallcheck:
	@test -n '$(distuninstallcheck_dir)' || { \
	  echo 'ERROR: trying to run $@ with an empty' \
	       '$$(distuninstallcheck_dir)' >&2; \
	  exit 1; \
	}; \
	$(am__cd) '$(distuninstallcheck_dir)' || { \
	  echo 'ERROR: cannot chdir into $(distuninstallcheck_dir)' >&2; \
	  exit 1; \
	}; \
	test `$(am__distuninstallcheck_listfiles) | wc -l` -eq 0 \
	   || { echo "ERROR: files left after uninstall:" ; \
	        if test -n "$(DESTDIR)"; then \
	          echo "  (check DESTDIR support)"; \
	        fi ; \
	        $(distuninstallcheck_listfiles) ; \
	        exit 1; } >&2
distcleancheck: distclean
	@if test '$(srcdir)' = . ; then \
	  echo "ERROR: distcleancheck can only run from a VPATH build" ; \
	  exit 1 ; \
	fi
	@test `$(distcleancheck_listfiles) | wc -l` -eq 0 \
	  || { echo "ERROR: files left in build directory after distclean:" ; \
	       $(distcleancheck_listfiles) ; \
	       exit 1; } >&2
check-am: all-am
	$(MAKE) $(AM_MAKEFLAGS) $(check_SCRIPTS)
	$(MAKE) $(AM_MAKEFLAGS) check-TESTS
check: check-am
all-am: Makefile $(PROGRAMS) $(LTLIBRARIES) $(SCRIPTS) $(MANS) $(DATA) \
		$(HEADERS) all-local
install-binPROGRAMS: install-libLTLIBRARIES

installdirs:
	for dir in "$(DESTDIR)$(bindir)" "$(DESTDIR)$(libdir)" "$(DESTDIR)$(bindir)" "$(DESTDIR)$(man1dir)" "$(DESTDIR)$(docdir)" "$(DESTDIR)$(pkgconfigdir)" "$(DESTDIR)$(googleincludedir)" "$(DESTDIR)$(perftoolsincludedir)" "$(DESTDIR)$(perftoolsincludedir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:
	-test -z "$(TEST_LOGS)" || rm -f $(TEST_LOGS)
	-test -z "$(TEST_LOGS:.log=.trs)" || rm -f $(TEST_LOGS:.log=.trs)
	-test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)
	-rm -f benchmark/$(DEPDIR)/$(am__dirstamp)
	-rm -f benchmark/$(am__dirstamp)
	-rm -f src/$(DEPDIR)/$(am__dirstamp)
	-rm -f src/$(am__dirstamp)
	-rm -f src/base/$(DEPDIR)/$(am__dirstamp)
	-rm -f src/base/$(am__dirstamp)
	-rm -f src/tests/$(DEPDIR)/$(am__dirstamp)
	-rm -f src/tests/$(am__dirstamp)
	-rm -f src/windows/$(DEPDIR)/$(am__dirstamp)
	-rm -f src/windows/$(am__dirstamp)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-binPROGRAMS clean-generic clean-libLTLIBRARIES \
	clean-libtool clean-noinstLTLIBRARIES clean-noinstPROGRAMS \
	mostlyclean-am

distclean: distclean-am
	-rm -f $(am__CONFIG_DISTCLEAN_FILES)
		-rm -f benchmark/$(DEPDIR)/binary_trees-binary_trees.Po
	-rm -f benchmark/$(DEPDIR)/binary_trees_shared-binary_trees.Po
	-rm -f benchmark/$(DEPDIR)/malloc_bench-malloc_bench.Po
	-rm -f benchmark/$(DEPDIR)/malloc_bench_shared-malloc_bench.Po
	-rm -f benchmark/$(DEPDIR)/malloc_bench_shared_full-malloc_bench.Po
	-rm -f benchmark/$(DEPDIR)/run_benchmark.Plo
	-rm -f src/$(DEPDIR)/fake_stacktrace_scope.Plo
	-rm -f src/$(DEPDIR)/libtcmalloc_and_profiler_la-heap-checker-bcad.Plo
	-rm -f src/$(DEPDIR)/libtcmalloc_and_profiler_la-heap-checker.Plo
	-rm -f src/$(DEPDIR)/libtcmalloc_and_profiler_la-profile-handler.Plo
	-rm -f src/$(DEPDIR)/libtcmalloc_and_profiler_la-profiledata.Plo
	-rm -f src/$(DEPDIR)/libtcmalloc_and_profiler_la-profiler.Plo
	-rm -f src/$(DEPDIR)/libtcmalloc_and_profiler_la-tcmalloc.Plo
	-rm -f src/$(DEPDIR)/libtcmalloc_debug_la-debugallocation.Plo
	-rm -f src/$(DEPDIR)/libtcmalloc_debug_la-heap-checker-bcad.Plo
	-rm -f src/$(DEPDIR)/libtcmalloc_debug_la-heap-checker.Plo
	-rm -f src/$(DEPDIR)/libtcmalloc_internal_la-central_freelist.Plo
	-rm -f src/$(DEPDIR)/libtcmalloc_internal_la-common.Plo
	-rm -f src/$(DEPDIR)/libtcmalloc_internal_la-emergency_malloc.Plo
	-rm -f src/$(DEPDIR)/libtcmalloc_internal_la-emergency_malloc_for_stacktrace.Plo
	-rm -f src/$(DEPDIR)/libtcmalloc_internal_la-fake_stacktrace_scope.Plo
	-rm -f src/$(DEPDIR)/libtcmalloc_internal_la-heap-profile-table.Plo
	-rm -f src/$(DEPDIR)/libtcmalloc_internal_la-heap-profiler.Plo
	-rm -f src/$(DEPDIR)/libtcmalloc_internal_la-internal_logging.Plo
	-rm -f src/$(DEPDIR)/libtcmalloc_internal_la-malloc_extension.Plo
	-rm -f src/$(DEPDIR)/libtcmalloc_internal_la-malloc_hook.Plo
	-rm -f src/$(DEPDIR)/libtcmalloc_internal_la-memfs_malloc.Plo
	-rm -f src/$(DEPDIR)/libtcmalloc_internal_la-memory_region_map.Plo
	-rm -f src/$(DEPDIR)/libtcmalloc_internal_la-page_heap.Plo
	-rm -f src/$(DEPDIR)/libtcmalloc_internal_la-raw_printer.Plo
	-rm -f src/$(DEPDIR)/libtcmalloc_internal_la-sampler.Plo
	-rm -f src/$(DEPDIR)/libtcmalloc_internal_la-span.Plo
	-rm -f src/$(DEPDIR)/libtcmalloc_internal_la-stack_trace_table.Plo
	-rm -f src/$(DEPDIR)/libtcmalloc_internal_la-static_vars.Plo
	-rm -f src/$(DEPDIR)/libtcmalloc_internal_la-symbolize.Plo
	-rm -f src/$(DEPDIR)/libtcmalloc_internal_la-system-alloc.Plo
	-rm -f src/$(DEPDIR)/libtcmalloc_internal_la-thread_cache.Plo
	-rm -f src/$(DEPDIR)/libtcmalloc_la-heap-checker-bcad.Plo
	-rm -f src/$(DEPDIR)/libtcmalloc_la-heap-checker.Plo
	-rm -f src/$(DEPDIR)/libtcmalloc_la-tcmalloc.Plo
	-rm -f src/$(DEPDIR)/libtcmalloc_minimal_debug_la-debugallocation.Plo
	-rm -f src/$(DEPDIR)/libtcmalloc_minimal_internal_la-central_freelist.Plo
	-rm -f src/$(DEPDIR)/libtcmalloc_minimal_internal_la-common.Plo
	-rm -f src/$(DEPDIR)/libtcmalloc_minimal_internal_la-internal_logging.Plo
	-rm -f src/$(DEPDIR)/libtcmalloc_minimal_internal_la-malloc_extension.Plo
	-rm -f src/$(DEPDIR)/libtcmalloc_minimal_internal_la-malloc_hook.Plo
	-rm -f src/$(DEPDIR)/libtcmalloc_minimal_internal_la-memfs_malloc.Plo
	-rm -f src/$(DEPDIR)/libtcmalloc_minimal_internal_la-page_heap.Plo
	-rm -f src/$(DEPDIR)/libtcmalloc_minimal_internal_la-sampler.Plo
	-rm -f src/$(DEPDIR)/libtcmalloc_minimal_internal_la-span.Plo
	-rm -f src/$(DEPDIR)/libtcmalloc_minimal_internal_la-stack_trace_table.Plo
	-rm -f src/$(DEPDIR)/libtcmalloc_minimal_internal_la-static_vars.Plo
	-rm -f src/$(DEPDIR)/libtcmalloc_minimal_internal_la-symbolize.Plo
	-rm -f src/$(DEPDIR)/libtcmalloc_minimal_internal_la-system-alloc.Plo
	-rm -f src/$(DEPDIR)/libtcmalloc_minimal_internal_la-thread_cache.Plo
	-rm -f src/$(DEPDIR)/libtcmalloc_minimal_la-tcmalloc.Plo
	-rm -f src/$(DEPDIR)/low_level_alloc_unittest-malloc_hook.Po
	-rm -f src/$(DEPDIR)/maybe_threads.Plo
	-rm -f src/$(DEPDIR)/profile-handler.Plo
	-rm -f src/$(DEPDIR)/profiledata.Plo
	-rm -f src/$(DEPDIR)/profiler.Plo
	-rm -f src/$(DEPDIR)/stacktrace.Plo
	-rm -f src/$(DEPDIR)/tcm_min_asserts_unittest-central_freelist.Po
	-rm -f src/$(DEPDIR)/tcm_min_asserts_unittest-common.Po
	-rm -f src/$(DEPDIR)/tcm_min_asserts_unittest-internal_logging.Po
	-rm -f src/$(DEPDIR)/tcm_min_asserts_unittest-malloc_extension.Po
	-rm -f src/$(DEPDIR)/tcm_min_asserts_unittest-malloc_hook.Po
	-rm -f src/$(DEPDIR)/tcm_min_asserts_unittest-memfs_malloc.Po
	-rm -f src/$(DEPDIR)/tcm_min_asserts_unittest-page_heap.Po
	-rm -f src/$(DEPDIR)/tcm_min_asserts_unittest-sampler.Po
	-rm -f src/$(DEPDIR)/tcm_min_asserts_unittest-span.Po
	-rm -f src/$(DEPDIR)/tcm_min_asserts_unittest-stack_trace_table.Po
	-rm -f src/$(DEPDIR)/tcm_min_asserts_unittest-static_vars.Po
	-rm -f src/$(DEPDIR)/tcm_min_asserts_unittest-symbolize.Po
	-rm -f src/$(DEPDIR)/tcm_min_asserts_unittest-system-alloc.Po
	-rm -f src/$(DEPDIR)/tcm_min_asserts_unittest-tcmalloc.Po
	-rm -f src/$(DEPDIR)/tcm_min_asserts_unittest-thread_cache.Po
	-rm -f src/base/$(DEPDIR)/atomicops-internals-x86.Plo
	-rm -f src/base/$(DEPDIR)/dynamic_annotations.Plo
	-rm -f src/base/$(DEPDIR)/elf_mem_image.Plo
	-rm -f src/base/$(DEPDIR)/libtcmalloc_and_profiler_la-linuxthreads.Plo
	-rm -f src/base/$(DEPDIR)/libtcmalloc_debug_la-linuxthreads.Plo
	-rm -f src/base/$(DEPDIR)/libtcmalloc_internal_la-low_level_alloc.Plo
	-rm -f src/base/$(DEPDIR)/libtcmalloc_la-linuxthreads.Plo
	-rm -f src/base/$(DEPDIR)/logging.Plo
	-rm -f src/base/$(DEPDIR)/low_level_alloc_unittest-low_level_alloc.Po
	-rm -f src/base/$(DEPDIR)/spinlock.Plo
	-rm -f src/base/$(DEPDIR)/spinlock_internal.Plo
	-rm -f src/base/$(DEPDIR)/sysinfo.Plo
	-rm -f src/base/$(DEPDIR)/thread_lister.Plo
	-rm -f src/base/$(DEPDIR)/vdso_support.Plo
	-rm -f src/tests/$(DEPDIR)/addressmap_unittest-addressmap_unittest.Po
	-rm -f src/tests/$(DEPDIR)/atomicops_unittest.Po
	-rm -f src/tests/$(DEPDIR)/current_allocated_bytes_test-current_allocated_bytes_test.Po
	-rm -f src/tests/$(DEPDIR)/debugallocation_test-debugallocation_test.Po
	-rm -f src/tests/$(DEPDIR)/frag_unittest-frag_unittest.Po
	-rm -f src/tests/$(DEPDIR)/getpc_test.Po
	-rm -f src/tests/$(DEPDIR)/heap_checker_debug_unittest-heap-checker_unittest.Po
	-rm -f src/tests/$(DEPDIR)/heap_checker_unittest-heap-checker_unittest.Po
	-rm -f src/tests/$(DEPDIR)/heap_profiler_debug_unittest-heap-profiler_unittest.Po
	-rm -f src/tests/$(DEPDIR)/heap_profiler_unittest-heap-profiler_unittest.Po
	-rm -f src/tests/$(DEPDIR)/low_level_alloc_unittest-low_level_alloc_unittest.Po
	-rm -f src/tests/$(DEPDIR)/malloc_extension_c_test-malloc_extension_c_test.Po
	-rm -f src/tests/$(DEPDIR)/malloc_extension_debug_test-malloc_extension_test.Po
	-rm -f src/tests/$(DEPDIR)/malloc_extension_test-malloc_extension_test.Po
	-rm -f src/tests/$(DEPDIR)/malloc_hook_test-malloc_hook_test.Po
	-rm -f src/tests/$(DEPDIR)/malloc_hook_test-testutil.Po
	-rm -f src/tests/$(DEPDIR)/markidle_unittest-markidle_unittest.Po
	-rm -f src/tests/$(DEPDIR)/markidle_unittest-testutil.Po
	-rm -f src/tests/$(DEPDIR)/memalign_debug_unittest-memalign_unittest.Po
	-rm -f src/tests/$(DEPDIR)/memalign_debug_unittest-testutil.Po
	-rm -f src/tests/$(DEPDIR)/memalign_unittest-memalign_unittest.Po
	-rm -f src/tests/$(DEPDIR)/memalign_unittest-testutil.Po
	-rm -f src/tests/$(DEPDIR)/packed_cache_test-packed-cache_test.Po
	-rm -f src/tests/$(DEPDIR)/page_heap_test-page_heap_test.Po
	-rm -f src/tests/$(DEPDIR)/pagemap_unittest-pagemap_unittest.Po
	-rm -f src/tests/$(DEPDIR)/profile_handler_unittest-profile-handler_unittest.Po
	-rm -f src/tests/$(DEPDIR)/profiledata_unittest.Po
	-rm -f src/tests/$(DEPDIR)/profiler1_unittest-profiler_unittest.Po
	-rm -f src/tests/$(DEPDIR)/profiler1_unittest-testutil.Po
	-rm -f src/tests/$(DEPDIR)/profiler2_unittest-profiler_unittest.Po
	-rm -f src/tests/$(DEPDIR)/profiler2_unittest-testutil.Po
	-rm -f src/tests/$(DEPDIR)/profiler3_unittest-profiler_unittest.Po
	-rm -f src/tests/$(DEPDIR)/profiler3_unittest-testutil.Po
	-rm -f src/tests/$(DEPDIR)/profiler4_unittest-profiler_unittest.Po
	-rm -f src/tests/$(DEPDIR)/profiler4_unittest-testutil.Po
	-rm -f src/tests/$(DEPDIR)/raw_printer_test-raw_printer_test.Po
	-rm -f src/tests/$(DEPDIR)/realloc_debug_unittest-realloc_unittest.Po
	-rm -f src/tests/$(DEPDIR)/realloc_unittest-realloc_unittest.Po
	-rm -f src/tests/$(DEPDIR)/sampler_debug_test-sampler_test.Po
	-rm -f src/tests/$(DEPDIR)/sampler_test-sampler_test.Po
	-rm -f src/tests/$(DEPDIR)/sampling_debug_test-sampling_test.Po
	-rm -f src/tests/$(DEPDIR)/sampling_test-sampling_test.Po
	-rm -f src/tests/$(DEPDIR)/simple_compat_test.Po
	-rm -f src/tests/$(DEPDIR)/stack_trace_table_test-stack_trace_table_test.Po
	-rm -f src/tests/$(DEPDIR)/stacktrace_unittest.Po
	-rm -f src/tests/$(DEPDIR)/system_alloc_unittest-system-alloc_unittest.Po
	-rm -f src/tests/$(DEPDIR)/tcm_min_asserts_unittest-tcmalloc_unittest.Po
	-rm -f src/tests/$(DEPDIR)/tcm_min_asserts_unittest-testutil.Po
	-rm -f src/tests/$(DEPDIR)/tcmalloc_and_profiler_unittest-tcmalloc_unittest.Po
	-rm -f src/tests/$(DEPDIR)/tcmalloc_and_profiler_unittest-testutil.Po
	-rm -f src/tests/$(DEPDIR)/tcmalloc_both_unittest-tcmalloc_unittest.Po
	-rm -f src/tests/$(DEPDIR)/tcmalloc_both_unittest-testutil.Po
	-rm -f src/tests/$(DEPDIR)/tcmalloc_debug_unittest-tcmalloc_unittest.Po
	-rm -f src/tests/$(DEPDIR)/tcmalloc_debug_unittest-testutil.Po
	-rm -f src/tests/$(DEPDIR)/tcmalloc_large_heap_fragmentation_unittest-large_heap_fragmentation_unittest.Po
	-rm -f src/tests/$(DEPDIR)/tcmalloc_large_unittest-tcmalloc_large_unittest.Po
	-rm -f src/tests/$(DEPDIR)/tcmalloc_minimal_debug_unittest-tcmalloc_unittest.Po
	-rm -f src/tests/$(DEPDIR)/tcmalloc_minimal_debug_unittest-testutil.Po
	-rm -f src/tests/$(DEPDIR)/tcmalloc_minimal_large_heap_fragmentation_unittest-large_heap_fragmentation_unittest.Po
	-rm -f src/tests/$(DEPDIR)/tcmalloc_minimal_large_unittest-tcmalloc_large_unittest.Po
	-rm -f src/tests/$(DEPDIR)/tcmalloc_minimal_unittest-tcmalloc_unittest.Po
	-rm -f src/tests/$(DEPDIR)/tcmalloc_minimal_unittest-testutil.Po
	-rm -f src/tests/$(DEPDIR)/tcmalloc_unittest-tcmalloc_unittest.Po
	-rm -f src/tests/$(DEPDIR)/tcmalloc_unittest-testutil.Po
	-rm -f src/tests/$(DEPDIR)/thread_dealloc_unittest-testutil.Po
	-rm -f src/tests/$(DEPDIR)/thread_dealloc_unittest-thread_dealloc_unittest.Po
	-rm -f src/windows/$(DEPDIR)/addressmap_unittest-port.Po
	-rm -f src/windows/$(DEPDIR)/ia32_modrm_map.Plo
	-rm -f src/windows/$(DEPDIR)/ia32_opcode_map.Plo
	-rm -f src/windows/$(DEPDIR)/mini_disassembler.Plo
	-rm -f src/windows/$(DEPDIR)/patch_functions.Plo
	-rm -f src/windows/$(DEPDIR)/port.Plo
	-rm -f src/windows/$(DEPDIR)/preamble_patcher.Plo
	-rm -f src/windows/$(DEPDIR)/preamble_patcher_with_stub.Plo
	-rm -f src/windows/$(DEPDIR)/system-alloc.Plo
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-hdr distclean-libtool distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am: install-dist_docDATA install-googleincludeHEADERS \
	install-man install-nodist_perftoolsincludeHEADERS \
	install-perftoolsincludeHEADERS install-pkgconfigDATA

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am: install-binPROGRAMS install-binSCRIPTS \
	install-exec-local install-libLTLIBRARIES

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man: install-man1

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -f $(am__CONFIG_DISTCLEAN_FILES)
	-rm -rf $(top_srcdir)/autom4te.cache
		-rm -f benchmark/$(DEPDIR)/binary_trees-binary_trees.Po
	-rm -f benchmark/$(DEPDIR)/binary_trees_shared-binary_trees.Po
	-rm -f benchmark/$(DEPDIR)/malloc_bench-malloc_bench.Po
	-rm -f benchmark/$(DEPDIR)/malloc_bench_shared-malloc_bench.Po
	-rm -f benchmark/$(DEPDIR)/malloc_bench_shared_full-malloc_bench.Po
	-rm -f benchmark/$(DEPDIR)/run_benchmark.Plo
	-rm -f src/$(DEPDIR)/fake_stacktrace_scope.Plo
	-rm -f src/$(DEPDIR)/libtcmalloc_and_profiler_la-heap-checker-bcad.Plo
	-rm -f src/$(DEPDIR)/libtcmalloc_and_profiler_la-heap-checker.Plo
	-rm -f src/$(DEPDIR)/libtcmalloc_and_profiler_la-profile-handler.Plo
	-rm -f src/$(DEPDIR)/libtcmalloc_and_profiler_la-profiledata.Plo
	-rm -f src/$(DEPDIR)/libtcmalloc_and_profiler_la-profiler.Plo
	-rm -f src/$(DEPDIR)/libtcmalloc_and_profiler_la-tcmalloc.Plo
	-rm -f src/$(DEPDIR)/libtcmalloc_debug_la-debugallocation.Plo
	-rm -f src/$(DEPDIR)/libtcmalloc_debug_la-heap-checker-bcad.Plo
	-rm -f src/$(DEPDIR)/libtcmalloc_debug_la-heap-checker.Plo
	-rm -f src/$(DEPDIR)/libtcmalloc_internal_la-central_freelist.Plo
	-rm -f src/$(DEPDIR)/libtcmalloc_internal_la-common.Plo
	-rm -f src/$(DEPDIR)/libtcmalloc_internal_la-emergency_malloc.Plo
	-rm -f src/$(DEPDIR)/libtcmalloc_internal_la-emergency_malloc_for_stacktrace.Plo
	-rm -f src/$(DEPDIR)/libtcmalloc_internal_la-fake_stacktrace_scope.Plo
	-rm -f src/$(DEPDIR)/libtcmalloc_internal_la-heap-profile-table.Plo
	-rm -f src/$(DEPDIR)/libtcmalloc_internal_la-heap-profiler.Plo
	-rm -f src/$(DEPDIR)/libtcmalloc_internal_la-internal_logging.Plo
	-rm -f src/$(DEPDIR)/libtcmalloc_internal_la-malloc_extension.Plo
	-rm -f src/$(DEPDIR)/libtcmalloc_internal_la-malloc_hook.Plo
	-rm -f src/$(DEPDIR)/libtcmalloc_internal_la-memfs_malloc.Plo
	-rm -f src/$(DEPDIR)/libtcmalloc_internal_la-memory_region_map.Plo
	-rm -f src/$(DEPDIR)/libtcmalloc_internal_la-page_heap.Plo
	-rm -f src/$(DEPDIR)/libtcmalloc_internal_la-raw_printer.Plo
	-rm -f src/$(DEPDIR)/libtcmalloc_internal_la-sampler.Plo
	-rm -f src/$(DEPDIR)/libtcmalloc_internal_la-span.Plo
	-rm -f src/$(DEPDIR)/libtcmalloc_internal_la-stack_trace_table.Plo
	-rm -f src/$(DEPDIR)/libtcmalloc_internal_la-static_vars.Plo
	-rm -f src/$(DEPDIR)/libtcmalloc_internal_la-symbolize.Plo
	-rm -f src/$(DEPDIR)/libtcmalloc_internal_la-system-alloc.Plo
	-rm -f src/$(DEPDIR)/libtcmalloc_internal_la-thread_cache.Plo
	-rm -f src/$(DEPDIR)/libtcmalloc_la-heap-checker-bcad.Plo
	-rm -f src/$(DEPDIR)/libtcmalloc_la-heap-checker.Plo
	-rm -f src/$(DEPDIR)/libtcmalloc_la-tcmalloc.Plo
	-rm -f src/$(DEPDIR)/libtcmalloc_minimal_debug_la-debugallocation.Plo
	-rm -f src/$(DEPDIR)/libtcmalloc_minimal_internal_la-central_freelist.Plo
	-rm -f src/$(DEPDIR)/libtcmalloc_minimal_internal_la-common.Plo
	-rm -f src/$(DEPDIR)/libtcmalloc_minimal_internal_la-internal_logging.Plo
	-rm -f src/$(DEPDIR)/libtcmalloc_minimal_internal_la-malloc_extension.Plo
	-rm -f src/$(DEPDIR)/libtcmalloc_minimal_internal_la-malloc_hook.Plo
	-rm -f src/$(DEPDIR)/libtcmalloc_minimal_internal_la-memfs_malloc.Plo
	-rm -f src/$(DEPDIR)/libtcmalloc_minimal_internal_la-page_heap.Plo
	-rm -f src/$(DEPDIR)/libtcmalloc_minimal_internal_la-sampler.Plo
	-rm -f src/$(DEPDIR)/libtcmalloc_minimal_internal_la-span.Plo
	-rm -f src/$(DEPDIR)/libtcmalloc_minimal_internal_la-stack_trace_table.Plo
	-rm -f src/$(DEPDIR)/libtcmalloc_minimal_internal_la-static_vars.Plo
	-rm -f src/$(DEPDIR)/libtcmalloc_minimal_internal_la-symbolize.Plo
	-rm -f src/$(DEPDIR)/libtcmalloc_minimal_internal_la-system-alloc.Plo
	-rm -f src/$(DEPDIR)/libtcmalloc_minimal_internal_la-thread_cache.Plo
	-rm -f src/$(DEPDIR)/libtcmalloc_minimal_la-tcmalloc.Plo
	-rm -f src/$(DEPDIR)/low_level_alloc_unittest-malloc_hook.Po
	-rm -f src/$(DEPDIR)/maybe_threads.Plo
	-rm -f src/$(DEPDIR)/profile-handler.Plo
	-rm -f src/$(DEPDIR)/profiledata.Plo
	-rm -f src/$(DEPDIR)/profiler.Plo
	-rm -f src/$(DEPDIR)/stacktrace.Plo
	-rm -f src/$(DEPDIR)/tcm_min_asserts_unittest-central_freelist.Po
	-rm -f src/$(DEPDIR)/tcm_min_asserts_unittest-common.Po
	-rm -f src/$(DEPDIR)/tcm_min_asserts_unittest-internal_logging.Po
	-rm -f src/$(DEPDIR)/tcm_min_asserts_unittest-malloc_extension.Po
	-rm -f src/$(DEPDIR)/tcm_min_asserts_unittest-malloc_hook.Po
	-rm -f src/$(DEPDIR)/tcm_min_asserts_unittest-memfs_malloc.Po
	-rm -f src/$(DEPDIR)/tcm_min_asserts_unittest-page_heap.Po
	-rm -f src/$(DEPDIR)/tcm_min_asserts_unittest-sampler.Po
	-rm -f src/$(DEPDIR)/tcm_min_asserts_unittest-span.Po
	-rm -f src/$(DEPDIR)/tcm_min_asserts_unittest-stack_trace_table.Po
	-rm -f src/$(DEPDIR)/tcm_min_asserts_unittest-static_vars.Po
	-rm -f src/$(DEPDIR)/tcm_min_asserts_unittest-symbolize.Po
	-rm -f src/$(DEPDIR)/tcm_min_asserts_unittest-system-alloc.Po
	-rm -f src/$(DEPDIR)/tcm_min_asserts_unittest-tcmalloc.Po
	-rm -f src/$(DEPDIR)/tcm_min_asserts_unittest-thread_cache.Po
	-rm -f src/base/$(DEPDIR)/atomicops-internals-x86.Plo
	-rm -f src/base/$(DEPDIR)/dynamic_annotations.Plo
	-rm -f src/base/$(DEPDIR)/elf_mem_image.Plo
	-rm -f src/base/$(DEPDIR)/libtcmalloc_and_profiler_la-linuxthreads.Plo
	-rm -f src/base/$(DEPDIR)/libtcmalloc_debug_la-linuxthreads.Plo
	-rm -f src/base/$(DEPDIR)/libtcmalloc_internal_la-low_level_alloc.Plo
	-rm -f src/base/$(DEPDIR)/libtcmalloc_la-linuxthreads.Plo
	-rm -f src/base/$(DEPDIR)/logging.Plo
	-rm -f src/base/$(DEPDIR)/low_level_alloc_unittest-low_level_alloc.Po
	-rm -f src/base/$(DEPDIR)/spinlock.Plo
	-rm -f src/base/$(DEPDIR)/spinlock_internal.Plo
	-rm -f src/base/$(DEPDIR)/sysinfo.Plo
	-rm -f src/base/$(DEPDIR)/thread_lister.Plo
	-rm -f src/base/$(DEPDIR)/vdso_support.Plo
	-rm -f src/tests/$(DEPDIR)/addressmap_unittest-addressmap_unittest.Po
	-rm -f src/tests/$(DEPDIR)/atomicops_unittest.Po
	-rm -f src/tests/$(DEPDIR)/current_allocated_bytes_test-current_allocated_bytes_test.Po
	-rm -f src/tests/$(DEPDIR)/debugallocation_test-debugallocation_test.Po
	-rm -f src/tests/$(DEPDIR)/frag_unittest-frag_unittest.Po
	-rm -f src/tests/$(DEPDIR)/getpc_test.Po
	-rm -f src/tests/$(DEPDIR)/heap_checker_debug_unittest-heap-checker_unittest.Po
	-rm -f src/tests/$(DEPDIR)/heap_checker_unittest-heap-checker_unittest.Po
	-rm -f src/tests/$(DEPDIR)/heap_profiler_debug_unittest-heap-profiler_unittest.Po
	-rm -f src/tests/$(DEPDIR)/heap_profiler_unittest-heap-profiler_unittest.Po
	-rm -f src/tests/$(DEPDIR)/low_level_alloc_unittest-low_level_alloc_unittest.Po
	-rm -f src/tests/$(DEPDIR)/malloc_extension_c_test-malloc_extension_c_test.Po
	-rm -f src/tests/$(DEPDIR)/malloc_extension_debug_test-malloc_extension_test.Po
	-rm -f src/tests/$(DEPDIR)/malloc_extension_test-malloc_extension_test.Po
	-rm -f src/tests/$(DEPDIR)/malloc_hook_test-malloc_hook_test.Po
	-rm -f src/tests/$(DEPDIR)/malloc_hook_test-testutil.Po
	-rm -f src/tests/$(DEPDIR)/markidle_unittest-markidle_unittest.Po
	-rm -f src/tests/$(DEPDIR)/markidle_unittest-testutil.Po
	-rm -f src/tests/$(DEPDIR)/memalign_debug_unittest-memalign_unittest.Po
	-rm -f src/tests/$(DEPDIR)/memalign_debug_unittest-testutil.Po
	-rm -f src/tests/$(DEPDIR)/memalign_unittest-memalign_unittest.Po
	-rm -f src/tests/$(DEPDIR)/memalign_unittest-testutil.Po
	-rm -f src/tests/$(DEPDIR)/packed_cache_test-packed-cache_test.Po
	-rm -f src/tests/$(DEPDIR)/page_heap_test-page_heap_test.Po
	-rm -f src/tests/$(DEPDIR)/pagemap_unittest-pagemap_unittest.Po
	-rm -f src/tests/$(DEPDIR)/profile_handler_unittest-profile-handler_unittest.Po
	-rm -f src/tests/$(DEPDIR)/profiledata_unittest.Po
	-rm -f src/tests/$(DEPDIR)/profiler1_unittest-profiler_unittest.Po
	-rm -f src/tests/$(DEPDIR)/profiler1_unittest-testutil.Po
	-rm -f src/tests/$(DEPDIR)/profiler2_unittest-profiler_unittest.Po
	-rm -f src/tests/$(DEPDIR)/profiler2_unittest-testutil.Po
	-rm -f src/tests/$(DEPDIR)/profiler3_unittest-profiler_unittest.Po
	-rm -f src/tests/$(DEPDIR)/profiler3_unittest-testutil.Po
	-rm -f src/tests/$(DEPDIR)/profiler4_unittest-profiler_unittest.Po
	-rm -f src/tests/$(DEPDIR)/profiler4_unittest-testutil.Po
	-rm -f src/tests/$(DEPDIR)/raw_printer_test-raw_printer_test.Po
	-rm -f src/tests/$(DEPDIR)/realloc_debug_unittest-realloc_unittest.Po
	-rm -f src/tests/$(DEPDIR)/realloc_unittest-realloc_unittest.Po
	-rm -f src/tests/$(DEPDIR)/sampler_debug_test-sampler_test.Po
	-rm -f src/tests/$(DEPDIR)/sampler_test-sampler_test.Po
	-rm -f src/tests/$(DEPDIR)/sampling_debug_test-sampling_test.Po
	-rm -f src/tests/$(DEPDIR)/sampling_test-sampling_test.Po
	-rm -f src/tests/$(DEPDIR)/simple_compat_test.Po
	-rm -f src/tests/$(DEPDIR)/stack_trace_table_test-stack_trace_table_test.Po
	-rm -f src/tests/$(DEPDIR)/stacktrace_unittest.Po
	-rm -f src/tests/$(DEPDIR)/system_alloc_unittest-system-alloc_unittest.Po
	-rm -f src/tests/$(DEPDIR)/tcm_min_asserts_unittest-tcmalloc_unittest.Po
	-rm -f src/tests/$(DEPDIR)/tcm_min_asserts_unittest-testutil.Po
	-rm -f src/tests/$(DEPDIR)/tcmalloc_and_profiler_unittest-tcmalloc_unittest.Po
	-rm -f src/tests/$(DEPDIR)/tcmalloc_and_profiler_unittest-testutil.Po
	-rm -f src/tests/$(DEPDIR)/tcmalloc_both_unittest-tcmalloc_unittest.Po
	-rm -f src/tests/$(DEPDIR)/tcmalloc_both_unittest-testutil.Po
	-rm -f src/tests/$(DEPDIR)/tcmalloc_debug_unittest-tcmalloc_unittest.Po
	-rm -f src/tests/$(DEPDIR)/tcmalloc_debug_unittest-testutil.Po
	-rm -f src/tests/$(DEPDIR)/tcmalloc_large_heap_fragmentation_unittest-large_heap_fragmentation_unittest.Po
	-rm -f src/tests/$(DEPDIR)/tcmalloc_large_unittest-tcmalloc_large_unittest.Po
	-rm -f src/tests/$(DEPDIR)/tcmalloc_minimal_debug_unittest-tcmalloc_unittest.Po
	-rm -f src/tests/$(DEPDIR)/tcmalloc_minimal_debug_unittest-testutil.Po
	-rm -f src/tests/$(DEPDIR)/tcmalloc_minimal_large_heap_fragmentation_unittest-large_heap_fragmentation_unittest.Po
	-rm -f src/tests/$(DEPDIR)/tcmalloc_minimal_large_unittest-tcmalloc_large_unittest.Po
	-rm -f src/tests/$(DEPDIR)/tcmalloc_minimal_unittest-tcmalloc_unittest.Po
	-rm -f src/tests/$(DEPDIR)/tcmalloc_minimal_unittest-testutil.Po
	-rm -f src/tests/$(DEPDIR)/tcmalloc_unittest-tcmalloc_unittest.Po
	-rm -f src/tests/$(DEPDIR)/tcmalloc_unittest-testutil.Po
	-rm -f src/tests/$(DEPDIR)/thread_dealloc_unittest-testutil.Po
	-rm -f src/tests/$(DEPDIR)/thread_dealloc_unittest-thread_dealloc_unittest.Po
	-rm -f src/windows/$(DEPDIR)/addressmap_unittest-port.Po
	-rm -f src/windows/$(DEPDIR)/ia32_modrm_map.Plo
	-rm -f src/windows/$(DEPDIR)/ia32_opcode_map.Plo
	-rm -f src/windows/$(DEPDIR)/mini_disassembler.Plo
	-rm -f src/windows/$(DEPDIR)/patch_functions.Plo
	-rm -f src/windows/$(DEPDIR)/port.Plo
	-rm -f src/windows/$(DEPDIR)/preamble_patcher.Plo
	-rm -f src/windows/$(DEPDIR)/preamble_patcher_with_stub.Plo
	-rm -f src/windows/$(DEPDIR)/system-alloc.Plo
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-binPROGRAMS uninstall-binSCRIPTS \
	uninstall-dist_docDATA uninstall-googleincludeHEADERS \
	uninstall-libLTLIBRARIES uninstall-man \
	uninstall-nodist_perftoolsincludeHEADERS \
	uninstall-perftoolsincludeHEADERS uninstall-pkgconfigDATA

uninstall-man: uninstall-man1

.MAKE: check-am install-am install-strip

.PHONY: CTAGS GTAGS TAGS all all-am all-local am--depfiles am--refresh \
	check check-TESTS check-am clean clean-binPROGRAMS \
	clean-cscope clean-generic clean-libLTLIBRARIES clean-libtool \
	clean-noinstLTLIBRARIES clean-noinstPROGRAMS cscope \
	cscopelist-am ctags ctags-am dist dist-all dist-bzip2 \
	dist-gzip dist-hook dist-lzip dist-shar dist-tarZ dist-xz \
	dist-zip distcheck distclean distclean-compile \
	distclean-generic distclean-hdr distclean-libtool \
	distclean-tags distcleancheck distdir distuninstallcheck dvi \
	dvi-am html html-am info info-am install install-am \
	install-binPROGRAMS install-binSCRIPTS install-data \
	install-data-am install-dist_docDATA install-dvi \
	install-dvi-am install-exec install-exec-am install-exec-local \
	install-googleincludeHEADERS install-html install-html-am \
	install-info install-info-am install-libLTLIBRARIES \
	install-man install-man1 \
	install-nodist_perftoolsincludeHEADERS install-pdf \
	install-pdf-am install-perftoolsincludeHEADERS \
	install-pkgconfigDATA install-ps install-ps-am install-strip \
	installcheck installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	recheck tags tags-am uninstall uninstall-am \
	uninstall-binPROGRAMS uninstall-binSCRIPTS \
	uninstall-dist_docDATA uninstall-googleincludeHEADERS \
	uninstall-libLTLIBRARIES uninstall-man uninstall-man1 \
	uninstall-nodist_perftoolsincludeHEADERS \
	uninstall-perftoolsincludeHEADERS uninstall-pkgconfigDATA

.PRECIOUS: Makefile

#  # TODO(csilvers): check if -fomit-frame-pointer might be in $(CXXFLAGS),
#  #                 before setting this.

pprof-symbolize : $(top_srcdir)/src/pprof
	cp -p $(top_srcdir)/src/pprof $@
pprof_unittest: $(top_srcdir)/src/pprof
	$(top_srcdir)/src/pprof -test
# This script preloads libtcmalloc, and calls two other binaries as well
# TODO(csilvers): replace by 'if ! cmp $^ $@ >/dev/null 2>&; then ...; fi'
#maybe_threads_unittest.sh$(EXEEXT): $(top_srcdir)/$(maybe_threads_unittest_sh_SOURCES) \
#                           $(LIBTCMALLOC_MINIMAL) \
#                           low_level_alloc_unittest
#	rm -f $@
#	cp -p $(top_srcdir)/$(maybe_threads_unittest_sh_SOURCES) $@
debugallocation_test.sh$(EXEEXT): $(top_srcdir)/$(debugallocation_test_sh_SOURCES) \
                                  debugallocation_test
	rm -f $@
	cp -p $(top_srcdir)/$(debugallocation_test_sh_SOURCES) $@
tcmalloc_unittest.sh$(EXEEXT): $(top_srcdir)/$(tcmalloc_unittest_sh_SOURCES) \
                               tcmalloc_unittest
	rm -f $@
	cp -p $(top_srcdir)/$(tcmalloc_unittest_sh_SOURCES) $@
sampling_test.sh$(EXEEXT): $(top_srcdir)/$(sampling_test_sh_SOURCES) \
                           sampling_test
	rm -f $@
	cp -p $(top_srcdir)/$(sampling_test_sh_SOURCES) $@
heap-profiler_unittest.sh$(EXEEXT): $(top_srcdir)/$(heap_profiler_unittest_sh_SOURCES) \
                                    heap-profiler_unittest
	rm -f $@
	cp -p $(top_srcdir)/$(heap_profiler_unittest_sh_SOURCES) $@
#heap-checker_unittest.sh$(EXEEXT): $(top_srcdir)/$(heap_checker_unittest_sh_SOURCES) \
#                                   heap-checker_unittest
#	rm -f $@
#	cp -p $(top_srcdir)/$(heap_checker_unittest_sh_SOURCES) $@
#heap-checker-death_unittest.sh$(EXEEXT): $(heap_checker_death_unittest_sh_SOURCES) \
#                                         heap-checker_unittest
#	rm -f $@
#	cp -p $(top_srcdir)/$(heap_checker_death_unittest_sh_SOURCES) $@
sampling_debug_test.sh$(EXEEXT): $(top_srcdir)/$(sampling_test_sh_SOURCES) \
                                 sampling_debug_test
	rm -f $@
	cp -p $(top_srcdir)/$(sampling_test_sh_SOURCES) $@
heap-profiler_debug_unittest.sh$(EXEEXT): $(top_srcdir)/$(heap_profiler_unittest_sh_SOURCES) \
                                    heap-profiler_debug_unittest
	rm -f $@
	cp -p $(top_srcdir)/$(heap_profiler_unittest_sh_SOURCES) $@
#heap-checker_debug_unittest.sh$(EXEEXT): $(top_srcdir)/$(heap_checker_unittest_sh_SOURCES) \
#                                   heap-checker_debug_unittest
#	rm -f $@
#	cp -p $(top_srcdir)/$(heap_checker_unittest_sh_SOURCES) $@
profiler_unittest.sh$(EXEEXT): $(top_srcdir)/$(profiler_unittest_sh_SOURCES) \
                               profiler1_unittest profiler2_unittest \
                               profiler3_unittest profiler4_unittest
	rm -f $@
	cp -p $(top_srcdir)/$(profiler_unittest_sh_SOURCES) $@

# Do the weakening on some exported libtcmalloc symbols.
install-exec-local: all-local
all-local: $(LIBS_TO_WEAKEN)
	for la in $(LIBS_TO_WEAKEN); do lib=".libs/`basename $$la .la`.a"; [ ! -f "$$lib" ] || $(WEAKEN) "$$lib"; done

rpm: dist-gzip packages/rpm.sh packages/rpm/rpm.spec
	@cd packages && ./rpm.sh ${PACKAGE} ${VERSION}

deb: dist-gzip packages/deb.sh packages/deb/*
	@cd packages && ./deb.sh ${PACKAGE} ${VERSION}

# I get the description and URL lines from the rpm spec. I use sed to
# try to rewrite exec_prefix, libdir, and includedir in terms of
# prefix, if possible.
libtcmalloc.pc: Makefile packages/rpm/rpm.spec
	echo 'prefix=$(prefix)' > "$@".tmp
	echo 'exec_prefix='`echo '$(exec_prefix)' | sed 's@^$(prefix)@$${prefix}@'` >> "$@".tmp
	echo 'libdir='`echo '$(libdir)' | sed 's@^$(exec_prefix)@$${exec_prefix}@'` >> "$@".tmp
	echo 'includedir='`echo '$(includedir)' | sed 's@^$(prefix)@$${prefix}@'` >> "$@".tmp
	echo '' >> "$@".tmp
	echo 'Name: $(PACKAGE)' >> "$@".tmp
	echo 'Version: $(VERSION)' >> "$@".tmp
	-grep '^Summary:' $(top_srcdir)/packages/rpm/rpm.spec | sed s/^Summary:/Description:/ | head -n1 >> "$@".tmp
	-grep '^URL: ' $(top_srcdir)/packages/rpm/rpm.spec >> "$@".tmp
	echo 'Requires:' >> "$@".tmp
	echo 'Libs: -L$${libdir} -ltcmalloc' >> "$@".tmp
	echo 'Libs.private: $(PTHREAD_CFLAGS) $(PTHREAD_LIBS)' >> "$@".tmp
	echo 'Cflags: -I$${includedir}' >> "$@".tmp
	mv -f "$@".tmp "$@"

# The other versions are mostly the same.
libtcmalloc_minimal.pc: libtcmalloc.pc
	cat libtcmalloc.pc | sed s/-ltcmalloc/-ltcmalloc_minimal/ > "$@"

libtcmalloc_debug.pc: libtcmalloc.pc
	cat libtcmalloc.pc | sed s/-ltcmalloc/-ltcmalloc_debug/ > "$@"

libtcmalloc_minimal_debug.pc: libtcmalloc.pc
	cat libtcmalloc.pc | sed s/-ltcmalloc/-ltcmalloc_minimal_debug/ > "$@"

libprofiler.pc: libtcmalloc.pc
	cat libtcmalloc.pc | sed s/-ltcmalloc/-lprofiler/ > "$@"

libtool: $(LIBTOOL_DEPS)
	$(SHELL) ./config.status --recheck


# Generate ChangeLog
#
# Optional:
#  - CHANGELOG_START: git commit ID or tag name to output changelogs from
#    (exclusive). (Default: include all commits)
#  - CHANGELOG_GIT_FLAGS: General flags to pass to git-log when generating the
#    ChangeLog. (Default: various)
#  - CHANGELOG_GIT_DIR: .git directory to use. (Default: $(top_srcdir)/.git)

# git-specific
CHANGELOG_GIT_FLAGS ?= --stat -M -C --name-status --no-color
CHANGELOG_GIT_DIR ?= $(top_srcdir)/.git

ifeq ($(CHANGELOG_START),)
CHANGELOG_GIT_RANGE =
else
CHANGELOG_GIT_RANGE = $(CHANGELOG_START)..
endif

# Generate a ChangeLog in $(top_distdir)
dist-ChangeLog:
	$(AM_V_GEN)if $(GIT) \
		--git-dir=$(CHANGELOG_GIT_DIR) --work-tree=$(top_srcdir) log \
		$(CHANGELOG_GIT_FLAGS) $(CHANGELOG_GIT_RANGE) \
		| fmt --split-only >.ChangeLog.tmp; \
	then mv -f .ChangeLog.tmp "$(top_distdir)/ChangeLog"; \
	else rm -f .ChangeLog.tmp; exit 1; fi

.PHONY: dist-ChangeLog


# Windows wants write permission to .vcxproj files and maybe even sln files.
dist-hook: dist-ChangeLog
	test -e "$(distdir)/vsprojects" \
	   && chmod -R u+w $(distdir)/*.sln $(distdir)/vsprojects/

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
